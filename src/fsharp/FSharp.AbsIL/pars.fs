// Implementation file for parser generated by fsyacc
module internal Microsoft.FSharp.Compiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Compiler
open Internal.Utilities.Text.Lexing
open Internal.Utilities.Text.Parsing.ParseHelpers
# 1 "..\pars.fsy"

//----------------------------------------------------------------------------
//
// Copyright (c) 2002-2012 Microsoft Corporation. 
//
// This source code is subject to terms and conditions of the Apache License, Version 2.0. A 
// copy of the license can be found in the License.html file at the root of this distribution. 
// By using this source code in any fashion, you are agreeing to be bound 
// by the terms of the Apache License, Version 2.0.
//
// You must not remove this notice, or any other, from this software.
//----------------------------------------------------------------------------

#nowarn "1182"  // generated code has lots of unused "parseState"

open Internal.Utilities

open Microsoft.FSharp.Compiler.AbstractIL
open Microsoft.FSharp.Compiler.AbstractIL.Internal
open Microsoft.FSharp.Compiler.AbstractIL.Internal.Library
open Microsoft.FSharp.Compiler
open Internal.Utilities.Text.Parsing

open System
open Microsoft.FSharp.Compiler.Range
open Microsoft.FSharp.Compiler.Ast
open Microsoft.FSharp.Compiler.Lib
open Microsoft.FSharp.Compiler.PrettyNaming
open Microsoft.FSharp.Compiler.ErrorLogger

#if DEBUG
let debugPrint(s) =
    if Internal.Utilities.Text.Parsing.Flags.debug then 
        printfn "\n%s" s
#else
let debugPrint(s) = ignore s
#endif

let exprFromParseError (e:SynExpr) = SynExpr.FromParseError(e,e.Range)
let patFromParseError (e:SynPat) = SynPat.FromParseError(e, e.Range)

let mkSynOptionalExpr m xopt = 
    match xopt with 
    | None -> mkSynLidGet m Ast.FSharpLib.CorePath "None"
    | Some x  -> SynExpr.App(ExprAtomicFlag.NonAtomic, false, mkSynLidGet m Ast.FSharpLib.CorePath "Some",x,m)

// record bindings returned by the recdExprBindings rule has shape:
// (binding, separator-before-this-binding)
// this function converts arguments from form
// binding1 (binding2*sep1, binding3*sep2...) sepN
// to form
// binding1*sep1, binding2*sep2
let rebindRanges first fields lastSep = 
    let rec run (name, value) l acc = 
        match l with
        | [] -> List.rev ((name, value, lastSep)::acc)
        | (f, m)::xs -> run f xs ((name, value, m)::acc)
    run first fields []

let mkUnderscoreRecdField m = LongIdentWithDots([ident("_", m)], []), false
let mkRecdField lidwd = lidwd, true

let mkSynDoBinding (vis,strict,expr,m) = 
    if isSome vis then errorR(Error(FSComp.SR.parsDoCannotHaveVisibilityDeclarations(),m));
    Binding (None,
             (if strict then DoBinding else StandaloneExpression),
             false,false,[],PreXmlDoc.Empty,SynInfo.emptySynValData,
             (if strict then SynPat.Const(SynConst.Unit,m) else SynPat.Wild m),
             None,expr,m,NoSequencePointAtDoBinding)

let mkSynDoDecl (e: SynExpr) = 
    let spExpr = if IsControlFlowExpression e then NoSequencePointAtDoBinding else SequencePointAtBinding e.Range in
    SynModuleDecl.DoExpr(spExpr, e, e.Range)

let addAttribs attrs p =  SynPat.Attrib(p,attrs,p.Range)


// This function is called by the generated parser code. Returning initiates error recovery 
// It must be called precisely "parse_error_rich"
let parse_error_rich = Some (fun (ctxt: ParseErrorContext<_>) -> 
    errorR(SyntaxError(box ctxt, ctxt.ParseState.LexBuffer.LexemeRange)))

let reportParseErrorAt m s = errorR(Error(s,m))

let unionRangeWithPos (r:range) p =
    let r2 = mkRange r.FileName p p
    unionRanges r r2

let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_,_,m)                      -> reportParseErrorAt m (FSComp.SR.parsEofInHashIf())
  | LexCont.String (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInString())
  | LexCont.TripleQuoteString (_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteString())
  | LexCont.VerbatimString (_,m)                  -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())
  | LexCont.Comment (_,_,m)                       -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.SingleLineComment (_,_,m)             -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.StringInComment (_,_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())
  | LexCont.VerbatimStringInComment (_,_,m)       -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())
  | LexCont.TripleQuoteStringInComment (_,_,m)    -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteStringInComment())
  | LexCont.MLOnly (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())
  | LexCont.EndLine(LexerEndlineContinuation.Skip(_,_,m)) -> reportParseErrorAt m (FSComp.SR.parsEofInDirective())
  | LexCont.EndLine(LexerEndlineContinuation.Token(stack))
  | LexCont.Token(stack) -> 
      match stack with 
      | [] -> ()
      | (_,m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())

//                BindingSetPreAttrs(letRange, isRec, isUse, builderFunction, wholeRange)
type BindingSet = BindingSetPreAttrs of range * bool * bool * (SynAttributes -> SynAccess option -> SynAttributes * SynBinding list) * range

let mkClassMemberLocalBindings(isStatic,initialRangeOpt,attrs,vis,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,bindingSetRange)) = 
   let ignoredFreeAttrs,decls = declsPreAttrs attrs vis
   let wholeRange = 
       match initialRangeOpt with 
       | None -> bindingSetRange
       | Some m -> unionRanges m bindingSetRange
   if nonNil ignoredFreeAttrs then warning(Error(FSComp.SR.parsAttributesIgnored(),wholeRange));
   if isUse then errorR(Error(FSComp.SR.parsUseBindingsIllegalInImplicitClassConstructors(),wholeRange));
   SynMemberDefn.LetBindings (decls,isStatic,isRec,wholeRange)

let mkLocalBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_),body) = 
   let ignoredFreeAttrs,decls = declsPreAttrs [] None 
   if nonNil ignoredFreeAttrs then warning(Error(FSComp.SR.parsAttributesIgnored(),mWhole));
   SynExpr.LetOrUse (isRec,isUse,decls,body,mWhole) 

let mkDefnBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_bindingSetRange),attrs,vis,attrsm) = 
    if isUse then warning(Error(FSComp.SR.parsUseBindingsIllegalInModules(),mWhole));
    let freeAttrs,decls = declsPreAttrs attrs vis 
    let letDecls = [ SynModuleDecl.Let (isRec,decls,mWhole) ] 
    let attrDecls = if nonNil freeAttrs then [ SynModuleDecl.Attributes (freeAttrs,attrsm) ] else [] 
    attrDecls @ letDecls

let idOfPat m p = 
    match p with 
    | SynPat.Named (SynPat.Wild _,id,false,_,_) -> id 
    | SynPat.LongIdent(LongIdentWithDots([id],_),_,_,_,_,_) -> id
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if nonNil a1 && nonNil a2 then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed());
    a1 @ a2

let grabXmlDoc(parseState:IParseState,elemIdx) = 
    LexbufLocalXmlDocStore.GrabXmlDocBeforeMarker(parseState.LexBuffer,rhs parseState elemIdx)

let unionRangeWithListBy projectRangeFromThing m listOfThing = 
    (m, listOfThing) ||> List.fold (fun m thing -> unionRanges m (projectRangeFromThing thing))

let rangeOfNonNilAttrs(attrs:SynAttributes) =
    (attrs.Head.Range,attrs.Tail) ||> unionRangeWithListBy (fun a -> a.Range)

let rangeOfLongIdent(lid:LongIdent) =
    System.Diagnostics.Debug.Assert(not lid.IsEmpty, "the parser should never produce a long-id that is the empty list") 
    (lid.Head.idRange,lid) ||> unionRangeWithListBy (fun id -> id.idRange) 


# 169 "pars.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (range * string * Ast.LexerWhitespaceContinuation)
  | HASH_ELSE of (range * string * Ast.LexerWhitespaceContinuation)
  | HASH_ENDIF of (range * string * Ast.LexerWhitespaceContinuation)
  | COMMENT of (Ast.LexerWhitespaceContinuation)
  | WHITESPACE of (Ast.LexerWhitespaceContinuation)
  | HASH_LINE of (Ast.LexerWhitespaceContinuation)
  | HASH_LIGHT of (Ast.LexerWhitespaceContinuation)
  | INACTIVECODE of (Ast.LexerWhitespaceContinuation)
  | LINE_COMMENT of (Ast.LexerWhitespaceContinuation)
  | STRING_TEXT of (Ast.LexerWhitespaceContinuation)
  | EOF of (Ast.LexerWhitespaceContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | OBLOCKEND_COMING_SOON
  | OBLOCKEND_IS_HERE
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OTHEN
  | ODO_BANG
  | ODO
  | OBINDER of (string)
  | OLET of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | TYPE_COMING_SOON
  | TYPE_IS_HERE
  | MODULE_COMING_SOON
  | MODULE_IS_HERE
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE
  | RBRACE_COMING_SOON
  | RBRACE_IS_HERE
  | MINUS
  | DOLLAR
  | LBRACE_LESS
  | BAR_RBRACK
  | GREATER_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACK_LESS
  | LBRACE
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | RPAREN_COMING_SOON
  | RPAREN_IS_HERE
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | OPEN
  | OR
  | REC
  | THEN
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | CONST
  | LAZY
  | OLAZY
  | MATCH
  | MUTABLE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | JOIN_IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD of (bool)
  | YIELD_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | NATIVEINT of (int64)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string)
  | STRING of (string)
  | BYTEARRAY of (byte[])
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_OBLOCKEND_COMING_SOON
    | TOKEN_OBLOCKEND_IS_HERE
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_TYPE_COMING_SOON
    | TOKEN_TYPE_IS_HERE
    | TOKEN_MODULE_COMING_SOON
    | TOKEN_MODULE_IS_HERE
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE
    | TOKEN_RBRACE_COMING_SOON
    | TOKEN_RBRACE_IS_HERE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_LBRACE_LESS
    | TOKEN_BAR_RBRACK
    | TOKEN_GREATER_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_LBRACE
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_RPAREN_COMING_SOON
    | TOKEN_RPAREN_IS_HERE
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_CONST
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MUTABLE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_JOIN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD
    | TOKEN_YIELD_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_NATIVEINT
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startsignatureFile
    | NONTERM__startimplementationFile
    | NONTERM__startinteraction
    | NONTERM_interaction
    | NONTERM_hashDirective
    | NONTERM_stringOrKeywordString
    | NONTERM_hashDirectiveArg
    | NONTERM_hashDirectiveArgs
    | NONTERM_interactiveTerminator
    | NONTERM_interactiveItemsTerminator
    | NONTERM_interactiveModuleDefns
    | NONTERM_interactiveExpr
    | NONTERM_interactiveHash
    | NONTERM_signatureFile
    | NONTERM_implementationFile
    | NONTERM_moduleIntro
    | NONTERM_namespaceIntro
    | NONTERM_fileNamespaceSpecs
    | NONTERM_fileNamespaceSpecList
    | NONTERM_fileNamespaceSpec
    | NONTERM_fileNamespaceImpls
    | NONTERM_fileNamespaceImplList
    | NONTERM_fileNamespaceImpl
    | NONTERM_fileModuleSpec
    | NONTERM_fileModuleImpl
    | NONTERM_moduleSpfnsPossiblyEmptyBlock
    | NONTERM_moduleSpfnsPossiblyEmpty
    | NONTERM_moduleSpfns
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_moduleDefn
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_opt_signature
    | NONTERM_tyconDefnAugmentation
    | NONTERM_moduleSpfn
    | NONTERM_valSpfn
    | NONTERM_opt_literalValue
    | NONTERM_moduleSpecBlock
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_tyconSpfns
    | NONTERM_tyconSpfnList
    | NONTERM_tyconSpfn
    | NONTERM_tyconSpfnRhsBlock
    | NONTERM_tyconSpfnRhs
    | NONTERM_tyconClassSpfn
    | NONTERM_classSpfnBlockKindUnspecified
    | NONTERM_classSpfnBlock
    | NONTERM_classSpfnMembers
    | NONTERM_classSpfnMembersAtLeastOne
    | NONTERM_memberFlags
    | NONTERM_memberSpecFlags
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_classMemberSpfn
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_tyconDefnRhs
    | NONTERM_tyconClassDefn
    | NONTERM_classDefnBlockKindUnspecified
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMembersAtLeastOne
    | NONTERM_classDefnMemberGetSet
    | NONTERM_classDefnMemberGetSetElements
    | NONTERM_classDefnMemberGetSetElement
    | NONTERM_memberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_valDefnDecl
    | NONTERM_autoPropsDefnDecl
    | NONTERM_opt_typ
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_access
    | NONTERM_access
    | NONTERM_opt_declVisibility
    | NONTERM_opt_interfaceImplDefn
    | NONTERM_opt_classDefn
    | NONTERM_opt_classSpfn
    | NONTERM_inheritsDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_objectImplementationBlock
    | NONTERM_objectImplementationMembers
    | NONTERM_objectImplementationMember
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_braceFieldDeclList
    | NONTERM_inlineAssemblyTyconRepr
    | NONTERM_classOrInterfaceOrStruct
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_prefixTyparDecls
    | NONTERM_prefixTyparDeclList
    | NONTERM_typarDecl
    | NONTERM_postfixTyparDecls
    | NONTERM_explicitValTyparDeclsCore
    | NONTERM_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls2
    | NONTERM_opt_typeConstraints
    | NONTERM_typeConstraints
    | NONTERM_typeConstraint
    | NONTERM_typarAlts
    | NONTERM_unionRepr
    | NONTERM_barAndgrabXmlDoc
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_exconDefn
    | NONTERM_exconSpfn
    | NONTERM_exceptionAndGrabDoc
    | NONTERM_exconCore
    | NONTERM_exconIntro
    | NONTERM_exconRepr
    | NONTERM_openDecl
    | NONTERM_defnBindings
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_cPrototype
    | NONTERM_cArgs
    | NONTERM_cMoreArgs
    | NONTERM_cArg
    | NONTERM_cType
    | NONTERM_cRetType
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_simplePattern
    | NONTERM_simplePatternCommaList
    | NONTERM_simplePatterns
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_constrPattern
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_typedSeqExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSeqExprBlockR
    | NONTERM_typedSeqExpr
    | NONTERM_seqExpr
    | NONTERM_recover
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_optRange
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_quoteExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_staticallyKnownHeadTyparAlts
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_listExprElements
    | NONTERM_monadicExprInitial
    | NONTERM_rangeSequenceExpr
    | NONTERM_monadicSingleLineQualifiersThenArrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_forLoopRange
    | NONTERM_inlineAssemblyExpr
    | NONTERM_opt_curriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_opt_inlineAssemblyTypeArg
    | NONTERM_opt_inlineAssemblyReturnTypes
    | NONTERM_recdExpr
    | NONTERM_opt_seps_recd
    | NONTERM_seps_recd
    | NONTERM_pathOrUnderscore
    | NONTERM_recdExprBindings
    | NONTERM_recdBinding
    | NONTERM_objExpr
    | NONTERM_objExprBaseCall
    | NONTERM_opt_objExprBindings
    | NONTERM_objExprBindings
    | NONTERM_objExprInterfaces
    | NONTERM_opt_objExprInterfaces
    | NONTERM_objExprInterface
    | NONTERM_forLoopDirection
    | NONTERM_anonLambdaExpr
    | NONTERM_anonMatchingExpr
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_tupleTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrefixArguments
    | NONTERM_typeArgListElements
    | NONTERM_powerType
    | NONTERM_appTypeNonAtomicDeprecated
    | NONTERM_powerTypeNonAtomicDeprecated
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_typeArgActual
    | NONTERM_typeArgActualOrDummyIfEmpty
    | NONTERM_dummyTypeArg
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_barName
    | NONTERM_barNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_interactiveSeparators
    | NONTERM_opt_interactiveSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_opt_HASH
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP
    | NONTERM_type_keyword
    | NONTERM_module_keyword
    | NONTERM_rbrace
    | NONTERM_rparen
    | NONTERM_oblockend
    | NONTERM_ends_other_than_rparen_coming_soon_or_recover
    | NONTERM_ends_coming_soon_or_recover

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | OINTERFACE_MEMBER  -> 13 
  | OBLOCKEND  -> 14 
  | OBLOCKEND_COMING_SOON  -> 15 
  | OBLOCKEND_IS_HERE  -> 16 
  | ORIGHT_BLOCK_END  -> 17 
  | ODECLEND  -> 18 
  | OEND  -> 19 
  | OBLOCKSEP  -> 20 
  | OBLOCKBEGIN  -> 21 
  | ORESET  -> 22 
  | OFUN  -> 23 
  | OFUNCTION  -> 24 
  | OWITH  -> 25 
  | OELSE  -> 26 
  | OTHEN  -> 27 
  | ODO_BANG  -> 28 
  | ODO  -> 29 
  | OBINDER _ -> 30 
  | OLET _ -> 31 
  | HIGH_PRECEDENCE_TYAPP  -> 32 
  | HIGH_PRECEDENCE_PAREN_APP  -> 33 
  | HIGH_PRECEDENCE_BRACK_APP  -> 34 
  | TYPE_COMING_SOON  -> 35 
  | TYPE_IS_HERE  -> 36 
  | MODULE_COMING_SOON  -> 37 
  | MODULE_IS_HERE  -> 38 
  | EXTERN  -> 39 
  | VOID  -> 40 
  | PUBLIC  -> 41 
  | PRIVATE  -> 42 
  | INTERNAL  -> 43 
  | GLOBAL  -> 44 
  | STATIC  -> 45 
  | MEMBER  -> 46 
  | CLASS  -> 47 
  | ABSTRACT  -> 48 
  | OVERRIDE  -> 49 
  | DEFAULT  -> 50 
  | CONSTRUCTOR  -> 51 
  | INHERIT  -> 52 
  | GREATER_RBRACK  -> 53 
  | STRUCT  -> 54 
  | SIG  -> 55 
  | BAR  -> 56 
  | RBRACK  -> 57 
  | RBRACE  -> 58 
  | RBRACE_COMING_SOON  -> 59 
  | RBRACE_IS_HERE  -> 60 
  | MINUS  -> 61 
  | DOLLAR  -> 62 
  | LBRACE_LESS  -> 63 
  | BAR_RBRACK  -> 64 
  | GREATER_RBRACE  -> 65 
  | UNDERSCORE  -> 66 
  | SEMICOLON_SEMICOLON  -> 67 
  | LARROW  -> 68 
  | EQUALS  -> 69 
  | LBRACK  -> 70 
  | LBRACK_BAR  -> 71 
  | LBRACK_LESS  -> 72 
  | LBRACE  -> 73 
  | QMARK  -> 74 
  | QMARK_QMARK  -> 75 
  | DOT  -> 76 
  | COLON  -> 77 
  | COLON_COLON  -> 78 
  | COLON_GREATER  -> 79 
  | COLON_QMARK_GREATER  -> 80 
  | COLON_QMARK  -> 81 
  | COLON_EQUALS  -> 82 
  | SEMICOLON  -> 83 
  | WHEN  -> 84 
  | WHILE  -> 85 
  | WITH  -> 86 
  | HASH  -> 87 
  | AMP  -> 88 
  | AMP_AMP  -> 89 
  | QUOTE  -> 90 
  | LPAREN  -> 91 
  | RPAREN  -> 92 
  | RPAREN_COMING_SOON  -> 93 
  | RPAREN_IS_HERE  -> 94 
  | STAR  -> 95 
  | COMMA  -> 96 
  | RARROW  -> 97 
  | GREATER_BAR_RBRACK  -> 98 
  | LPAREN_STAR_RPAREN  -> 99 
  | OPEN  -> 100 
  | OR  -> 101 
  | REC  -> 102 
  | THEN  -> 103 
  | TO  -> 104 
  | TRUE  -> 105 
  | TRY  -> 106 
  | TYPE  -> 107 
  | VAL  -> 108 
  | INLINE  -> 109 
  | INTERFACE  -> 110 
  | INSTANCE  -> 111 
  | CONST  -> 112 
  | LAZY  -> 113 
  | OLAZY  -> 114 
  | MATCH  -> 115 
  | MUTABLE  -> 116 
  | NEW  -> 117 
  | OF  -> 118 
  | EXCEPTION  -> 119 
  | FALSE  -> 120 
  | FOR  -> 121 
  | FUN  -> 122 
  | FUNCTION  -> 123 
  | IF  -> 124 
  | IN  -> 125 
  | JOIN_IN  -> 126 
  | FINALLY  -> 127 
  | DO_BANG  -> 128 
  | AND  -> 129 
  | AS  -> 130 
  | ASSERT  -> 131 
  | OASSERT  -> 132 
  | ASR  -> 133 
  | BEGIN  -> 134 
  | DO  -> 135 
  | DONE  -> 136 
  | DOWNTO  -> 137 
  | ELSE  -> 138 
  | ELIF  -> 139 
  | END  -> 140 
  | DOT_DOT  -> 141 
  | BAR_BAR  -> 142 
  | UPCAST  -> 143 
  | DOWNCAST  -> 144 
  | NULL  -> 145 
  | RESERVED  -> 146 
  | MODULE  -> 147 
  | NAMESPACE  -> 148 
  | DELEGATE  -> 149 
  | CONSTRAINT  -> 150 
  | BASE  -> 151 
  | LQUOTE _ -> 152 
  | RQUOTE _ -> 153 
  | RQUOTE_DOT _ -> 154 
  | PERCENT_OP _ -> 155 
  | BINDER _ -> 156 
  | LESS _ -> 157 
  | GREATER _ -> 158 
  | LET _ -> 159 
  | YIELD _ -> 160 
  | YIELD_BANG _ -> 161 
  | BIGNUM _ -> 162 
  | DECIMAL _ -> 163 
  | CHAR _ -> 164 
  | IEEE64 _ -> 165 
  | IEEE32 _ -> 166 
  | NATIVEINT _ -> 167 
  | UNATIVEINT _ -> 168 
  | UINT64 _ -> 169 
  | UINT32 _ -> 170 
  | UINT16 _ -> 171 
  | UINT8 _ -> 172 
  | INT64 _ -> 173 
  | INT32 _ -> 174 
  | INT32_DOT_DOT _ -> 175 
  | INT16 _ -> 176 
  | INT8 _ -> 177 
  | FUNKY_OPERATOR_NAME _ -> 178 
  | ADJACENT_PREFIX_OP _ -> 179 
  | PLUS_MINUS_OP _ -> 180 
  | INFIX_AMP_OP _ -> 181 
  | INFIX_STAR_DIV_MOD_OP _ -> 182 
  | PREFIX_OP _ -> 183 
  | INFIX_BAR_OP _ -> 184 
  | INFIX_AT_HAT_OP _ -> 185 
  | INFIX_COMPARE_OP _ -> 186 
  | INFIX_STAR_STAR_OP _ -> 187 
  | IDENT _ -> 188 
  | KEYWORD_STRING _ -> 189 
  | STRING _ -> 190 
  | BYTEARRAY _ -> 191 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_OINTERFACE_MEMBER 
  | 14 -> TOKEN_OBLOCKEND 
  | 15 -> TOKEN_OBLOCKEND_COMING_SOON 
  | 16 -> TOKEN_OBLOCKEND_IS_HERE 
  | 17 -> TOKEN_ORIGHT_BLOCK_END 
  | 18 -> TOKEN_ODECLEND 
  | 19 -> TOKEN_OEND 
  | 20 -> TOKEN_OBLOCKSEP 
  | 21 -> TOKEN_OBLOCKBEGIN 
  | 22 -> TOKEN_ORESET 
  | 23 -> TOKEN_OFUN 
  | 24 -> TOKEN_OFUNCTION 
  | 25 -> TOKEN_OWITH 
  | 26 -> TOKEN_OELSE 
  | 27 -> TOKEN_OTHEN 
  | 28 -> TOKEN_ODO_BANG 
  | 29 -> TOKEN_ODO 
  | 30 -> TOKEN_OBINDER 
  | 31 -> TOKEN_OLET 
  | 32 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 33 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 34 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 35 -> TOKEN_TYPE_COMING_SOON 
  | 36 -> TOKEN_TYPE_IS_HERE 
  | 37 -> TOKEN_MODULE_COMING_SOON 
  | 38 -> TOKEN_MODULE_IS_HERE 
  | 39 -> TOKEN_EXTERN 
  | 40 -> TOKEN_VOID 
  | 41 -> TOKEN_PUBLIC 
  | 42 -> TOKEN_PRIVATE 
  | 43 -> TOKEN_INTERNAL 
  | 44 -> TOKEN_GLOBAL 
  | 45 -> TOKEN_STATIC 
  | 46 -> TOKEN_MEMBER 
  | 47 -> TOKEN_CLASS 
  | 48 -> TOKEN_ABSTRACT 
  | 49 -> TOKEN_OVERRIDE 
  | 50 -> TOKEN_DEFAULT 
  | 51 -> TOKEN_CONSTRUCTOR 
  | 52 -> TOKEN_INHERIT 
  | 53 -> TOKEN_GREATER_RBRACK 
  | 54 -> TOKEN_STRUCT 
  | 55 -> TOKEN_SIG 
  | 56 -> TOKEN_BAR 
  | 57 -> TOKEN_RBRACK 
  | 58 -> TOKEN_RBRACE 
  | 59 -> TOKEN_RBRACE_COMING_SOON 
  | 60 -> TOKEN_RBRACE_IS_HERE 
  | 61 -> TOKEN_MINUS 
  | 62 -> TOKEN_DOLLAR 
  | 63 -> TOKEN_LBRACE_LESS 
  | 64 -> TOKEN_BAR_RBRACK 
  | 65 -> TOKEN_GREATER_RBRACE 
  | 66 -> TOKEN_UNDERSCORE 
  | 67 -> TOKEN_SEMICOLON_SEMICOLON 
  | 68 -> TOKEN_LARROW 
  | 69 -> TOKEN_EQUALS 
  | 70 -> TOKEN_LBRACK 
  | 71 -> TOKEN_LBRACK_BAR 
  | 72 -> TOKEN_LBRACK_LESS 
  | 73 -> TOKEN_LBRACE 
  | 74 -> TOKEN_QMARK 
  | 75 -> TOKEN_QMARK_QMARK 
  | 76 -> TOKEN_DOT 
  | 77 -> TOKEN_COLON 
  | 78 -> TOKEN_COLON_COLON 
  | 79 -> TOKEN_COLON_GREATER 
  | 80 -> TOKEN_COLON_QMARK_GREATER 
  | 81 -> TOKEN_COLON_QMARK 
  | 82 -> TOKEN_COLON_EQUALS 
  | 83 -> TOKEN_SEMICOLON 
  | 84 -> TOKEN_WHEN 
  | 85 -> TOKEN_WHILE 
  | 86 -> TOKEN_WITH 
  | 87 -> TOKEN_HASH 
  | 88 -> TOKEN_AMP 
  | 89 -> TOKEN_AMP_AMP 
  | 90 -> TOKEN_QUOTE 
  | 91 -> TOKEN_LPAREN 
  | 92 -> TOKEN_RPAREN 
  | 93 -> TOKEN_RPAREN_COMING_SOON 
  | 94 -> TOKEN_RPAREN_IS_HERE 
  | 95 -> TOKEN_STAR 
  | 96 -> TOKEN_COMMA 
  | 97 -> TOKEN_RARROW 
  | 98 -> TOKEN_GREATER_BAR_RBRACK 
  | 99 -> TOKEN_LPAREN_STAR_RPAREN 
  | 100 -> TOKEN_OPEN 
  | 101 -> TOKEN_OR 
  | 102 -> TOKEN_REC 
  | 103 -> TOKEN_THEN 
  | 104 -> TOKEN_TO 
  | 105 -> TOKEN_TRUE 
  | 106 -> TOKEN_TRY 
  | 107 -> TOKEN_TYPE 
  | 108 -> TOKEN_VAL 
  | 109 -> TOKEN_INLINE 
  | 110 -> TOKEN_INTERFACE 
  | 111 -> TOKEN_INSTANCE 
  | 112 -> TOKEN_CONST 
  | 113 -> TOKEN_LAZY 
  | 114 -> TOKEN_OLAZY 
  | 115 -> TOKEN_MATCH 
  | 116 -> TOKEN_MUTABLE 
  | 117 -> TOKEN_NEW 
  | 118 -> TOKEN_OF 
  | 119 -> TOKEN_EXCEPTION 
  | 120 -> TOKEN_FALSE 
  | 121 -> TOKEN_FOR 
  | 122 -> TOKEN_FUN 
  | 123 -> TOKEN_FUNCTION 
  | 124 -> TOKEN_IF 
  | 125 -> TOKEN_IN 
  | 126 -> TOKEN_JOIN_IN 
  | 127 -> TOKEN_FINALLY 
  | 128 -> TOKEN_DO_BANG 
  | 129 -> TOKEN_AND 
  | 130 -> TOKEN_AS 
  | 131 -> TOKEN_ASSERT 
  | 132 -> TOKEN_OASSERT 
  | 133 -> TOKEN_ASR 
  | 134 -> TOKEN_BEGIN 
  | 135 -> TOKEN_DO 
  | 136 -> TOKEN_DONE 
  | 137 -> TOKEN_DOWNTO 
  | 138 -> TOKEN_ELSE 
  | 139 -> TOKEN_ELIF 
  | 140 -> TOKEN_END 
  | 141 -> TOKEN_DOT_DOT 
  | 142 -> TOKEN_BAR_BAR 
  | 143 -> TOKEN_UPCAST 
  | 144 -> TOKEN_DOWNCAST 
  | 145 -> TOKEN_NULL 
  | 146 -> TOKEN_RESERVED 
  | 147 -> TOKEN_MODULE 
  | 148 -> TOKEN_NAMESPACE 
  | 149 -> TOKEN_DELEGATE 
  | 150 -> TOKEN_CONSTRAINT 
  | 151 -> TOKEN_BASE 
  | 152 -> TOKEN_LQUOTE 
  | 153 -> TOKEN_RQUOTE 
  | 154 -> TOKEN_RQUOTE_DOT 
  | 155 -> TOKEN_PERCENT_OP 
  | 156 -> TOKEN_BINDER 
  | 157 -> TOKEN_LESS 
  | 158 -> TOKEN_GREATER 
  | 159 -> TOKEN_LET 
  | 160 -> TOKEN_YIELD 
  | 161 -> TOKEN_YIELD_BANG 
  | 162 -> TOKEN_BIGNUM 
  | 163 -> TOKEN_DECIMAL 
  | 164 -> TOKEN_CHAR 
  | 165 -> TOKEN_IEEE64 
  | 166 -> TOKEN_IEEE32 
  | 167 -> TOKEN_NATIVEINT 
  | 168 -> TOKEN_UNATIVEINT 
  | 169 -> TOKEN_UINT64 
  | 170 -> TOKEN_UINT32 
  | 171 -> TOKEN_UINT16 
  | 172 -> TOKEN_UINT8 
  | 173 -> TOKEN_INT64 
  | 174 -> TOKEN_INT32 
  | 175 -> TOKEN_INT32_DOT_DOT 
  | 176 -> TOKEN_INT16 
  | 177 -> TOKEN_INT8 
  | 178 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 179 -> TOKEN_ADJACENT_PREFIX_OP 
  | 180 -> TOKEN_PLUS_MINUS_OP 
  | 181 -> TOKEN_INFIX_AMP_OP 
  | 182 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 183 -> TOKEN_PREFIX_OP 
  | 184 -> TOKEN_INFIX_BAR_OP 
  | 185 -> TOKEN_INFIX_AT_HAT_OP 
  | 186 -> TOKEN_INFIX_COMPARE_OP 
  | 187 -> TOKEN_INFIX_STAR_STAR_OP 
  | 188 -> TOKEN_IDENT 
  | 189 -> TOKEN_KEYWORD_STRING 
  | 190 -> TOKEN_STRING 
  | 191 -> TOKEN_BYTEARRAY 
  | 194 -> TOKEN_end_of_input
  | 192 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startsignatureFile 
    | 1 -> NONTERM__startimplementationFile 
    | 2 -> NONTERM__startinteraction 
    | 3 -> NONTERM_interaction 
    | 4 -> NONTERM_interaction 
    | 5 -> NONTERM_interaction 
    | 6 -> NONTERM_hashDirective 
    | 7 -> NONTERM_stringOrKeywordString 
    | 8 -> NONTERM_stringOrKeywordString 
    | 9 -> NONTERM_hashDirectiveArg 
    | 10 -> NONTERM_hashDirectiveArgs 
    | 11 -> NONTERM_hashDirectiveArgs 
    | 12 -> NONTERM_interactiveTerminator 
    | 13 -> NONTERM_interactiveTerminator 
    | 14 -> NONTERM_interactiveItemsTerminator 
    | 15 -> NONTERM_interactiveItemsTerminator 
    | 16 -> NONTERM_interactiveItemsTerminator 
    | 17 -> NONTERM_interactiveItemsTerminator 
    | 18 -> NONTERM_interactiveItemsTerminator 
    | 19 -> NONTERM_interactiveItemsTerminator 
    | 20 -> NONTERM_interactiveItemsTerminator 
    | 21 -> NONTERM_interactiveModuleDefns 
    | 22 -> NONTERM_interactiveModuleDefns 
    | 23 -> NONTERM_interactiveExpr 
    | 24 -> NONTERM_interactiveHash 
    | 25 -> NONTERM_signatureFile 
    | 26 -> NONTERM_signatureFile 
    | 27 -> NONTERM_signatureFile 
    | 28 -> NONTERM_implementationFile 
    | 29 -> NONTERM_implementationFile 
    | 30 -> NONTERM_implementationFile 
    | 31 -> NONTERM_moduleIntro 
    | 32 -> NONTERM_namespaceIntro 
    | 33 -> NONTERM_fileNamespaceSpecs 
    | 34 -> NONTERM_fileNamespaceSpecs 
    | 35 -> NONTERM_fileNamespaceSpecList 
    | 36 -> NONTERM_fileNamespaceSpecList 
    | 37 -> NONTERM_fileNamespaceSpec 
    | 38 -> NONTERM_fileNamespaceImpls 
    | 39 -> NONTERM_fileNamespaceImpls 
    | 40 -> NONTERM_fileNamespaceImplList 
    | 41 -> NONTERM_fileNamespaceImplList 
    | 42 -> NONTERM_fileNamespaceImpl 
    | 43 -> NONTERM_fileModuleSpec 
    | 44 -> NONTERM_fileModuleSpec 
    | 45 -> NONTERM_fileModuleImpl 
    | 46 -> NONTERM_fileModuleImpl 
    | 47 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 48 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 49 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 50 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 51 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 52 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 53 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 54 -> NONTERM_moduleSpfns 
    | 55 -> NONTERM_moduleSpfns 
    | 56 -> NONTERM_moduleSpfns 
    | 57 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 58 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 59 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 60 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 61 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 62 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 63 -> NONTERM_moduleDefnsOrExpr 
    | 64 -> NONTERM_moduleDefnsOrExpr 
    | 65 -> NONTERM_moduleDefnsOrExpr 
    | 66 -> NONTERM_moduleDefnsOrExpr 
    | 67 -> NONTERM_moduleDefnsOrExpr 
    | 68 -> NONTERM_moduleDefns 
    | 69 -> NONTERM_moduleDefns 
    | 70 -> NONTERM_moduleDefns 
    | 71 -> NONTERM_moduleDefns 
    | 72 -> NONTERM_moduleDefns 
    | 73 -> NONTERM_moduleDefnOrDirective 
    | 74 -> NONTERM_moduleDefnOrDirective 
    | 75 -> NONTERM_moduleDefn 
    | 76 -> NONTERM_moduleDefn 
    | 77 -> NONTERM_moduleDefn 
    | 78 -> NONTERM_moduleDefn 
    | 79 -> NONTERM_moduleDefn 
    | 80 -> NONTERM_moduleDefn 
    | 81 -> NONTERM_moduleDefn 
    | 82 -> NONTERM_moduleDefn 
    | 83 -> NONTERM_namedModuleAbbrevBlock 
    | 84 -> NONTERM_namedModuleAbbrevBlock 
    | 85 -> NONTERM_namedModuleDefnBlock 
    | 86 -> NONTERM_namedModuleDefnBlock 
    | 87 -> NONTERM_namedModuleDefnBlock 
    | 88 -> NONTERM_namedModuleDefnBlock 
    | 89 -> NONTERM_namedModuleDefnBlock 
    | 90 -> NONTERM_namedModuleDefnBlock 
    | 91 -> NONTERM_namedModuleDefnBlock 
    | 92 -> NONTERM_wrappedNamedModuleDefn 
    | 93 -> NONTERM_wrappedNamedModuleDefn 
    | 94 -> NONTERM_wrappedNamedModuleDefn 
    | 95 -> NONTERM_opt_signature 
    | 96 -> NONTERM_tyconDefnAugmentation 
    | 97 -> NONTERM_moduleSpfn 
    | 98 -> NONTERM_moduleSpfn 
    | 99 -> NONTERM_moduleSpfn 
    | 100 -> NONTERM_moduleSpfn 
    | 101 -> NONTERM_moduleSpfn 
    | 102 -> NONTERM_moduleSpfn 
    | 103 -> NONTERM_moduleSpfn 
    | 104 -> NONTERM_valSpfn 
    | 105 -> NONTERM_opt_literalValue 
    | 106 -> NONTERM_opt_literalValue 
    | 107 -> NONTERM_opt_literalValue 
    | 108 -> NONTERM_moduleSpecBlock 
    | 109 -> NONTERM_moduleSpecBlock 
    | 110 -> NONTERM_moduleSpecBlock 
    | 111 -> NONTERM_opt_attributes 
    | 112 -> NONTERM_opt_attributes 
    | 113 -> NONTERM_attributes 
    | 114 -> NONTERM_attributes 
    | 115 -> NONTERM_attributeList 
    | 116 -> NONTERM_attributeList 
    | 117 -> NONTERM_attributeList 
    | 118 -> NONTERM_attributeList 
    | 119 -> NONTERM_attributeListElements 
    | 120 -> NONTERM_attributeListElements 
    | 121 -> NONTERM_attribute 
    | 122 -> NONTERM_attribute 
    | 123 -> NONTERM_attribute 
    | 124 -> NONTERM_attributeTarget 
    | 125 -> NONTERM_attributeTarget 
    | 126 -> NONTERM_attributeTarget 
    | 127 -> NONTERM_attributeTarget 
    | 128 -> NONTERM_tyconSpfns 
    | 129 -> NONTERM_tyconSpfnList 
    | 130 -> NONTERM_tyconSpfnList 
    | 131 -> NONTERM_tyconSpfn 
    | 132 -> NONTERM_tyconSpfn 
    | 133 -> NONTERM_tyconSpfnRhsBlock 
    | 134 -> NONTERM_tyconSpfnRhsBlock 
    | 135 -> NONTERM_tyconSpfnRhs 
    | 136 -> NONTERM_tyconSpfnRhs 
    | 137 -> NONTERM_tyconSpfnRhs 
    | 138 -> NONTERM_tyconClassSpfn 
    | 139 -> NONTERM_tyconClassSpfn 
    | 140 -> NONTERM_tyconClassSpfn 
    | 141 -> NONTERM_tyconClassSpfn 
    | 142 -> NONTERM_classSpfnBlockKindUnspecified 
    | 143 -> NONTERM_classSpfnBlockKindUnspecified 
    | 144 -> NONTERM_classSpfnBlockKindUnspecified 
    | 145 -> NONTERM_classSpfnBlockKindUnspecified 
    | 146 -> NONTERM_classSpfnBlock 
    | 147 -> NONTERM_classSpfnBlock 
    | 148 -> NONTERM_classSpfnBlock 
    | 149 -> NONTERM_classSpfnMembers 
    | 150 -> NONTERM_classSpfnMembers 
    | 151 -> NONTERM_classSpfnMembersAtLeastOne 
    | 152 -> NONTERM_memberFlags 
    | 153 -> NONTERM_memberFlags 
    | 154 -> NONTERM_memberFlags 
    | 155 -> NONTERM_memberFlags 
    | 156 -> NONTERM_memberSpecFlags 
    | 157 -> NONTERM_memberSpecFlags 
    | 158 -> NONTERM_memberSpecFlags 
    | 159 -> NONTERM_classMemberSpfnGetSet 
    | 160 -> NONTERM_classMemberSpfnGetSet 
    | 161 -> NONTERM_classMemberSpfnGetSet 
    | 162 -> NONTERM_classMemberSpfnGetSet 
    | 163 -> NONTERM_classMemberSpfnGetSetElements 
    | 164 -> NONTERM_classMemberSpfnGetSetElements 
    | 165 -> NONTERM_classMemberSpfn 
    | 166 -> NONTERM_classMemberSpfn 
    | 167 -> NONTERM_classMemberSpfn 
    | 168 -> NONTERM_classMemberSpfn 
    | 169 -> NONTERM_classMemberSpfn 
    | 170 -> NONTERM_classMemberSpfn 
    | 171 -> NONTERM_classMemberSpfn 
    | 172 -> NONTERM_typeNameInfo 
    | 173 -> NONTERM_tyconDefnList 
    | 174 -> NONTERM_tyconDefnList 
    | 175 -> NONTERM_tyconDefn 
    | 176 -> NONTERM_tyconDefn 
    | 177 -> NONTERM_tyconDefn 
    | 178 -> NONTERM_tyconDefn 
    | 179 -> NONTERM_tyconDefnRhsBlock 
    | 180 -> NONTERM_tyconDefnRhsBlock 
    | 181 -> NONTERM_tyconDefnRhsBlock 
    | 182 -> NONTERM_tyconDefnRhs 
    | 183 -> NONTERM_tyconDefnRhs 
    | 184 -> NONTERM_tyconDefnRhs 
    | 185 -> NONTERM_tyconClassDefn 
    | 186 -> NONTERM_tyconClassDefn 
    | 187 -> NONTERM_tyconClassDefn 
    | 188 -> NONTERM_tyconClassDefn 
    | 189 -> NONTERM_classDefnBlockKindUnspecified 
    | 190 -> NONTERM_classDefnBlockKindUnspecified 
    | 191 -> NONTERM_classDefnBlock 
    | 192 -> NONTERM_classDefnBlock 
    | 193 -> NONTERM_classDefnBlock 
    | 194 -> NONTERM_classDefnMembers 
    | 195 -> NONTERM_classDefnMembers 
    | 196 -> NONTERM_classDefnMembers 
    | 197 -> NONTERM_classDefnMembersAtLeastOne 
    | 198 -> NONTERM_classDefnMemberGetSet 
    | 199 -> NONTERM_classDefnMemberGetSet 
    | 200 -> NONTERM_classDefnMemberGetSet 
    | 201 -> NONTERM_classDefnMemberGetSetElements 
    | 202 -> NONTERM_classDefnMemberGetSetElements 
    | 203 -> NONTERM_classDefnMemberGetSetElement 
    | 204 -> NONTERM_memberCore 
    | 205 -> NONTERM_memberCore 
    | 206 -> NONTERM_abstractMemberFlags 
    | 207 -> NONTERM_abstractMemberFlags 
    | 208 -> NONTERM_classDefnMember 
    | 209 -> NONTERM_classDefnMember 
    | 210 -> NONTERM_classDefnMember 
    | 211 -> NONTERM_classDefnMember 
    | 212 -> NONTERM_classDefnMember 
    | 213 -> NONTERM_classDefnMember 
    | 214 -> NONTERM_classDefnMember 
    | 215 -> NONTERM_classDefnMember 
    | 216 -> NONTERM_classDefnMember 
    | 217 -> NONTERM_classDefnMember 
    | 218 -> NONTERM_classDefnMember 
    | 219 -> NONTERM_valDefnDecl 
    | 220 -> NONTERM_autoPropsDefnDecl 
    | 221 -> NONTERM_opt_typ 
    | 222 -> NONTERM_opt_typ 
    | 223 -> NONTERM_atomicPatternLongIdent 
    | 224 -> NONTERM_atomicPatternLongIdent 
    | 225 -> NONTERM_atomicPatternLongIdent 
    | 226 -> NONTERM_opt_access 
    | 227 -> NONTERM_opt_access 
    | 228 -> NONTERM_access 
    | 229 -> NONTERM_access 
    | 230 -> NONTERM_access 
    | 231 -> NONTERM_opt_declVisibility 
    | 232 -> NONTERM_opt_declVisibility 
    | 233 -> NONTERM_opt_interfaceImplDefn 
    | 234 -> NONTERM_opt_interfaceImplDefn 
    | 235 -> NONTERM_opt_classDefn 
    | 236 -> NONTERM_opt_classDefn 
    | 237 -> NONTERM_opt_classSpfn 
    | 238 -> NONTERM_opt_classSpfn 
    | 239 -> NONTERM_inheritsDefn 
    | 240 -> NONTERM_inheritsDefn 
    | 241 -> NONTERM_inheritsDefn 
    | 242 -> NONTERM_optAsSpec 
    | 243 -> NONTERM_optAsSpec 
    | 244 -> NONTERM_asSpec 
    | 245 -> NONTERM_optBaseSpec 
    | 246 -> NONTERM_optBaseSpec 
    | 247 -> NONTERM_baseSpec 
    | 248 -> NONTERM_baseSpec 
    | 249 -> NONTERM_objectImplementationBlock 
    | 250 -> NONTERM_objectImplementationBlock 
    | 251 -> NONTERM_objectImplementationBlock 
    | 252 -> NONTERM_objectImplementationMembers 
    | 253 -> NONTERM_objectImplementationMembers 
    | 254 -> NONTERM_objectImplementationMember 
    | 255 -> NONTERM_objectImplementationMember 
    | 256 -> NONTERM_objectImplementationMember 
    | 257 -> NONTERM_objectImplementationMember 
    | 258 -> NONTERM_memberOrOverride 
    | 259 -> NONTERM_memberOrOverride 
    | 260 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 261 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 262 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 263 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 264 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 265 -> NONTERM_braceFieldDeclList 
    | 266 -> NONTERM_braceFieldDeclList 
    | 267 -> NONTERM_braceFieldDeclList 
    | 268 -> NONTERM_inlineAssemblyTyconRepr 
    | 269 -> NONTERM_classOrInterfaceOrStruct 
    | 270 -> NONTERM_classOrInterfaceOrStruct 
    | 271 -> NONTERM_classOrInterfaceOrStruct 
    | 272 -> NONTERM_interfaceMember 
    | 273 -> NONTERM_interfaceMember 
    | 274 -> NONTERM_tyconNameAndTyparDecls 
    | 275 -> NONTERM_tyconNameAndTyparDecls 
    | 276 -> NONTERM_tyconNameAndTyparDecls 
    | 277 -> NONTERM_prefixTyparDecls 
    | 278 -> NONTERM_prefixTyparDecls 
    | 279 -> NONTERM_prefixTyparDeclList 
    | 280 -> NONTERM_prefixTyparDeclList 
    | 281 -> NONTERM_typarDecl 
    | 282 -> NONTERM_postfixTyparDecls 
    | 283 -> NONTERM_explicitValTyparDeclsCore 
    | 284 -> NONTERM_explicitValTyparDeclsCore 
    | 285 -> NONTERM_explicitValTyparDeclsCore 
    | 286 -> NONTERM_explicitValTyparDecls 
    | 287 -> NONTERM_opt_explicitValTyparDecls 
    | 288 -> NONTERM_opt_explicitValTyparDecls 
    | 289 -> NONTERM_opt_explicitValTyparDecls2 
    | 290 -> NONTERM_opt_explicitValTyparDecls2 
    | 291 -> NONTERM_opt_typeConstraints 
    | 292 -> NONTERM_opt_typeConstraints 
    | 293 -> NONTERM_typeConstraints 
    | 294 -> NONTERM_typeConstraints 
    | 295 -> NONTERM_typeConstraint 
    | 296 -> NONTERM_typeConstraint 
    | 297 -> NONTERM_typeConstraint 
    | 298 -> NONTERM_typeConstraint 
    | 299 -> NONTERM_typeConstraint 
    | 300 -> NONTERM_typeConstraint 
    | 301 -> NONTERM_typeConstraint 
    | 302 -> NONTERM_typeConstraint 
    | 303 -> NONTERM_typeConstraint 
    | 304 -> NONTERM_typeConstraint 
    | 305 -> NONTERM_typarAlts 
    | 306 -> NONTERM_typarAlts 
    | 307 -> NONTERM_unionRepr 
    | 308 -> NONTERM_unionRepr 
    | 309 -> NONTERM_unionRepr 
    | 310 -> NONTERM_barAndgrabXmlDoc 
    | 311 -> NONTERM_attrUnionCaseDecls 
    | 312 -> NONTERM_attrUnionCaseDecls 
    | 313 -> NONTERM_attrUnionCaseDecl 
    | 314 -> NONTERM_attrUnionCaseDecl 
    | 315 -> NONTERM_attrUnionCaseDecl 
    | 316 -> NONTERM_attrUnionCaseDecl 
    | 317 -> NONTERM_unionCaseName 
    | 318 -> NONTERM_unionCaseName 
    | 319 -> NONTERM_unionCaseName 
    | 320 -> NONTERM_firstUnionCaseDeclOfMany 
    | 321 -> NONTERM_firstUnionCaseDeclOfMany 
    | 322 -> NONTERM_firstUnionCaseDeclOfMany 
    | 323 -> NONTERM_firstUnionCaseDecl 
    | 324 -> NONTERM_firstUnionCaseDecl 
    | 325 -> NONTERM_unionCaseRepr 
    | 326 -> NONTERM_unionCaseRepr 
    | 327 -> NONTERM_unionCaseRepr 
    | 328 -> NONTERM_recdFieldDeclList 
    | 329 -> NONTERM_recdFieldDeclList 
    | 330 -> NONTERM_recdFieldDecl 
    | 331 -> NONTERM_fieldDecl 
    | 332 -> NONTERM_exconDefn 
    | 333 -> NONTERM_exconSpfn 
    | 334 -> NONTERM_exceptionAndGrabDoc 
    | 335 -> NONTERM_exconCore 
    | 336 -> NONTERM_exconIntro 
    | 337 -> NONTERM_exconIntro 
    | 338 -> NONTERM_exconRepr 
    | 339 -> NONTERM_exconRepr 
    | 340 -> NONTERM_openDecl 
    | 341 -> NONTERM_defnBindings 
    | 342 -> NONTERM_defnBindings 
    | 343 -> NONTERM_doBinding 
    | 344 -> NONTERM_hardwhiteLetBindings 
    | 345 -> NONTERM_hardwhiteDoBinding 
    | 346 -> NONTERM_classDefnBindings 
    | 347 -> NONTERM_classDefnBindings 
    | 348 -> NONTERM_classDefnBindings 
    | 349 -> NONTERM_classDefnBindings 
    | 350 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 351 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 352 -> NONTERM_cPrototype 
    | 353 -> NONTERM_cArgs 
    | 354 -> NONTERM_cArgs 
    | 355 -> NONTERM_cArgs 
    | 356 -> NONTERM_cMoreArgs 
    | 357 -> NONTERM_cMoreArgs 
    | 358 -> NONTERM_cArg 
    | 359 -> NONTERM_cArg 
    | 360 -> NONTERM_cType 
    | 361 -> NONTERM_cType 
    | 362 -> NONTERM_cType 
    | 363 -> NONTERM_cType 
    | 364 -> NONTERM_cType 
    | 365 -> NONTERM_cRetType 
    | 366 -> NONTERM_cRetType 
    | 367 -> NONTERM_localBindings 
    | 368 -> NONTERM_moreLocalBindings 
    | 369 -> NONTERM_moreLocalBindings 
    | 370 -> NONTERM_attr_localBinding 
    | 371 -> NONTERM_attr_localBinding 
    | 372 -> NONTERM_localBinding 
    | 373 -> NONTERM_localBinding 
    | 374 -> NONTERM_localBinding 
    | 375 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 376 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 377 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 378 -> NONTERM_typedExprWithStaticOptimizations 
    | 379 -> NONTERM_opt_staticOptimizations 
    | 380 -> NONTERM_opt_staticOptimizations 
    | 381 -> NONTERM_staticOptimization 
    | 382 -> NONTERM_staticOptimizationConditions 
    | 383 -> NONTERM_staticOptimizationConditions 
    | 384 -> NONTERM_staticOptimizationCondition 
    | 385 -> NONTERM_staticOptimizationCondition 
    | 386 -> NONTERM_rawConstant 
    | 387 -> NONTERM_rawConstant 
    | 388 -> NONTERM_rawConstant 
    | 389 -> NONTERM_rawConstant 
    | 390 -> NONTERM_rawConstant 
    | 391 -> NONTERM_rawConstant 
    | 392 -> NONTERM_rawConstant 
    | 393 -> NONTERM_rawConstant 
    | 394 -> NONTERM_rawConstant 
    | 395 -> NONTERM_rawConstant 
    | 396 -> NONTERM_rawConstant 
    | 397 -> NONTERM_rawConstant 
    | 398 -> NONTERM_rawConstant 
    | 399 -> NONTERM_rawConstant 
    | 400 -> NONTERM_rawConstant 
    | 401 -> NONTERM_rawConstant 
    | 402 -> NONTERM_rawConstant 
    | 403 -> NONTERM_constant 
    | 404 -> NONTERM_constant 
    | 405 -> NONTERM_bindingPattern 
    | 406 -> NONTERM_simplePattern 
    | 407 -> NONTERM_simplePattern 
    | 408 -> NONTERM_simplePattern 
    | 409 -> NONTERM_simplePattern 
    | 410 -> NONTERM_simplePatternCommaList 
    | 411 -> NONTERM_simplePatternCommaList 
    | 412 -> NONTERM_simplePatterns 
    | 413 -> NONTERM_simplePatterns 
    | 414 -> NONTERM_simplePatterns 
    | 415 -> NONTERM_simplePatterns 
    | 416 -> NONTERM_simplePatterns 
    | 417 -> NONTERM_headBindingPattern 
    | 418 -> NONTERM_headBindingPattern 
    | 419 -> NONTERM_headBindingPattern 
    | 420 -> NONTERM_headBindingPattern 
    | 421 -> NONTERM_headBindingPattern 
    | 422 -> NONTERM_headBindingPattern 
    | 423 -> NONTERM_tuplePatternElements 
    | 424 -> NONTERM_tuplePatternElements 
    | 425 -> NONTERM_conjPatternElements 
    | 426 -> NONTERM_conjPatternElements 
    | 427 -> NONTERM_constrPattern 
    | 428 -> NONTERM_constrPattern 
    | 429 -> NONTERM_constrPattern 
    | 430 -> NONTERM_constrPattern 
    | 431 -> NONTERM_constrPattern 
    | 432 -> NONTERM_constrPattern 
    | 433 -> NONTERM_atomicPatterns 
    | 434 -> NONTERM_atomicPatterns 
    | 435 -> NONTERM_atomicPatterns 
    | 436 -> NONTERM_atomicPatterns 
    | 437 -> NONTERM_atomicPattern 
    | 438 -> NONTERM_atomicPattern 
    | 439 -> NONTERM_atomicPattern 
    | 440 -> NONTERM_atomicPattern 
    | 441 -> NONTERM_atomicPattern 
    | 442 -> NONTERM_atomicPattern 
    | 443 -> NONTERM_atomicPattern 
    | 444 -> NONTERM_atomicPattern 
    | 445 -> NONTERM_atomicPattern 
    | 446 -> NONTERM_atomicPattern 
    | 447 -> NONTERM_atomicPattern 
    | 448 -> NONTERM_atomicPattern 
    | 449 -> NONTERM_atomicPattern 
    | 450 -> NONTERM_atomicPattern 
    | 451 -> NONTERM_atomicPattern 
    | 452 -> NONTERM_atomicPattern 
    | 453 -> NONTERM_parenPatternBody 
    | 454 -> NONTERM_parenPatternBody 
    | 455 -> NONTERM_parenPattern 
    | 456 -> NONTERM_parenPattern 
    | 457 -> NONTERM_parenPattern 
    | 458 -> NONTERM_parenPattern 
    | 459 -> NONTERM_parenPattern 
    | 460 -> NONTERM_parenPattern 
    | 461 -> NONTERM_parenPattern 
    | 462 -> NONTERM_parenPattern 
    | 463 -> NONTERM_tupleParenPatternElements 
    | 464 -> NONTERM_tupleParenPatternElements 
    | 465 -> NONTERM_conjParenPatternElements 
    | 466 -> NONTERM_conjParenPatternElements 
    | 467 -> NONTERM_recordPatternElements 
    | 468 -> NONTERM_recordPatternElementsAux 
    | 469 -> NONTERM_recordPatternElementsAux 
    | 470 -> NONTERM_recordPatternElement 
    | 471 -> NONTERM_listPatternElements 
    | 472 -> NONTERM_listPatternElements 
    | 473 -> NONTERM_listPatternElements 
    | 474 -> NONTERM_typedSeqExprBlock 
    | 475 -> NONTERM_typedSeqExprBlock 
    | 476 -> NONTERM_typedSeqExprBlock 
    | 477 -> NONTERM_declExprBlock 
    | 478 -> NONTERM_declExprBlock 
    | 479 -> NONTERM_typedSeqExprBlockR 
    | 480 -> NONTERM_typedSeqExprBlockR 
    | 481 -> NONTERM_typedSeqExpr 
    | 482 -> NONTERM_typedSeqExpr 
    | 483 -> NONTERM_seqExpr 
    | 484 -> NONTERM_seqExpr 
    | 485 -> NONTERM_seqExpr 
    | 486 -> NONTERM_seqExpr 
    | 487 -> NONTERM_seqExpr 
    | 488 -> NONTERM_seqExpr 
    | 489 -> NONTERM_recover 
    | 490 -> NONTERM_recover 
    | 491 -> NONTERM_declExpr 
    | 492 -> NONTERM_declExpr 
    | 493 -> NONTERM_declExpr 
    | 494 -> NONTERM_declExpr 
    | 495 -> NONTERM_declExpr 
    | 496 -> NONTERM_declExpr 
    | 497 -> NONTERM_declExpr 
    | 498 -> NONTERM_declExpr 
    | 499 -> NONTERM_declExpr 
    | 500 -> NONTERM_declExpr 
    | 501 -> NONTERM_declExpr 
    | 502 -> NONTERM_declExpr 
    | 503 -> NONTERM_declExpr 
    | 504 -> NONTERM_declExpr 
    | 505 -> NONTERM_declExpr 
    | 506 -> NONTERM_declExpr 
    | 507 -> NONTERM_declExpr 
    | 508 -> NONTERM_declExpr 
    | 509 -> NONTERM_declExpr 
    | 510 -> NONTERM_declExpr 
    | 511 -> NONTERM_declExpr 
    | 512 -> NONTERM_declExpr 
    | 513 -> NONTERM_declExpr 
    | 514 -> NONTERM_declExpr 
    | 515 -> NONTERM_declExpr 
    | 516 -> NONTERM_declExpr 
    | 517 -> NONTERM_declExpr 
    | 518 -> NONTERM_declExpr 
    | 519 -> NONTERM_declExpr 
    | 520 -> NONTERM_declExpr 
    | 521 -> NONTERM_declExpr 
    | 522 -> NONTERM_declExpr 
    | 523 -> NONTERM_declExpr 
    | 524 -> NONTERM_declExpr 
    | 525 -> NONTERM_declExpr 
    | 526 -> NONTERM_declExpr 
    | 527 -> NONTERM_declExpr 
    | 528 -> NONTERM_declExpr 
    | 529 -> NONTERM_declExpr 
    | 530 -> NONTERM_declExpr 
    | 531 -> NONTERM_declExpr 
    | 532 -> NONTERM_declExpr 
    | 533 -> NONTERM_declExpr 
    | 534 -> NONTERM_declExpr 
    | 535 -> NONTERM_declExpr 
    | 536 -> NONTERM_declExpr 
    | 537 -> NONTERM_declExpr 
    | 538 -> NONTERM_declExpr 
    | 539 -> NONTERM_declExpr 
    | 540 -> NONTERM_declExpr 
    | 541 -> NONTERM_declExpr 
    | 542 -> NONTERM_declExpr 
    | 543 -> NONTERM_declExpr 
    | 544 -> NONTERM_declExpr 
    | 545 -> NONTERM_declExpr 
    | 546 -> NONTERM_declExpr 
    | 547 -> NONTERM_declExpr 
    | 548 -> NONTERM_declExpr 
    | 549 -> NONTERM_declExpr 
    | 550 -> NONTERM_declExpr 
    | 551 -> NONTERM_declExpr 
    | 552 -> NONTERM_declExpr 
    | 553 -> NONTERM_declExpr 
    | 554 -> NONTERM_declExpr 
    | 555 -> NONTERM_declExpr 
    | 556 -> NONTERM_declExpr 
    | 557 -> NONTERM_declExpr 
    | 558 -> NONTERM_declExpr 
    | 559 -> NONTERM_declExpr 
    | 560 -> NONTERM_declExpr 
    | 561 -> NONTERM_declExpr 
    | 562 -> NONTERM_declExpr 
    | 563 -> NONTERM_declExpr 
    | 564 -> NONTERM_declExpr 
    | 565 -> NONTERM_declExpr 
    | 566 -> NONTERM_declExpr 
    | 567 -> NONTERM_declExpr 
    | 568 -> NONTERM_declExpr 
    | 569 -> NONTERM_declExpr 
    | 570 -> NONTERM_declExpr 
    | 571 -> NONTERM_declExpr 
    | 572 -> NONTERM_declExpr 
    | 573 -> NONTERM_declExpr 
    | 574 -> NONTERM_declExpr 
    | 575 -> NONTERM_declExpr 
    | 576 -> NONTERM_declExpr 
    | 577 -> NONTERM_declExpr 
    | 578 -> NONTERM_declExpr 
    | 579 -> NONTERM_declExpr 
    | 580 -> NONTERM_declExpr 
    | 581 -> NONTERM_declExpr 
    | 582 -> NONTERM_declExpr 
    | 583 -> NONTERM_declExpr 
    | 584 -> NONTERM_declExpr 
    | 585 -> NONTERM_declExpr 
    | 586 -> NONTERM_declExpr 
    | 587 -> NONTERM_declExpr 
    | 588 -> NONTERM_declExpr 
    | 589 -> NONTERM_declExpr 
    | 590 -> NONTERM_dynamicArg 
    | 591 -> NONTERM_dynamicArg 
    | 592 -> NONTERM_withClauses 
    | 593 -> NONTERM_withClauses 
    | 594 -> NONTERM_withClauses 
    | 595 -> NONTERM_withPatternClauses 
    | 596 -> NONTERM_withPatternClauses 
    | 597 -> NONTERM_withPatternClauses 
    | 598 -> NONTERM_withPatternClauses 
    | 599 -> NONTERM_patternAndGuard 
    | 600 -> NONTERM_patternClauses 
    | 601 -> NONTERM_patternClauses 
    | 602 -> NONTERM_patternClauses 
    | 603 -> NONTERM_patternClauses 
    | 604 -> NONTERM_patternClauses 
    | 605 -> NONTERM_patternGuard 
    | 606 -> NONTERM_patternGuard 
    | 607 -> NONTERM_patternResult 
    | 608 -> NONTERM_ifExprCases 
    | 609 -> NONTERM_ifExprThen 
    | 610 -> NONTERM_ifExprThen 
    | 611 -> NONTERM_ifExprThen 
    | 612 -> NONTERM_ifExprElifs 
    | 613 -> NONTERM_ifExprElifs 
    | 614 -> NONTERM_ifExprElifs 
    | 615 -> NONTERM_ifExprElifs 
    | 616 -> NONTERM_ifExprElifs 
    | 617 -> NONTERM_ifExprElifs 
    | 618 -> NONTERM_tupleExpr 
    | 619 -> NONTERM_tupleExpr 
    | 620 -> NONTERM_tupleExpr 
    | 621 -> NONTERM_tupleExpr 
    | 622 -> NONTERM_minusExpr 
    | 623 -> NONTERM_minusExpr 
    | 624 -> NONTERM_minusExpr 
    | 625 -> NONTERM_minusExpr 
    | 626 -> NONTERM_minusExpr 
    | 627 -> NONTERM_minusExpr 
    | 628 -> NONTERM_minusExpr 
    | 629 -> NONTERM_minusExpr 
    | 630 -> NONTERM_minusExpr 
    | 631 -> NONTERM_minusExpr 
    | 632 -> NONTERM_minusExpr 
    | 633 -> NONTERM_minusExpr 
    | 634 -> NONTERM_appExpr 
    | 635 -> NONTERM_appExpr 
    | 636 -> NONTERM_argExpr 
    | 637 -> NONTERM_argExpr 
    | 638 -> NONTERM_atomicExpr 
    | 639 -> NONTERM_atomicExpr 
    | 640 -> NONTERM_atomicExpr 
    | 641 -> NONTERM_atomicExpr 
    | 642 -> NONTERM_atomicExpr 
    | 643 -> NONTERM_atomicExpr 
    | 644 -> NONTERM_atomicExpr 
    | 645 -> NONTERM_atomicExpr 
    | 646 -> NONTERM_atomicExpr 
    | 647 -> NONTERM_atomicExpr 
    | 648 -> NONTERM_atomicExpr 
    | 649 -> NONTERM_atomicExpr 
    | 650 -> NONTERM_atomicExpr 
    | 651 -> NONTERM_atomicExpr 
    | 652 -> NONTERM_atomicExpr 
    | 653 -> NONTERM_atomicExprQualification 
    | 654 -> NONTERM_atomicExprQualification 
    | 655 -> NONTERM_atomicExprQualification 
    | 656 -> NONTERM_atomicExprQualification 
    | 657 -> NONTERM_atomicExprQualification 
    | 658 -> NONTERM_atomicExprQualification 
    | 659 -> NONTERM_atomicExprQualification 
    | 660 -> NONTERM_atomicExprQualification 
    | 661 -> NONTERM_atomicExprQualification 
    | 662 -> NONTERM_atomicExprQualification 
    | 663 -> NONTERM_atomicExprQualification 
    | 664 -> NONTERM_atomicExprQualification 
    | 665 -> NONTERM_atomicExprQualification 
    | 666 -> NONTERM_optRange 
    | 667 -> NONTERM_optRange 
    | 668 -> NONTERM_optRange 
    | 669 -> NONTERM_optRange 
    | 670 -> NONTERM_atomicExprAfterType 
    | 671 -> NONTERM_atomicExprAfterType 
    | 672 -> NONTERM_atomicExprAfterType 
    | 673 -> NONTERM_atomicExprAfterType 
    | 674 -> NONTERM_atomicExprAfterType 
    | 675 -> NONTERM_atomicExprAfterType 
    | 676 -> NONTERM_atomicExprAfterType 
    | 677 -> NONTERM_atomicExprAfterType 
    | 678 -> NONTERM_atomicExprAfterType 
    | 679 -> NONTERM_beginEndExpr 
    | 680 -> NONTERM_beginEndExpr 
    | 681 -> NONTERM_beginEndExpr 
    | 682 -> NONTERM_beginEndExpr 
    | 683 -> NONTERM_quoteExpr 
    | 684 -> NONTERM_quoteExpr 
    | 685 -> NONTERM_quoteExpr 
    | 686 -> NONTERM_quoteExpr 
    | 687 -> NONTERM_arrayExpr 
    | 688 -> NONTERM_arrayExpr 
    | 689 -> NONTERM_arrayExpr 
    | 690 -> NONTERM_arrayExpr 
    | 691 -> NONTERM_parenExpr 
    | 692 -> NONTERM_parenExpr 
    | 693 -> NONTERM_parenExpr 
    | 694 -> NONTERM_parenExpr 
    | 695 -> NONTERM_parenExpr 
    | 696 -> NONTERM_parenExpr 
    | 697 -> NONTERM_parenExpr 
    | 698 -> NONTERM_parenExpr 
    | 699 -> NONTERM_parenExpr 
    | 700 -> NONTERM_parenExprBody 
    | 701 -> NONTERM_parenExprBody 
    | 702 -> NONTERM_parenExprBody 
    | 703 -> NONTERM_staticallyKnownHeadTypars 
    | 704 -> NONTERM_staticallyKnownHeadTypars 
    | 705 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 706 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 707 -> NONTERM_braceExpr 
    | 708 -> NONTERM_braceExpr 
    | 709 -> NONTERM_braceExpr 
    | 710 -> NONTERM_braceExpr 
    | 711 -> NONTERM_braceExpr 
    | 712 -> NONTERM_braceExprBody 
    | 713 -> NONTERM_braceExprBody 
    | 714 -> NONTERM_braceExprBody 
    | 715 -> NONTERM_listExprElements 
    | 716 -> NONTERM_listExprElements 
    | 717 -> NONTERM_monadicExprInitial 
    | 718 -> NONTERM_monadicExprInitial 
    | 719 -> NONTERM_rangeSequenceExpr 
    | 720 -> NONTERM_rangeSequenceExpr 
    | 721 -> NONTERM_rangeSequenceExpr 
    | 722 -> NONTERM_monadicSingleLineQualifiersThenArrowThenExprR 
    | 723 -> NONTERM_forLoopBinder 
    | 724 -> NONTERM_forLoopBinder 
    | 725 -> NONTERM_forLoopBinder 
    | 726 -> NONTERM_forLoopBinder 
    | 727 -> NONTERM_forLoopRange 
    | 728 -> NONTERM_inlineAssemblyExpr 
    | 729 -> NONTERM_opt_curriedArgExprs 
    | 730 -> NONTERM_opt_curriedArgExprs 
    | 731 -> NONTERM_opt_atomicExprAfterType 
    | 732 -> NONTERM_opt_atomicExprAfterType 
    | 733 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 734 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 735 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 736 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 737 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 738 -> NONTERM_recdExpr 
    | 739 -> NONTERM_recdExpr 
    | 740 -> NONTERM_recdExpr 
    | 741 -> NONTERM_recdExpr 
    | 742 -> NONTERM_recdExpr 
    | 743 -> NONTERM_recdExpr 
    | 744 -> NONTERM_recdExpr 
    | 745 -> NONTERM_recdExpr 
    | 746 -> NONTERM_opt_seps_recd 
    | 747 -> NONTERM_opt_seps_recd 
    | 748 -> NONTERM_seps_recd 
    | 749 -> NONTERM_seps_recd 
    | 750 -> NONTERM_seps_recd 
    | 751 -> NONTERM_seps_recd 
    | 752 -> NONTERM_pathOrUnderscore 
    | 753 -> NONTERM_pathOrUnderscore 
    | 754 -> NONTERM_recdExprBindings 
    | 755 -> NONTERM_recdExprBindings 
    | 756 -> NONTERM_recdBinding 
    | 757 -> NONTERM_recdBinding 
    | 758 -> NONTERM_recdBinding 
    | 759 -> NONTERM_recdBinding 
    | 760 -> NONTERM_recdBinding 
    | 761 -> NONTERM_objExpr 
    | 762 -> NONTERM_objExpr 
    | 763 -> NONTERM_objExpr 
    | 764 -> NONTERM_objExprBaseCall 
    | 765 -> NONTERM_objExprBaseCall 
    | 766 -> NONTERM_objExprBaseCall 
    | 767 -> NONTERM_opt_objExprBindings 
    | 768 -> NONTERM_opt_objExprBindings 
    | 769 -> NONTERM_objExprBindings 
    | 770 -> NONTERM_objExprBindings 
    | 771 -> NONTERM_objExprBindings 
    | 772 -> NONTERM_objExprInterfaces 
    | 773 -> NONTERM_opt_objExprInterfaces 
    | 774 -> NONTERM_opt_objExprInterfaces 
    | 775 -> NONTERM_opt_objExprInterfaces 
    | 776 -> NONTERM_objExprInterface 
    | 777 -> NONTERM_forLoopDirection 
    | 778 -> NONTERM_forLoopDirection 
    | 779 -> NONTERM_anonLambdaExpr 
    | 780 -> NONTERM_anonLambdaExpr 
    | 781 -> NONTERM_anonLambdaExpr 
    | 782 -> NONTERM_anonLambdaExpr 
    | 783 -> NONTERM_anonLambdaExpr 
    | 784 -> NONTERM_anonLambdaExpr 
    | 785 -> NONTERM_anonLambdaExpr 
    | 786 -> NONTERM_anonLambdaExpr 
    | 787 -> NONTERM_anonMatchingExpr 
    | 788 -> NONTERM_anonMatchingExpr 
    | 789 -> NONTERM_typeWithTypeConstraints 
    | 790 -> NONTERM_typeWithTypeConstraints 
    | 791 -> NONTERM_topTypeWithTypeConstraints 
    | 792 -> NONTERM_topTypeWithTypeConstraints 
    | 793 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 794 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 795 -> NONTERM_topType 
    | 796 -> NONTERM_topType 
    | 797 -> NONTERM_topTupleType 
    | 798 -> NONTERM_topTupleType 
    | 799 -> NONTERM_topTupleTypeElements 
    | 800 -> NONTERM_topTupleTypeElements 
    | 801 -> NONTERM_topAppType 
    | 802 -> NONTERM_topAppType 
    | 803 -> NONTERM_topAppType 
    | 804 -> NONTERM_topAppType 
    | 805 -> NONTERM_topAppType 
    | 806 -> NONTERM_topAppType 
    | 807 -> NONTERM_typ 
    | 808 -> NONTERM_typ 
    | 809 -> NONTERM_tupleType 
    | 810 -> NONTERM_tupleType 
    | 811 -> NONTERM_tupleType 
    | 812 -> NONTERM_tupleType 
    | 813 -> NONTERM_tupleOrQuotTypeElements 
    | 814 -> NONTERM_tupleOrQuotTypeElements 
    | 815 -> NONTERM_tupleOrQuotTypeElements 
    | 816 -> NONTERM_tupleTypeElements 
    | 817 -> NONTERM_tupleTypeElements 
    | 818 -> NONTERM_appTypeCon 
    | 819 -> NONTERM_appTypeCon 
    | 820 -> NONTERM_appTypeConPower 
    | 821 -> NONTERM_appTypeConPower 
    | 822 -> NONTERM_appType 
    | 823 -> NONTERM_appType 
    | 824 -> NONTERM_appType 
    | 825 -> NONTERM_appType 
    | 826 -> NONTERM_appType 
    | 827 -> NONTERM_appType 
    | 828 -> NONTERM_appType 
    | 829 -> NONTERM_arrayTypeSuffix 
    | 830 -> NONTERM_arrayTypeSuffix 
    | 831 -> NONTERM_arrayTypeSuffix 
    | 832 -> NONTERM_arrayTypeSuffix 
    | 833 -> NONTERM_appTypePrefixArguments 
    | 834 -> NONTERM_typeArgListElements 
    | 835 -> NONTERM_typeArgListElements 
    | 836 -> NONTERM_typeArgListElements 
    | 837 -> NONTERM_powerType 
    | 838 -> NONTERM_powerType 
    | 839 -> NONTERM_powerType 
    | 840 -> NONTERM_appTypeNonAtomicDeprecated 
    | 841 -> NONTERM_appTypeNonAtomicDeprecated 
    | 842 -> NONTERM_appTypeNonAtomicDeprecated 
    | 843 -> NONTERM_appTypeNonAtomicDeprecated 
    | 844 -> NONTERM_appTypeNonAtomicDeprecated 
    | 845 -> NONTERM_appTypeNonAtomicDeprecated 
    | 846 -> NONTERM_appTypeNonAtomicDeprecated 
    | 847 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 848 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 849 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 850 -> NONTERM_atomType 
    | 851 -> NONTERM_atomType 
    | 852 -> NONTERM_atomType 
    | 853 -> NONTERM_atomType 
    | 854 -> NONTERM_atomType 
    | 855 -> NONTERM_atomType 
    | 856 -> NONTERM_atomType 
    | 857 -> NONTERM_atomType 
    | 858 -> NONTERM_atomType 
    | 859 -> NONTERM_atomType 
    | 860 -> NONTERM_atomType 
    | 861 -> NONTERM_atomType 
    | 862 -> NONTERM_atomType 
    | 863 -> NONTERM_atomType 
    | 864 -> NONTERM_atomType 
    | 865 -> NONTERM_typeArgsNoHpaDeprecated 
    | 866 -> NONTERM_typeArgsNoHpaDeprecated 
    | 867 -> NONTERM_typeArgsActual 
    | 868 -> NONTERM_typeArgsActual 
    | 869 -> NONTERM_typeArgsActual 
    | 870 -> NONTERM_typeArgsActual 
    | 871 -> NONTERM_typeArgsActual 
    | 872 -> NONTERM_typeArgsActual 
    | 873 -> NONTERM_typeArgsActual 
    | 874 -> NONTERM_typeArgActual 
    | 875 -> NONTERM_typeArgActual 
    | 876 -> NONTERM_typeArgActual 
    | 877 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 878 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 879 -> NONTERM_dummyTypeArg 
    | 880 -> NONTERM_measureTypeArg 
    | 881 -> NONTERM_measureTypeArg 
    | 882 -> NONTERM_measureTypeAtom 
    | 883 -> NONTERM_measureTypeAtom 
    | 884 -> NONTERM_measureTypeAtom 
    | 885 -> NONTERM_measureTypePower 
    | 886 -> NONTERM_measureTypePower 
    | 887 -> NONTERM_measureTypePower 
    | 888 -> NONTERM_measureTypePower 
    | 889 -> NONTERM_measureTypeSeq 
    | 890 -> NONTERM_measureTypeSeq 
    | 891 -> NONTERM_measureTypeExpr 
    | 892 -> NONTERM_measureTypeExpr 
    | 893 -> NONTERM_measureTypeExpr 
    | 894 -> NONTERM_measureTypeExpr 
    | 895 -> NONTERM_typar 
    | 896 -> NONTERM_typar 
    | 897 -> NONTERM_staticallyKnownHeadTypar 
    | 898 -> NONTERM_ident 
    | 899 -> NONTERM_path 
    | 900 -> NONTERM_path 
    | 901 -> NONTERM_path 
    | 902 -> NONTERM_path 
    | 903 -> NONTERM_opName 
    | 904 -> NONTERM_opName 
    | 905 -> NONTERM_opName 
    | 906 -> NONTERM_opName 
    | 907 -> NONTERM_opName 
    | 908 -> NONTERM_operatorName 
    | 909 -> NONTERM_operatorName 
    | 910 -> NONTERM_operatorName 
    | 911 -> NONTERM_operatorName 
    | 912 -> NONTERM_operatorName 
    | 913 -> NONTERM_operatorName 
    | 914 -> NONTERM_operatorName 
    | 915 -> NONTERM_operatorName 
    | 916 -> NONTERM_operatorName 
    | 917 -> NONTERM_operatorName 
    | 918 -> NONTERM_operatorName 
    | 919 -> NONTERM_operatorName 
    | 920 -> NONTERM_operatorName 
    | 921 -> NONTERM_operatorName 
    | 922 -> NONTERM_operatorName 
    | 923 -> NONTERM_operatorName 
    | 924 -> NONTERM_operatorName 
    | 925 -> NONTERM_operatorName 
    | 926 -> NONTERM_operatorName 
    | 927 -> NONTERM_operatorName 
    | 928 -> NONTERM_operatorName 
    | 929 -> NONTERM_operatorName 
    | 930 -> NONTERM_operatorName 
    | 931 -> NONTERM_operatorName 
    | 932 -> NONTERM_operatorName 
    | 933 -> NONTERM_operatorName 
    | 934 -> NONTERM_barName 
    | 935 -> NONTERM_barNames 
    | 936 -> NONTERM_barNames 
    | 937 -> NONTERM_identOrOp 
    | 938 -> NONTERM_identOrOp 
    | 939 -> NONTERM_pathOp 
    | 940 -> NONTERM_pathOp 
    | 941 -> NONTERM_pathOp 
    | 942 -> NONTERM_pathOp 
    | 943 -> NONTERM_nameop 
    | 944 -> NONTERM_topSeparator 
    | 945 -> NONTERM_topSeparator 
    | 946 -> NONTERM_topSeparator 
    | 947 -> NONTERM_topSeparators 
    | 948 -> NONTERM_topSeparators 
    | 949 -> NONTERM_interactiveSeparator 
    | 950 -> NONTERM_interactiveSeparator 
    | 951 -> NONTERM_interactiveSeparators 
    | 952 -> NONTERM_interactiveSeparators 
    | 953 -> NONTERM_opt_interactiveSeparators 
    | 954 -> NONTERM_opt_interactiveSeparators 
    | 955 -> NONTERM_opt_topSeparators 
    | 956 -> NONTERM_opt_topSeparators 
    | 957 -> NONTERM_seps 
    | 958 -> NONTERM_seps 
    | 959 -> NONTERM_seps 
    | 960 -> NONTERM_seps 
    | 961 -> NONTERM_declEnd 
    | 962 -> NONTERM_declEnd 
    | 963 -> NONTERM_declEnd 
    | 964 -> NONTERM_opt_declEnd 
    | 965 -> NONTERM_opt_declEnd 
    | 966 -> NONTERM_opt_declEnd 
    | 967 -> NONTERM_opt_declEnd 
    | 968 -> NONTERM_opt_ODECLEND 
    | 969 -> NONTERM_opt_ODECLEND 
    | 970 -> NONTERM_deprecated_opt_equals 
    | 971 -> NONTERM_deprecated_opt_equals 
    | 972 -> NONTERM_opt_OBLOCKSEP 
    | 973 -> NONTERM_opt_OBLOCKSEP 
    | 974 -> NONTERM_opt_seps 
    | 975 -> NONTERM_opt_seps 
    | 976 -> NONTERM_opt_rec 
    | 977 -> NONTERM_opt_rec 
    | 978 -> NONTERM_opt_bar 
    | 979 -> NONTERM_opt_bar 
    | 980 -> NONTERM_opt_inline 
    | 981 -> NONTERM_opt_inline 
    | 982 -> NONTERM_opt_mutable 
    | 983 -> NONTERM_opt_mutable 
    | 984 -> NONTERM_doToken 
    | 985 -> NONTERM_doToken 
    | 986 -> NONTERM_doneDeclEnd 
    | 987 -> NONTERM_doneDeclEnd 
    | 988 -> NONTERM_structOrBegin 
    | 989 -> NONTERM_structOrBegin 
    | 990 -> NONTERM_sigOrBegin 
    | 991 -> NONTERM_sigOrBegin 
    | 992 -> NONTERM_colonOrEquals 
    | 993 -> NONTERM_colonOrEquals 
    | 994 -> NONTERM_opt_HASH 
    | 995 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 996 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 997 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 998 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 999 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1000 -> NONTERM_type_keyword 
    | 1001 -> NONTERM_type_keyword 
    | 1002 -> NONTERM_type_keyword 
    | 1003 -> NONTERM_module_keyword 
    | 1004 -> NONTERM_module_keyword 
    | 1005 -> NONTERM_module_keyword 
    | 1006 -> NONTERM_rbrace 
    | 1007 -> NONTERM_rbrace 
    | 1008 -> NONTERM_rbrace 
    | 1009 -> NONTERM_rparen 
    | 1010 -> NONTERM_rparen 
    | 1011 -> NONTERM_rparen 
    | 1012 -> NONTERM_oblockend 
    | 1013 -> NONTERM_oblockend 
    | 1014 -> NONTERM_oblockend 
    | 1015 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1016 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1017 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1018 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1019 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1020 -> NONTERM_ends_coming_soon_or_recover 
    | 1021 -> NONTERM_ends_coming_soon_or_recover 
    | 1022 -> NONTERM_ends_coming_soon_or_recover 
    | 1023 -> NONTERM_ends_coming_soon_or_recover 
    | 1024 -> NONTERM_ends_coming_soon_or_recover 
    | 1025 -> NONTERM_ends_coming_soon_or_recover 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 194 
let _fsyacc_tagOfErrorTerminal = 192

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | OBLOCKEND_COMING_SOON  -> "OBLOCKEND_COMING_SOON" 
  | OBLOCKEND_IS_HERE  -> "OBLOCKEND_IS_HERE" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | TYPE_COMING_SOON  -> "TYPE_COMING_SOON" 
  | TYPE_IS_HERE  -> "TYPE_IS_HERE" 
  | MODULE_COMING_SOON  -> "MODULE_COMING_SOON" 
  | MODULE_IS_HERE  -> "MODULE_IS_HERE" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE  -> "RBRACE" 
  | RBRACE_COMING_SOON  -> "RBRACE_COMING_SOON" 
  | RBRACE_IS_HERE  -> "RBRACE_IS_HERE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | LBRACE_LESS  -> "LBRACE_LESS" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | GREATER_RBRACE  -> "GREATER_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | LBRACE  -> "LBRACE" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | RPAREN_COMING_SOON  -> "RPAREN_COMING_SOON" 
  | RPAREN_IS_HERE  -> "RPAREN_IS_HERE" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | CONST  -> "CONST" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MUTABLE  -> "MUTABLE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | JOIN_IN  -> "JOIN_IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD _ -> "YIELD" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | NATIVEINT _ -> "NATIVEINT" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | OBLOCKEND_COMING_SOON  -> (null : System.Object) 
  | OBLOCKEND_IS_HERE  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | TYPE_COMING_SOON  -> (null : System.Object) 
  | TYPE_IS_HERE  -> (null : System.Object) 
  | MODULE_COMING_SOON  -> (null : System.Object) 
  | MODULE_IS_HERE  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | RBRACE_COMING_SOON  -> (null : System.Object) 
  | RBRACE_IS_HERE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | LBRACE_LESS  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | GREATER_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RPAREN_COMING_SOON  -> (null : System.Object) 
  | RPAREN_IS_HERE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | JOIN_IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 4us; 5us; 23us; 65535us; 0us; 160us; 2us; 120us; 4us; 36us; 25us; 36us; 27us; 36us; 29us; 36us; 59us; 160us; 66us; 120us; 70us; 160us; 75us; 120us; 79us; 160us; 89us; 160us; 92us; 160us; 94us; 120us; 106us; 120us; 110us; 120us; 112us; 120us; 117us; 120us; 138us; 160us; 142us; 120us; 152us; 120us; 189us; 160us; 193us; 160us; 249us; 65535us; 11us; 14us; 34us; 764us; 74us; 764us; 104us; 764us; 126us; 764us; 179us; 764us; 182us; 764us; 184us; 764us; 213us; 764us; 217us; 764us; 222us; 764us; 253us; 764us; 300us; 764us; 306us; 764us; 310us; 764us; 312us; 764us; 321us; 764us; 353us; 764us; 387us; 764us; 390us; 764us; 392us; 764us; 395us; 764us; 403us; 764us; 409us; 764us; 416us; 764us; 427us; 764us; 430us; 764us; 439us; 764us; 446us; 764us; 449us; 764us; 471us; 764us; 474us; 764us; 507us; 764us; 515us; 764us; 524us; 525us; 570us; 764us; 573us; 764us; 610us; 764us; 613us; 764us; 616us; 764us; 628us; 764us; 632us; 764us; 636us; 764us; 647us; 764us; 660us; 764us; 670us; 764us; 676us; 764us; 722us; 764us; 725us; 764us; 729us; 764us; 739us; 764us; 745us; 764us; 775us; 764us; 798us; 764us; 799us; 764us; 803us; 764us; 804us; 764us; 805us; 764us; 806us; 764us; 808us; 764us; 810us; 764us; 812us; 764us; 814us; 764us; 817us; 764us; 819us; 764us; 821us; 764us; 829us; 764us; 832us; 764us; 844us; 764us; 865us; 764us; 868us; 764us; 870us; 764us; 871us; 764us; 873us; 764us; 874us; 764us; 875us; 764us; 876us; 764us; 883us; 764us; 885us; 764us; 887us; 764us; 892us; 764us; 899us; 764us; 904us; 764us; 906us; 764us; 909us; 764us; 912us; 764us; 928us; 764us; 931us; 764us; 934us; 764us; 940us; 764us; 944us; 764us; 948us; 764us; 950us; 764us; 955us; 764us; 957us; 764us; 959us; 764us; 961us; 764us; 963us; 764us; 965us; 764us; 974us; 764us; 976us; 764us; 984us; 764us; 991us; 764us; 997us; 764us; 999us; 764us; 1001us; 764us; 1002us; 764us; 1005us; 764us; 1007us; 764us; 1008us; 764us; 1011us; 764us; 1014us; 764us; 1017us; 764us; 1019us; 764us; 1024us; 764us; 1061us; 764us; 1063us; 764us; 1065us; 764us; 1067us; 764us; 1069us; 764us; 1072us; 764us; 1073us; 764us; 1074us; 764us; 1075us; 764us; 1076us; 764us; 1077us; 764us; 1078us; 764us; 1079us; 764us; 1080us; 764us; 1081us; 764us; 1082us; 764us; 1083us; 764us; 1084us; 764us; 1085us; 764us; 1086us; 764us; 1087us; 764us; 1088us; 764us; 1089us; 764us; 1090us; 764us; 1091us; 764us; 1113us; 764us; 1116us; 764us; 1118us; 764us; 1123us; 764us; 1130us; 764us; 1135us; 764us; 1136us; 764us; 1140us; 764us; 1142us; 764us; 1146us; 764us; 1148us; 764us; 1152us; 764us; 1155us; 764us; 1157us; 764us; 1159us; 764us; 1160us; 764us; 1162us; 764us; 1163us; 764us; 1165us; 764us; 1166us; 764us; 1168us; 764us; 1169us; 764us; 1171us; 764us; 1172us; 764us; 1174us; 764us; 1175us; 764us; 1177us; 764us; 1178us; 764us; 1181us; 764us; 1182us; 764us; 1187us; 764us; 1189us; 764us; 1191us; 764us; 1192us; 764us; 1195us; 764us; 1202us; 764us; 1203us; 764us; 1206us; 764us; 1207us; 764us; 1220us; 764us; 1229us; 764us; 1236us; 764us; 1244us; 764us; 1247us; 764us; 1250us; 764us; 1253us; 764us; 1254us; 764us; 1265us; 764us; 1272us; 764us; 1273us; 764us; 1279us; 764us; 1285us; 764us; 1286us; 764us; 1287us; 764us; 1303us; 764us; 1313us; 764us; 1326us; 764us; 1327us; 764us; 1329us; 764us; 1331us; 764us; 1335us; 764us; 1336us; 764us; 1337us; 1338us; 1340us; 764us; 1346us; 764us; 1349us; 764us; 1351us; 764us; 1353us; 764us; 1355us; 764us; 1359us; 764us; 1364us; 764us; 1389us; 764us; 1414us; 764us; 1421us; 764us; 1423us; 764us; 1426us; 764us; 1428us; 764us; 1439us; 764us; 1441us; 764us; 1448us; 764us; 1451us; 764us; 1454us; 764us; 1457us; 764us; 1459us; 764us; 1461us; 764us; 1465us; 764us; 1468us; 764us; 1472us; 764us; 1475us; 764us; 1478us; 764us; 1480us; 764us; 1482us; 764us; 1485us; 764us; 1487us; 764us; 1490us; 764us; 1509us; 764us; 1510us; 764us; 1518us; 764us; 1519us; 764us; 1524us; 764us; 1525us; 764us; 1537us; 764us; 1541us; 764us; 1555us; 764us; 1559us; 764us; 1566us; 764us; 1580us; 764us; 1582us; 764us; 1593us; 764us; 1us; 65535us; 11us; 15us; 1us; 65535us; 10us; 11us; 7us; 65535us; 4us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 18us; 27us; 18us; 29us; 18us; 4us; 65535us; 4us; 6us; 25us; 26us; 27us; 28us; 29us; 30us; 5us; 65535us; 4us; 19us; 25us; 19us; 27us; 19us; 29us; 19us; 31us; 32us; 4us; 65535us; 4us; 21us; 25us; 21us; 27us; 21us; 29us; 21us; 4us; 65535us; 4us; 23us; 25us; 23us; 27us; 23us; 29us; 23us; 1us; 65535us; 0us; 1us; 1us; 65535us; 2us; 3us; 6us; 65535us; 34us; 132us; 69us; 70us; 74us; 75us; 104us; 132us; 122us; 132us; 163us; 164us; 4us; 65535us; 54us; 58us; 56us; 58us; 61us; 65us; 63us; 65us; 1us; 65535us; 0us; 37us; 2us; 65535us; 54us; 55us; 56us; 57us; 2us; 65535us; 54us; 56us; 56us; 56us; 1us; 65535us; 2us; 43us; 2us; 65535us; 61us; 62us; 63us; 64us; 2us; 65535us; 61us; 63us; 63us; 63us; 2us; 65535us; 0us; 54us; 59us; 60us; 2us; 65535us; 2us; 61us; 66us; 67us; 3us; 65535us; 0us; 72us; 59us; 72us; 70us; 71us; 6us; 65535us; 0us; 78us; 59us; 78us; 70us; 78us; 79us; 80us; 189us; 190us; 193us; 194us; 9us; 65535us; 0us; 86us; 59us; 86us; 70us; 86us; 79us; 86us; 89us; 90us; 92us; 93us; 138us; 187us; 189us; 86us; 193us; 86us; 3us; 65535us; 2us; 77us; 66us; 77us; 75us; 76us; 5us; 65535us; 2us; 101us; 66us; 101us; 75us; 101us; 94us; 95us; 152us; 153us; 9us; 65535us; 2us; 102us; 66us; 102us; 75us; 102us; 94us; 102us; 106us; 107us; 112us; 113us; 117us; 118us; 142us; 146us; 152us; 102us; 10us; 65535us; 2us; 108us; 66us; 108us; 75us; 108us; 94us; 108us; 106us; 108us; 110us; 111us; 112us; 108us; 117us; 108us; 142us; 108us; 152us; 108us; 10us; 65535us; 2us; 110us; 66us; 110us; 75us; 110us; 94us; 110us; 106us; 110us; 110us; 110us; 112us; 110us; 117us; 110us; 142us; 110us; 152us; 110us; 15us; 65535us; 2us; 119us; 4us; 31us; 25us; 31us; 27us; 31us; 29us; 31us; 31us; 31us; 66us; 119us; 75us; 119us; 94us; 119us; 106us; 119us; 110us; 119us; 112us; 119us; 117us; 119us; 142us; 119us; 152us; 119us; 1us; 65535us; 165us; 166us; 1us; 65535us; 133us; 134us; 2us; 65535us; 133us; 150us; 142us; 143us; 0us; 65535us; 1us; 65535us; 329us; 332us; 9us; 65535us; 0us; 88us; 59us; 88us; 70us; 88us; 79us; 88us; 89us; 88us; 92us; 88us; 138us; 88us; 189us; 88us; 193us; 88us; 9us; 65535us; 0us; 161us; 59us; 161us; 70us; 161us; 79us; 161us; 89us; 161us; 92us; 161us; 138us; 161us; 189us; 161us; 193us; 161us; 2us; 65535us; 180us; 181us; 308us; 309us; 1us; 65535us; 165us; 167us; 80us; 65535us; 0us; 68us; 2us; 73us; 4us; 33us; 25us; 33us; 27us; 33us; 29us; 33us; 31us; 121us; 59us; 68us; 66us; 73us; 70us; 162us; 75us; 103us; 79us; 162us; 89us; 162us; 92us; 162us; 94us; 103us; 106us; 103us; 110us; 121us; 112us; 103us; 117us; 103us; 128us; 323us; 138us; 162us; 142us; 103us; 152us; 103us; 157us; 400us; 172us; 173us; 189us; 162us; 193us; 162us; 232us; 323us; 235us; 323us; 238us; 506us; 241us; 298us; 243us; 297us; 256us; 297us; 262us; 297us; 266us; 297us; 270us; 297us; 277us; 297us; 318us; 323us; 326us; 323us; 329us; 333us; 330us; 506us; 338us; 506us; 340us; 401us; 342us; 400us; 356us; 400us; 360us; 400us; 362us; 400us; 366us; 400us; 372us; 400us; 375us; 400us; 386us; 387us; 433us; 323us; 462us; 493us; 465us; 400us; 468us; 297us; 485us; 493us; 491us; 493us; 518us; 642us; 538us; 547us; 543us; 547us; 544us; 547us; 550us; 547us; 555us; 547us; 580us; 297us; 587us; 297us; 596us; 606us; 599us; 606us; 604us; 606us; 639us; 642us; 654us; 655us; 667us; 718us; 673us; 718us; 685us; 712us; 690us; 699us; 695us; 699us; 697us; 699us; 715us; 718us; 1301us; 297us; 1401us; 494us; 1403us; 718us; 114us; 65535us; 0us; 196us; 2us; 135us; 4us; 135us; 25us; 135us; 27us; 135us; 29us; 135us; 31us; 135us; 59us; 196us; 66us; 135us; 70us; 196us; 75us; 135us; 79us; 196us; 89us; 196us; 92us; 196us; 94us; 135us; 106us; 135us; 110us; 135us; 112us; 135us; 117us; 135us; 128us; 196us; 138us; 196us; 142us; 135us; 152us; 135us; 157us; 196us; 172us; 196us; 179us; 1459us; 189us; 196us; 193us; 196us; 197us; 198us; 232us; 196us; 235us; 196us; 238us; 196us; 241us; 196us; 243us; 196us; 253us; 1459us; 256us; 196us; 262us; 196us; 266us; 196us; 270us; 196us; 277us; 196us; 306us; 1459us; 318us; 196us; 321us; 1459us; 326us; 196us; 329us; 196us; 330us; 196us; 338us; 196us; 340us; 196us; 342us; 196us; 353us; 1459us; 356us; 196us; 360us; 196us; 362us; 196us; 366us; 196us; 372us; 196us; 375us; 196us; 386us; 196us; 416us; 1459us; 433us; 196us; 462us; 196us; 465us; 196us; 468us; 196us; 485us; 196us; 491us; 196us; 518us; 196us; 538us; 196us; 543us; 196us; 544us; 196us; 550us; 196us; 555us; 196us; 580us; 196us; 587us; 196us; 596us; 196us; 599us; 196us; 604us; 196us; 613us; 1459us; 639us; 196us; 654us; 196us; 667us; 196us; 673us; 196us; 685us; 196us; 690us; 196us; 695us; 196us; 697us; 196us; 715us; 196us; 777us; 777us; 778us; 777us; 780us; 777us; 829us; 870us; 832us; 870us; 844us; 870us; 865us; 870us; 870us; 870us; 871us; 870us; 873us; 870us; 874us; 870us; 875us; 870us; 876us; 870us; 883us; 870us; 885us; 870us; 974us; 870us; 1116us; 870us; 1118us; 870us; 1123us; 870us; 1130us; 870us; 1301us; 196us; 1401us; 196us; 1403us; 196us; 1439us; 870us; 1441us; 870us; 1448us; 1459us; 1451us; 1459us; 1454us; 1459us; 1457us; 1459us; 114us; 65535us; 0us; 197us; 2us; 197us; 4us; 197us; 25us; 197us; 27us; 197us; 29us; 197us; 31us; 197us; 59us; 197us; 66us; 197us; 70us; 197us; 75us; 197us; 79us; 197us; 89us; 197us; 92us; 197us; 94us; 197us; 106us; 197us; 110us; 197us; 112us; 197us; 117us; 197us; 128us; 197us; 138us; 197us; 142us; 197us; 152us; 197us; 157us; 197us; 172us; 197us; 179us; 197us; 189us; 197us; 193us; 197us; 197us; 197us; 232us; 197us; 235us; 197us; 238us; 197us; 241us; 197us; 243us; 197us; 253us; 197us; 256us; 197us; 262us; 197us; 266us; 197us; 270us; 197us; 277us; 197us; 306us; 197us; 318us; 197us; 321us; 197us; 326us; 197us; 329us; 197us; 330us; 197us; 338us; 197us; 340us; 197us; 342us; 197us; 353us; 197us; 356us; 197us; 360us; 197us; 362us; 197us; 366us; 197us; 372us; 197us; 375us; 197us; 386us; 197us; 416us; 197us; 433us; 197us; 462us; 197us; 465us; 197us; 468us; 197us; 485us; 197us; 491us; 197us; 518us; 197us; 538us; 197us; 543us; 197us; 544us; 197us; 550us; 197us; 555us; 197us; 580us; 197us; 587us; 197us; 596us; 197us; 599us; 197us; 604us; 197us; 613us; 197us; 639us; 197us; 654us; 197us; 667us; 197us; 673us; 197us; 685us; 197us; 690us; 197us; 695us; 197us; 697us; 197us; 715us; 197us; 777us; 197us; 778us; 197us; 780us; 197us; 829us; 197us; 832us; 197us; 844us; 197us; 865us; 197us; 870us; 197us; 871us; 197us; 873us; 197us; 874us; 197us; 875us; 197us; 876us; 197us; 883us; 197us; 885us; 197us; 974us; 197us; 1116us; 197us; 1118us; 197us; 1123us; 197us; 1130us; 197us; 1301us; 197us; 1401us; 197us; 1403us; 197us; 1439us; 197us; 1441us; 197us; 1448us; 197us; 1451us; 197us; 1454us; 197us; 1457us; 197us; 1us; 65535us; 199us; 200us; 2us; 65535us; 199us; 209us; 210us; 211us; 2us; 65535us; 199us; 215us; 210us; 215us; 2us; 65535us; 69us; 168us; 163us; 168us; 2us; 65535us; 232us; 233us; 235us; 236us; 3us; 65535us; 232us; 234us; 235us; 234us; 318us; 319us; 1us; 65535us; 238us; 239us; 2us; 65535us; 238us; 248us; 241us; 242us; 2us; 65535us; 238us; 251us; 241us; 251us; 2us; 65535us; 238us; 255us; 241us; 255us; 3us; 65535us; 256us; 257us; 266us; 267us; 468us; 469us; 8us; 65535us; 241us; 263us; 243us; 244us; 256us; 274us; 262us; 263us; 266us; 274us; 270us; 271us; 277us; 278us; 468us; 274us; 8us; 65535us; 241us; 275us; 243us; 275us; 256us; 275us; 262us; 275us; 266us; 275us; 270us; 275us; 277us; 275us; 468us; 275us; 4us; 65535us; 299us; 285us; 300us; 285us; 402us; 406us; 403us; 406us; 2us; 65535us; 299us; 301us; 300us; 301us; 3us; 65535us; 307us; 308us; 417us; 418us; 447us; 448us; 2us; 65535us; 288us; 289us; 290us; 291us; 11us; 65535us; 241us; 276us; 243us; 276us; 256us; 276us; 262us; 276us; 266us; 276us; 270us; 276us; 277us; 276us; 468us; 276us; 580us; 581us; 587us; 588us; 1301us; 1302us; 6us; 65535us; 128us; 329us; 232us; 237us; 235us; 237us; 318us; 237us; 326us; 329us; 433us; 329us; 2us; 65535us; 129us; 130us; 327us; 328us; 3us; 65535us; 128us; 129us; 326us; 327us; 433us; 434us; 2us; 65535us; 330us; 331us; 338us; 339us; 3us; 65535us; 330us; 348us; 338us; 348us; 340us; 341us; 3us; 65535us; 330us; 351us; 338us; 351us; 340us; 351us; 3us; 65535us; 330us; 355us; 338us; 355us; 340us; 355us; 3us; 65535us; 157us; 158us; 356us; 357us; 465us; 466us; 10us; 65535us; 157us; 370us; 340us; 363us; 342us; 343us; 356us; 370us; 360us; 373us; 362us; 363us; 366us; 367us; 372us; 373us; 375us; 376us; 465us; 370us; 10us; 65535us; 157us; 371us; 340us; 371us; 342us; 371us; 356us; 371us; 360us; 371us; 362us; 371us; 366us; 371us; 372us; 371us; 375us; 371us; 465us; 371us; 1us; 65535us; 394us; 397us; 2us; 65535us; 377us; 378us; 379us; 380us; 3us; 65535us; 377us; 383us; 379us; 383us; 384us; 385us; 3us; 65535us; 406us; 407us; 495us; 496us; 501us; 502us; 2us; 65535us; 402us; 412us; 403us; 412us; 10us; 65535us; 157us; 374us; 340us; 374us; 342us; 374us; 356us; 374us; 360us; 374us; 362us; 374us; 366us; 374us; 372us; 374us; 375us; 374us; 465us; 374us; 3us; 65535us; 280us; 423us; 402us; 421us; 403us; 421us; 2us; 65535us; 406us; 425us; 495us; 498us; 1us; 65535us; 444us; 445us; 39us; 65535us; 387us; 807us; 392us; 807us; 427us; 839us; 722us; 807us; 798us; 807us; 799us; 807us; 803us; 807us; 804us; 807us; 805us; 807us; 806us; 807us; 808us; 839us; 810us; 839us; 812us; 839us; 817us; 839us; 819us; 839us; 821us; 839us; 829us; 807us; 832us; 807us; 844us; 807us; 865us; 807us; 870us; 807us; 871us; 807us; 873us; 807us; 874us; 807us; 875us; 807us; 876us; 807us; 883us; 807us; 885us; 807us; 974us; 807us; 1001us; 807us; 1007us; 807us; 1116us; 807us; 1118us; 807us; 1123us; 807us; 1130us; 807us; 1421us; 839us; 1426us; 839us; 1439us; 807us; 1441us; 807us; 10us; 65535us; 49us; 50us; 175us; 176us; 302us; 303us; 323us; 532us; 436us; 437us; 442us; 443us; 606us; 607us; 644us; 645us; 655us; 656us; 686us; 687us; 61us; 65535us; 33us; 461us; 49us; 457us; 68us; 461us; 73us; 461us; 103us; 461us; 121us; 461us; 162us; 461us; 175us; 457us; 297us; 461us; 298us; 461us; 302us; 457us; 323us; 457us; 333us; 461us; 387us; 455us; 392us; 455us; 400us; 461us; 401us; 461us; 427us; 455us; 436us; 457us; 442us; 457us; 506us; 461us; 606us; 457us; 644us; 457us; 655us; 457us; 686us; 457us; 722us; 455us; 798us; 455us; 799us; 455us; 803us; 455us; 804us; 455us; 805us; 455us; 806us; 455us; 808us; 455us; 810us; 455us; 812us; 455us; 817us; 455us; 819us; 455us; 821us; 455us; 829us; 455us; 832us; 455us; 844us; 455us; 865us; 455us; 870us; 455us; 871us; 455us; 873us; 455us; 874us; 455us; 875us; 455us; 876us; 455us; 883us; 455us; 885us; 455us; 974us; 455us; 1001us; 455us; 1007us; 455us; 1116us; 455us; 1118us; 455us; 1123us; 455us; 1130us; 455us; 1421us; 455us; 1426us; 455us; 1439us; 455us; 1441us; 455us; 12us; 65535us; 33us; 34us; 68us; 69us; 73us; 74us; 103us; 104us; 121us; 122us; 162us; 163us; 297us; 299us; 298us; 300us; 333us; 334us; 400us; 402us; 401us; 403us; 506us; 507us; 1us; 65535us; 410us; 411us; 4us; 65535us; 343us; 344us; 345us; 346us; 348us; 349us; 649us; 650us; 5us; 65535us; 237us; 240us; 244us; 245us; 246us; 247us; 248us; 249us; 651us; 652us; 2us; 65535us; 402us; 420us; 403us; 420us; 2us; 65535us; 336us; 337us; 428us; 429us; 2us; 65535us; 336us; 478us; 428us; 478us; 2us; 65535us; 472us; 473us; 475us; 476us; 3us; 65535us; 472us; 481us; 475us; 481us; 1184us; 1399us; 2us; 65535us; 462us; 463us; 1401us; 1406us; 4us; 65535us; 462us; 489us; 485us; 486us; 491us; 492us; 1401us; 489us; 4us; 65535us; 462us; 490us; 485us; 490us; 491us; 490us; 1401us; 490us; 2us; 65535us; 493us; 495us; 494us; 495us; 5us; 65535us; 238us; 250us; 241us; 250us; 330us; 350us; 338us; 350us; 340us; 350us; 6us; 65535us; 300us; 514us; 403us; 514us; 507us; 514us; 610us; 634us; 632us; 634us; 660us; 634us; 1us; 65535us; 515us; 516us; 5us; 65535us; 238us; 256us; 241us; 256us; 330us; 356us; 338us; 356us; 340us; 356us; 9us; 65535us; 299us; 310us; 300us; 310us; 402us; 409us; 403us; 409us; 1395us; 1414us; 1397us; 1414us; 1408us; 1414us; 1410us; 1414us; 1412us; 1414us; 1us; 65535us; 323us; 324us; 1us; 65535us; 532us; 534us; 3us; 65535us; 538us; 539us; 550us; 541us; 555us; 542us; 5us; 65535us; 538us; 546us; 543us; 545us; 544us; 545us; 550us; 546us; 555us; 546us; 1us; 65535us; 533us; 536us; 1us; 65535us; 555us; 556us; 4us; 65535us; 177us; 559us; 304us; 559us; 414us; 559us; 807us; 560us; 3us; 65535us; 177us; 178us; 304us; 305us; 414us; 415us; 1us; 65535us; 807us; 808us; 3us; 65535us; 324us; 325us; 541us; 551us; 556us; 557us; 3us; 65535us; 561us; 562us; 1445us; 563us; 1447us; 564us; 4us; 65535us; 561us; 567us; 565us; 566us; 1445us; 567us; 1447us; 567us; 1us; 65535us; 583us; 584us; 3us; 65535us; 300us; 513us; 403us; 513us; 507us; 513us; 5us; 65535us; 300us; 596us; 403us; 596us; 507us; 596us; 598us; 599us; 603us; 604us; 3us; 65535us; 596us; 597us; 599us; 600us; 604us; 605us; 3us; 65535us; 596us; 603us; 599us; 603us; 604us; 603us; 1us; 65535us; 607us; 608us; 3us; 65535us; 300us; 598us; 403us; 598us; 507us; 598us; 3us; 65535us; 300us; 601us; 403us; 601us; 507us; 601us; 3us; 65535us; 610us; 611us; 632us; 633us; 660us; 661us; 2us; 65535us; 518us; 519us; 639us; 640us; 2us; 65535us; 518us; 638us; 639us; 638us; 3us; 65535us; 314us; 315us; 316us; 317us; 642us; 643us; 4us; 65535us; 34us; 131us; 74us; 131us; 104us; 131us; 122us; 131us; 2us; 65535us; 69us; 169us; 163us; 169us; 6us; 65535us; 34us; 654us; 69us; 654us; 74us; 654us; 104us; 654us; 122us; 654us; 163us; 654us; 6us; 65535us; 34us; 649us; 69us; 651us; 74us; 649us; 104us; 649us; 122us; 649us; 163us; 651us; 1us; 65535us; 656us; 657us; 1us; 65535us; 657us; 658us; 15us; 65535us; 2us; 137us; 4us; 137us; 25us; 137us; 27us; 137us; 29us; 137us; 31us; 137us; 66us; 137us; 75us; 137us; 94us; 137us; 106us; 137us; 110us; 137us; 112us; 137us; 117us; 137us; 142us; 137us; 152us; 137us; 111us; 65535us; 34us; 124us; 74us; 124us; 104us; 124us; 122us; 123us; 126us; 927us; 182us; 927us; 184us; 927us; 280us; 679us; 390us; 927us; 395us; 927us; 402us; 679us; 403us; 679us; 430us; 927us; 446us; 927us; 670us; 927us; 676us; 927us; 725us; 927us; 729us; 927us; 739us; 927us; 887us; 927us; 892us; 927us; 904us; 927us; 906us; 927us; 909us; 927us; 912us; 927us; 928us; 927us; 931us; 927us; 934us; 927us; 940us; 927us; 944us; 927us; 948us; 927us; 950us; 927us; 955us; 927us; 957us; 927us; 959us; 927us; 961us; 927us; 963us; 927us; 965us; 927us; 976us; 927us; 984us; 927us; 991us; 927us; 997us; 927us; 999us; 927us; 1002us; 927us; 1005us; 927us; 1008us; 927us; 1011us; 927us; 1014us; 927us; 1017us; 927us; 1019us; 927us; 1024us; 927us; 1067us; 927us; 1069us; 927us; 1072us; 927us; 1073us; 927us; 1074us; 927us; 1075us; 927us; 1076us; 927us; 1077us; 927us; 1078us; 927us; 1079us; 927us; 1080us; 927us; 1081us; 927us; 1082us; 927us; 1083us; 927us; 1084us; 927us; 1085us; 927us; 1086us; 927us; 1087us; 927us; 1088us; 927us; 1089us; 927us; 1090us; 927us; 1091us; 927us; 1113us; 927us; 1135us; 927us; 1136us; 927us; 1140us; 927us; 1142us; 927us; 1146us; 927us; 1148us; 927us; 1152us; 927us; 1155us; 927us; 1157us; 927us; 1220us; 927us; 1229us; 927us; 1236us; 927us; 1244us; 927us; 1247us; 927us; 1250us; 927us; 1253us; 927us; 1254us; 927us; 1265us; 927us; 1272us; 927us; 1273us; 927us; 1279us; 927us; 1285us; 927us; 1286us; 927us; 1287us; 927us; 1303us; 927us; 1313us; 927us; 1326us; 927us; 1327us; 927us; 1329us; 927us; 1331us; 927us; 1335us; 927us; 1336us; 927us; 1359us; 927us; 1364us; 927us; 1389us; 927us; 1423us; 927us; 1428us; 927us; 7us; 65535us; 34us; 127us; 74us; 127us; 104us; 127us; 122us; 127us; 280us; 680us; 402us; 680us; 403us; 680us; 111us; 65535us; 34us; 126us; 74us; 126us; 104us; 126us; 122us; 125us; 126us; 912us; 182us; 931us; 184us; 931us; 280us; 681us; 390us; 912us; 395us; 912us; 402us; 681us; 403us; 681us; 430us; 912us; 446us; 912us; 670us; 912us; 676us; 912us; 725us; 912us; 729us; 912us; 739us; 912us; 887us; 912us; 892us; 912us; 904us; 912us; 906us; 912us; 909us; 912us; 912us; 912us; 928us; 912us; 931us; 912us; 934us; 912us; 940us; 912us; 944us; 912us; 948us; 912us; 950us; 931us; 955us; 931us; 957us; 931us; 959us; 931us; 961us; 931us; 963us; 931us; 965us; 912us; 976us; 912us; 984us; 912us; 991us; 912us; 997us; 931us; 999us; 931us; 1002us; 912us; 1005us; 912us; 1008us; 912us; 1011us; 912us; 1014us; 912us; 1017us; 912us; 1019us; 912us; 1024us; 912us; 1067us; 931us; 1069us; 931us; 1072us; 931us; 1073us; 931us; 1074us; 931us; 1075us; 931us; 1076us; 931us; 1077us; 931us; 1078us; 931us; 1079us; 931us; 1080us; 931us; 1081us; 931us; 1082us; 931us; 1083us; 931us; 1084us; 931us; 1085us; 931us; 1086us; 931us; 1087us; 931us; 1088us; 931us; 1089us; 931us; 1090us; 931us; 1091us; 931us; 1113us; 912us; 1135us; 931us; 1136us; 912us; 1140us; 931us; 1142us; 912us; 1146us; 931us; 1148us; 912us; 1152us; 931us; 1155us; 931us; 1157us; 931us; 1220us; 912us; 1229us; 912us; 1236us; 912us; 1244us; 931us; 1247us; 931us; 1250us; 931us; 1253us; 931us; 1254us; 931us; 1265us; 912us; 1272us; 912us; 1273us; 912us; 1279us; 912us; 1285us; 912us; 1286us; 912us; 1287us; 912us; 1303us; 912us; 1313us; 912us; 1326us; 931us; 1327us; 931us; 1329us; 912us; 1331us; 931us; 1335us; 931us; 1336us; 931us; 1359us; 931us; 1364us; 931us; 1389us; 931us; 1423us; 912us; 1428us; 912us; 110us; 65535us; 34us; 937us; 74us; 937us; 104us; 937us; 126us; 937us; 182us; 937us; 184us; 937us; 280us; 682us; 390us; 937us; 395us; 937us; 402us; 682us; 403us; 682us; 430us; 937us; 446us; 937us; 670us; 937us; 676us; 937us; 725us; 937us; 729us; 937us; 739us; 937us; 887us; 937us; 892us; 937us; 904us; 937us; 906us; 937us; 909us; 937us; 912us; 937us; 928us; 937us; 931us; 937us; 934us; 937us; 940us; 937us; 944us; 937us; 948us; 937us; 950us; 937us; 955us; 937us; 957us; 937us; 959us; 937us; 961us; 937us; 963us; 937us; 965us; 937us; 976us; 937us; 984us; 937us; 991us; 937us; 997us; 937us; 999us; 937us; 1002us; 937us; 1005us; 937us; 1008us; 937us; 1011us; 937us; 1014us; 937us; 1017us; 937us; 1019us; 937us; 1024us; 937us; 1067us; 937us; 1069us; 937us; 1072us; 937us; 1073us; 937us; 1074us; 937us; 1075us; 937us; 1076us; 937us; 1077us; 937us; 1078us; 937us; 1079us; 937us; 1080us; 937us; 1081us; 937us; 1082us; 937us; 1083us; 937us; 1084us; 937us; 1085us; 937us; 1086us; 937us; 1087us; 937us; 1088us; 937us; 1089us; 937us; 1090us; 937us; 1091us; 937us; 1113us; 937us; 1135us; 937us; 1136us; 937us; 1140us; 937us; 1142us; 937us; 1146us; 937us; 1148us; 937us; 1152us; 937us; 1155us; 937us; 1157us; 937us; 1220us; 937us; 1229us; 937us; 1236us; 937us; 1244us; 937us; 1247us; 937us; 1250us; 937us; 1253us; 937us; 1254us; 937us; 1265us; 937us; 1272us; 937us; 1273us; 937us; 1279us; 937us; 1285us; 937us; 1286us; 937us; 1287us; 937us; 1303us; 937us; 1313us; 937us; 1326us; 937us; 1327us; 937us; 1329us; 937us; 1331us; 937us; 1335us; 937us; 1336us; 937us; 1359us; 937us; 1364us; 937us; 1389us; 937us; 1423us; 937us; 1428us; 937us; 3us; 65535us; 280us; 405us; 402us; 404us; 403us; 404us; 4us; 65535us; 674us; 675us; 677us; 678us; 1009us; 1010us; 1020us; 1021us; 111us; 65535us; 34us; 669us; 74us; 669us; 104us; 669us; 122us; 669us; 126us; 669us; 182us; 669us; 184us; 669us; 280us; 669us; 390us; 669us; 395us; 669us; 402us; 669us; 403us; 669us; 430us; 669us; 446us; 669us; 670us; 669us; 676us; 669us; 725us; 669us; 729us; 669us; 739us; 669us; 887us; 669us; 892us; 669us; 904us; 669us; 906us; 669us; 909us; 669us; 912us; 669us; 928us; 669us; 931us; 669us; 934us; 669us; 940us; 669us; 944us; 669us; 948us; 669us; 950us; 669us; 955us; 669us; 957us; 669us; 959us; 669us; 961us; 669us; 963us; 669us; 965us; 669us; 976us; 669us; 984us; 669us; 991us; 669us; 997us; 669us; 999us; 669us; 1002us; 669us; 1005us; 669us; 1008us; 669us; 1011us; 669us; 1014us; 669us; 1017us; 669us; 1019us; 669us; 1024us; 669us; 1067us; 669us; 1069us; 669us; 1072us; 669us; 1073us; 669us; 1074us; 669us; 1075us; 669us; 1076us; 669us; 1077us; 669us; 1078us; 669us; 1079us; 669us; 1080us; 669us; 1081us; 669us; 1082us; 669us; 1083us; 669us; 1084us; 669us; 1085us; 669us; 1086us; 669us; 1087us; 669us; 1088us; 669us; 1089us; 669us; 1090us; 669us; 1091us; 669us; 1113us; 669us; 1135us; 669us; 1136us; 669us; 1140us; 669us; 1142us; 669us; 1146us; 669us; 1148us; 669us; 1152us; 669us; 1155us; 669us; 1157us; 669us; 1220us; 669us; 1229us; 669us; 1236us; 669us; 1244us; 669us; 1247us; 669us; 1250us; 669us; 1253us; 669us; 1254us; 669us; 1265us; 669us; 1272us; 669us; 1273us; 669us; 1279us; 669us; 1285us; 669us; 1286us; 669us; 1287us; 669us; 1303us; 669us; 1313us; 669us; 1326us; 669us; 1327us; 669us; 1329us; 669us; 1331us; 669us; 1335us; 669us; 1336us; 669us; 1359us; 669us; 1364us; 669us; 1389us; 669us; 1423us; 669us; 1428us; 669us; 1us; 65535us; 690us; 691us; 1us; 65535us; 690us; 693us; 3us; 65535us; 690us; 694us; 695us; 696us; 697us; 698us; 2us; 65535us; 699us; 700us; 712us; 703us; 1us; 65535us; 685us; 686us; 4us; 65535us; 667us; 668us; 673us; 674us; 1401us; 1402us; 1403us; 1404us; 2us; 65535us; 713us; 714us; 716us; 717us; 5us; 65535us; 667us; 713us; 673us; 713us; 715us; 716us; 1401us; 713us; 1403us; 713us; 2us; 65535us; 494us; 719us; 718us; 719us; 1us; 65535us; 725us; 726us; 2us; 65535us; 725us; 733us; 729us; 730us; 1us; 65535us; 734us; 735us; 1us; 65535us; 735us; 736us; 1us; 65535us; 737us; 738us; 2us; 65535us; 737us; 743us; 741us; 742us; 247us; 65535us; 34us; 766us; 74us; 766us; 104us; 766us; 126us; 766us; 179us; 1564us; 182us; 766us; 184us; 766us; 213us; 766us; 217us; 766us; 222us; 766us; 253us; 1564us; 300us; 1564us; 306us; 1564us; 310us; 1564us; 312us; 1564us; 321us; 1564us; 353us; 1564us; 387us; 766us; 390us; 766us; 392us; 766us; 395us; 766us; 403us; 1564us; 409us; 1564us; 416us; 1564us; 427us; 766us; 430us; 766us; 439us; 1564us; 446us; 766us; 449us; 1564us; 471us; 1564us; 474us; 766us; 507us; 1564us; 515us; 1564us; 524us; 1564us; 570us; 1564us; 573us; 1564us; 610us; 1564us; 613us; 1564us; 616us; 766us; 628us; 766us; 632us; 1564us; 636us; 1564us; 647us; 1564us; 660us; 1564us; 670us; 766us; 676us; 766us; 722us; 766us; 725us; 766us; 729us; 766us; 739us; 766us; 745us; 1564us; 775us; 1564us; 798us; 766us; 799us; 766us; 803us; 766us; 804us; 766us; 805us; 766us; 806us; 766us; 808us; 766us; 810us; 766us; 812us; 766us; 814us; 1564us; 817us; 766us; 819us; 766us; 821us; 766us; 829us; 766us; 832us; 766us; 844us; 766us; 865us; 766us; 868us; 1564us; 870us; 766us; 871us; 766us; 873us; 766us; 874us; 766us; 875us; 766us; 876us; 766us; 883us; 766us; 885us; 766us; 887us; 766us; 892us; 766us; 899us; 1564us; 904us; 766us; 906us; 766us; 909us; 766us; 912us; 766us; 928us; 766us; 931us; 766us; 934us; 766us; 940us; 766us; 944us; 766us; 948us; 766us; 950us; 766us; 955us; 766us; 957us; 766us; 959us; 766us; 961us; 766us; 963us; 766us; 965us; 766us; 974us; 766us; 976us; 766us; 984us; 766us; 991us; 766us; 997us; 766us; 999us; 766us; 1001us; 766us; 1002us; 766us; 1005us; 766us; 1007us; 766us; 1008us; 766us; 1011us; 766us; 1014us; 766us; 1017us; 766us; 1019us; 766us; 1024us; 766us; 1061us; 1564us; 1063us; 1564us; 1065us; 1564us; 1067us; 766us; 1069us; 766us; 1072us; 766us; 1073us; 766us; 1074us; 766us; 1075us; 766us; 1076us; 766us; 1077us; 766us; 1078us; 766us; 1079us; 766us; 1080us; 766us; 1081us; 766us; 1082us; 766us; 1083us; 766us; 1084us; 766us; 1085us; 766us; 1086us; 766us; 1087us; 766us; 1088us; 766us; 1089us; 766us; 1090us; 766us; 1091us; 766us; 1113us; 766us; 1116us; 766us; 1118us; 766us; 1123us; 766us; 1130us; 766us; 1135us; 766us; 1136us; 766us; 1140us; 766us; 1142us; 766us; 1146us; 766us; 1148us; 766us; 1152us; 766us; 1155us; 766us; 1157us; 766us; 1159us; 766us; 1160us; 766us; 1162us; 766us; 1163us; 766us; 1165us; 766us; 1166us; 766us; 1168us; 766us; 1169us; 766us; 1171us; 766us; 1172us; 766us; 1174us; 766us; 1175us; 766us; 1177us; 1564us; 1178us; 1564us; 1181us; 766us; 1182us; 766us; 1187us; 766us; 1189us; 766us; 1191us; 766us; 1192us; 766us; 1195us; 766us; 1202us; 766us; 1203us; 766us; 1206us; 766us; 1207us; 766us; 1220us; 766us; 1229us; 766us; 1236us; 766us; 1244us; 766us; 1247us; 766us; 1250us; 766us; 1253us; 766us; 1254us; 766us; 1265us; 766us; 1272us; 766us; 1273us; 766us; 1279us; 766us; 1285us; 766us; 1286us; 766us; 1287us; 766us; 1303us; 766us; 1313us; 766us; 1326us; 766us; 1327us; 766us; 1329us; 766us; 1331us; 766us; 1335us; 766us; 1336us; 766us; 1340us; 766us; 1346us; 1564us; 1349us; 1564us; 1351us; 1564us; 1353us; 1564us; 1355us; 766us; 1359us; 766us; 1364us; 766us; 1389us; 766us; 1414us; 1564us; 1421us; 766us; 1423us; 766us; 1426us; 766us; 1428us; 766us; 1439us; 766us; 1441us; 766us; 1448us; 1564us; 1451us; 1564us; 1454us; 1564us; 1457us; 1564us; 1459us; 1564us; 1461us; 1564us; 1465us; 1564us; 1468us; 1564us; 1472us; 1564us; 1475us; 1564us; 1478us; 1564us; 1480us; 1564us; 1482us; 1564us; 1485us; 1564us; 1487us; 1564us; 1490us; 1564us; 1509us; 1564us; 1510us; 1564us; 1518us; 1564us; 1519us; 1564us; 1524us; 1564us; 1525us; 1564us; 1537us; 1564us; 1541us; 1564us; 1555us; 1564us; 1559us; 1564us; 1566us; 766us; 1580us; 1564us; 1582us; 1564us; 1593us; 1564us; 178us; 65535us; 34us; 1256us; 74us; 1256us; 104us; 1256us; 126us; 1256us; 182us; 1256us; 184us; 1256us; 213us; 1256us; 217us; 1256us; 222us; 1256us; 387us; 840us; 390us; 1256us; 392us; 840us; 395us; 1256us; 427us; 840us; 430us; 1256us; 446us; 1256us; 474us; 1256us; 616us; 617us; 628us; 629us; 670us; 1256us; 676us; 1256us; 722us; 840us; 725us; 1256us; 729us; 1256us; 739us; 1256us; 798us; 840us; 799us; 840us; 803us; 840us; 804us; 840us; 805us; 840us; 806us; 840us; 808us; 840us; 810us; 840us; 812us; 840us; 817us; 840us; 819us; 840us; 821us; 840us; 829us; 840us; 832us; 840us; 844us; 840us; 865us; 840us; 870us; 840us; 871us; 840us; 873us; 840us; 874us; 840us; 875us; 840us; 876us; 840us; 883us; 840us; 885us; 840us; 887us; 1256us; 892us; 1256us; 904us; 1256us; 906us; 1256us; 909us; 1256us; 912us; 1256us; 928us; 1256us; 931us; 1256us; 934us; 1256us; 940us; 1256us; 944us; 1256us; 948us; 1256us; 950us; 1256us; 955us; 1256us; 957us; 1256us; 959us; 1256us; 961us; 1256us; 963us; 1256us; 965us; 1256us; 974us; 840us; 976us; 1256us; 984us; 1256us; 991us; 1256us; 997us; 1256us; 999us; 1256us; 1001us; 840us; 1002us; 1256us; 1005us; 1256us; 1007us; 840us; 1008us; 1256us; 1011us; 1256us; 1014us; 1256us; 1017us; 1256us; 1019us; 1256us; 1024us; 1256us; 1067us; 1256us; 1069us; 1256us; 1072us; 1256us; 1073us; 1256us; 1074us; 1256us; 1075us; 1256us; 1076us; 1256us; 1077us; 1256us; 1078us; 1256us; 1079us; 1256us; 1080us; 1256us; 1081us; 1256us; 1082us; 1256us; 1083us; 1256us; 1084us; 1256us; 1085us; 1256us; 1086us; 1256us; 1087us; 1256us; 1088us; 1256us; 1089us; 1256us; 1090us; 1256us; 1091us; 1256us; 1113us; 1256us; 1116us; 840us; 1118us; 840us; 1123us; 840us; 1130us; 840us; 1135us; 1256us; 1136us; 1256us; 1140us; 1256us; 1142us; 1256us; 1146us; 1256us; 1148us; 1256us; 1152us; 1256us; 1155us; 1256us; 1157us; 1256us; 1159us; 1256us; 1160us; 1256us; 1162us; 1256us; 1163us; 1256us; 1165us; 1256us; 1166us; 1256us; 1168us; 1256us; 1169us; 1256us; 1171us; 1256us; 1172us; 1256us; 1174us; 1256us; 1175us; 1256us; 1181us; 1256us; 1182us; 1256us; 1187us; 1256us; 1189us; 1256us; 1191us; 1256us; 1192us; 1256us; 1195us; 1256us; 1202us; 1256us; 1203us; 1256us; 1206us; 1256us; 1207us; 1256us; 1220us; 1256us; 1229us; 1256us; 1236us; 1256us; 1244us; 1256us; 1247us; 1256us; 1250us; 1256us; 1253us; 1256us; 1254us; 1256us; 1265us; 1256us; 1272us; 1256us; 1273us; 1256us; 1279us; 1256us; 1285us; 1256us; 1286us; 1256us; 1287us; 1256us; 1303us; 1256us; 1313us; 1256us; 1326us; 1256us; 1327us; 1256us; 1329us; 1256us; 1331us; 1256us; 1335us; 1256us; 1336us; 1256us; 1340us; 1256us; 1355us; 1256us; 1359us; 1256us; 1364us; 1256us; 1389us; 1256us; 1421us; 840us; 1423us; 1256us; 1426us; 840us; 1428us; 1256us; 1439us; 840us; 1441us; 840us; 1566us; 1256us; 3us; 65535us; 387us; 388us; 392us; 393us; 722us; 723us; 3us; 65535us; 777us; 773us; 778us; 774us; 780us; 774us; 2us; 65535us; 778us; 779us; 780us; 781us; 1us; 65535us; 335us; 336us; 11us; 65535us; 387us; 769us; 392us; 769us; 722us; 769us; 798us; 788us; 799us; 789us; 803us; 790us; 804us; 791us; 805us; 792us; 806us; 793us; 1001us; 794us; 1007us; 795us; 11us; 65535us; 387us; 800us; 392us; 800us; 722us; 800us; 798us; 800us; 799us; 800us; 803us; 800us; 804us; 800us; 805us; 800us; 806us; 800us; 1001us; 800us; 1007us; 800us; 11us; 65535us; 387us; 801us; 392us; 801us; 722us; 801us; 798us; 801us; 799us; 801us; 803us; 801us; 804us; 801us; 805us; 801us; 806us; 801us; 1001us; 801us; 1007us; 801us; 30us; 65535us; 387us; 802us; 392us; 802us; 722us; 802us; 798us; 802us; 799us; 802us; 803us; 802us; 804us; 802us; 805us; 802us; 806us; 802us; 829us; 872us; 832us; 872us; 844us; 872us; 865us; 872us; 870us; 872us; 871us; 872us; 873us; 872us; 874us; 872us; 875us; 872us; 876us; 872us; 883us; 872us; 885us; 872us; 974us; 872us; 1001us; 802us; 1007us; 802us; 1116us; 872us; 1118us; 872us; 1123us; 872us; 1130us; 872us; 1439us; 872us; 1441us; 872us; 8us; 65535us; 808us; 809us; 810us; 811us; 812us; 813us; 817us; 818us; 819us; 820us; 821us; 822us; 1421us; 1422us; 1426us; 1427us; 39us; 65535us; 387us; 816us; 392us; 816us; 427us; 428us; 722us; 816us; 798us; 816us; 799us; 816us; 803us; 816us; 804us; 816us; 805us; 816us; 806us; 816us; 808us; 817us; 810us; 817us; 812us; 817us; 817us; 817us; 819us; 817us; 821us; 817us; 829us; 816us; 832us; 816us; 844us; 816us; 865us; 816us; 870us; 816us; 871us; 816us; 873us; 816us; 874us; 816us; 875us; 816us; 876us; 816us; 883us; 816us; 885us; 816us; 974us; 816us; 1001us; 816us; 1007us; 816us; 1116us; 816us; 1118us; 816us; 1123us; 816us; 1130us; 816us; 1421us; 817us; 1426us; 817us; 1439us; 816us; 1441us; 816us; 1us; 65535us; 844us; 845us; 19us; 65535us; 829us; 860us; 832us; 860us; 844us; 851us; 865us; 852us; 870us; 853us; 871us; 854us; 873us; 855us; 874us; 856us; 875us; 857us; 876us; 858us; 883us; 859us; 885us; 860us; 974us; 861us; 1116us; 862us; 1118us; 862us; 1123us; 862us; 1130us; 862us; 1439us; 862us; 1441us; 862us; 19us; 65535us; 829us; 866us; 832us; 866us; 844us; 866us; 865us; 866us; 870us; 866us; 871us; 866us; 873us; 866us; 874us; 866us; 875us; 866us; 876us; 866us; 883us; 866us; 885us; 866us; 974us; 866us; 1116us; 866us; 1118us; 866us; 1123us; 866us; 1130us; 866us; 1439us; 866us; 1441us; 866us; 19us; 65535us; 829us; 867us; 832us; 867us; 844us; 867us; 865us; 867us; 870us; 867us; 871us; 867us; 873us; 867us; 874us; 867us; 875us; 867us; 876us; 867us; 883us; 867us; 885us; 867us; 974us; 867us; 1116us; 867us; 1118us; 867us; 1123us; 867us; 1130us; 867us; 1439us; 867us; 1441us; 867us; 1us; 65535us; 826us; 827us; 2us; 65535us; 826us; 877us; 880us; 881us; 2us; 65535us; 826us; 878us; 880us; 878us; 3us; 65535us; 829us; 830us; 832us; 833us; 885us; 886us; 23us; 65535us; 126us; 932us; 390us; 391us; 395us; 396us; 430us; 431us; 446us; 447us; 670us; 671us; 676us; 677us; 739us; 740us; 912us; 932us; 931us; 932us; 934us; 935us; 948us; 949us; 965us; 966us; 976us; 977us; 984us; 985us; 991us; 992us; 1002us; 1003us; 1005us; 1006us; 1008us; 1009us; 1011us; 1012us; 1017us; 1018us; 1019us; 1020us; 1423us; 1424us; 6us; 65535us; 959us; 960us; 961us; 962us; 1069us; 1070us; 1359us; 1360us; 1364us; 1365us; 1389us; 1390us; 5us; 65535us; 944us; 945us; 1024us; 1025us; 1136us; 1137us; 1329us; 1330us; 1428us; 1429us; 48us; 65535us; 126us; 891us; 390us; 891us; 395us; 891us; 430us; 891us; 446us; 891us; 670us; 891us; 676us; 891us; 725us; 734us; 729us; 734us; 739us; 891us; 887us; 888us; 892us; 893us; 909us; 910us; 912us; 891us; 928us; 929us; 931us; 891us; 934us; 891us; 940us; 941us; 944us; 896us; 948us; 891us; 965us; 891us; 976us; 891us; 984us; 891us; 991us; 891us; 1002us; 891us; 1005us; 891us; 1008us; 891us; 1011us; 891us; 1014us; 1015us; 1017us; 891us; 1019us; 891us; 1024us; 896us; 1113us; 1114us; 1136us; 896us; 1142us; 1143us; 1148us; 1149us; 1229us; 1234us; 1236us; 1237us; 1265us; 1266us; 1272us; 1274us; 1273us; 1274us; 1285us; 1305us; 1286us; 1305us; 1287us; 1305us; 1303us; 1304us; 1329us; 896us; 1423us; 891us; 1428us; 896us; 53us; 65535us; 126us; 898us; 390us; 898us; 395us; 898us; 430us; 898us; 446us; 898us; 670us; 898us; 676us; 898us; 725us; 898us; 729us; 898us; 739us; 898us; 887us; 898us; 892us; 898us; 904us; 905us; 906us; 907us; 909us; 898us; 912us; 898us; 928us; 898us; 931us; 898us; 934us; 898us; 940us; 898us; 944us; 898us; 948us; 898us; 965us; 898us; 976us; 898us; 984us; 898us; 991us; 898us; 1002us; 898us; 1005us; 898us; 1008us; 898us; 1011us; 898us; 1014us; 898us; 1017us; 898us; 1019us; 898us; 1024us; 898us; 1113us; 898us; 1136us; 898us; 1142us; 898us; 1148us; 898us; 1220us; 1324us; 1229us; 898us; 1236us; 898us; 1265us; 898us; 1272us; 898us; 1273us; 898us; 1279us; 1324us; 1285us; 898us; 1286us; 898us; 1287us; 898us; 1303us; 898us; 1313us; 1324us; 1329us; 898us; 1423us; 898us; 1428us; 898us; 84us; 65535us; 80us; 83us; 95us; 98us; 135us; 136us; 143us; 145us; 146us; 148us; 153us; 155us; 199us; 1759us; 201us; 1759us; 257us; 259us; 263us; 265us; 267us; 269us; 271us; 273us; 344us; 347us; 357us; 359us; 363us; 364us; 367us; 368us; 471us; 1759us; 486us; 488us; 510us; 511us; 519us; 521us; 674us; 684us; 677us; 684us; 724us; 728us; 730us; 732us; 780us; 787us; 781us; 784us; 844us; 850us; 845us; 847us; 861us; 996us; 888us; 890us; 941us; 943us; 945us; 947us; 950us; 954us; 951us; 953us; 963us; 972us; 964us; 971us; 966us; 968us; 974us; 1759us; 975us; 1759us; 976us; 1759us; 977us; 1759us; 983us; 990us; 984us; 989us; 985us; 987us; 1009us; 684us; 1020us; 684us; 1050us; 1154us; 1119us; 1121us; 1143us; 1145us; 1149us; 1151us; 1155us; 1759us; 1157us; 1759us; 1208us; 1228us; 1211us; 1228us; 1220us; 1225us; 1221us; 1223us; 1236us; 1241us; 1237us; 1239us; 1266us; 1268us; 1272us; 1278us; 1273us; 1278us; 1274us; 1276us; 1279us; 1284us; 1280us; 1282us; 1285us; 1298us; 1286us; 1298us; 1287us; 1298us; 1289us; 1753us; 1313us; 1318us; 1314us; 1316us; 1326us; 1328us; 1331us; 1759us; 1388us; 1759us; 1389us; 1759us; 1428us; 1434us; 1429us; 1431us; 1540us; 1585us; 1560us; 1563us; 1561us; 1563us; 1575us; 1759us; 1580us; 1591us; 1582us; 1759us; 1587us; 1589us; 1631us; 1759us; 107us; 65535us; 34us; 35us; 74us; 105us; 104us; 105us; 126us; 901us; 182us; 183us; 184us; 185us; 390us; 901us; 395us; 901us; 430us; 901us; 446us; 901us; 670us; 901us; 676us; 901us; 725us; 901us; 729us; 901us; 739us; 901us; 887us; 901us; 892us; 901us; 904us; 901us; 906us; 901us; 909us; 901us; 912us; 901us; 928us; 901us; 931us; 901us; 934us; 901us; 940us; 901us; 944us; 901us; 948us; 901us; 950us; 951us; 955us; 956us; 957us; 958us; 959us; 895us; 961us; 895us; 963us; 964us; 965us; 901us; 976us; 901us; 984us; 901us; 991us; 901us; 997us; 998us; 999us; 1000us; 1002us; 901us; 1005us; 901us; 1008us; 901us; 1011us; 901us; 1014us; 901us; 1017us; 901us; 1019us; 901us; 1024us; 901us; 1067us; 1026us; 1069us; 895us; 1072us; 1027us; 1073us; 1028us; 1074us; 1029us; 1075us; 1030us; 1076us; 1031us; 1077us; 1032us; 1078us; 1033us; 1079us; 1034us; 1080us; 1035us; 1081us; 1036us; 1082us; 1037us; 1083us; 1038us; 1084us; 1039us; 1085us; 1040us; 1086us; 1041us; 1087us; 1042us; 1088us; 1043us; 1089us; 1044us; 1090us; 1045us; 1091us; 1046us; 1113us; 901us; 1135us; 1047us; 1136us; 901us; 1140us; 1048us; 1142us; 901us; 1146us; 1049us; 1148us; 901us; 1152us; 1050us; 1155us; 1051us; 1157us; 1052us; 1220us; 903us; 1229us; 901us; 1236us; 902us; 1244us; 1053us; 1247us; 1053us; 1250us; 1053us; 1253us; 1054us; 1254us; 1055us; 1265us; 901us; 1272us; 901us; 1273us; 901us; 1279us; 903us; 1285us; 901us; 1286us; 901us; 1287us; 901us; 1303us; 901us; 1313us; 903us; 1326us; 1057us; 1327us; 1058us; 1329us; 901us; 1331us; 1056us; 1335us; 1059us; 1336us; 1060us; 1359us; 895us; 1364us; 895us; 1389us; 895us; 1423us; 901us; 1428us; 901us; 1us; 65535us; 1216us; 1217us; 2us; 65535us; 941us; 942us; 945us; 946us; 4us; 65535us; 1116us; 1117us; 1118us; 1119us; 1439us; 1440us; 1441us; 1442us; 6us; 65535us; 1116us; 1128us; 1118us; 1128us; 1123us; 1128us; 1130us; 1128us; 1439us; 1128us; 1441us; 1128us; 6us; 65535us; 1116us; 1122us; 1118us; 1122us; 1123us; 1124us; 1130us; 1131us; 1439us; 1122us; 1441us; 1122us; 1us; 65535us; 862us; 1127us; 1us; 65535us; 1128us; 1129us; 2us; 65535us; 951us; 952us; 1050us; 1153us; 2us; 65535us; 951us; 1138us; 1050us; 1138us; 1us; 65535us; 1138us; 1139us; 107us; 65535us; 34us; 1071us; 74us; 1071us; 104us; 1071us; 126us; 1071us; 182us; 1071us; 184us; 1071us; 390us; 1071us; 395us; 1071us; 430us; 1071us; 446us; 1071us; 670us; 1071us; 676us; 1071us; 725us; 1071us; 729us; 1071us; 739us; 1071us; 887us; 1071us; 892us; 1071us; 904us; 1071us; 906us; 1071us; 909us; 1071us; 912us; 1071us; 928us; 1071us; 931us; 1071us; 934us; 1071us; 940us; 1071us; 944us; 1071us; 948us; 1071us; 950us; 1071us; 955us; 1071us; 957us; 1071us; 959us; 1071us; 961us; 1071us; 963us; 1071us; 965us; 1071us; 976us; 1071us; 984us; 1071us; 991us; 1071us; 997us; 1071us; 999us; 1071us; 1002us; 1071us; 1005us; 1071us; 1008us; 1071us; 1011us; 1071us; 1014us; 1071us; 1017us; 1071us; 1019us; 1071us; 1024us; 1071us; 1067us; 1071us; 1069us; 1071us; 1072us; 1071us; 1073us; 1071us; 1074us; 1071us; 1075us; 1071us; 1076us; 1071us; 1077us; 1071us; 1078us; 1071us; 1079us; 1071us; 1080us; 1071us; 1081us; 1071us; 1082us; 1071us; 1083us; 1071us; 1084us; 1071us; 1085us; 1071us; 1086us; 1071us; 1087us; 1071us; 1088us; 1071us; 1089us; 1071us; 1090us; 1071us; 1091us; 1071us; 1113us; 1071us; 1135us; 1071us; 1136us; 1071us; 1140us; 1071us; 1142us; 1071us; 1146us; 1071us; 1148us; 1071us; 1152us; 1071us; 1155us; 1071us; 1157us; 1071us; 1220us; 1071us; 1229us; 1071us; 1236us; 1071us; 1244us; 1071us; 1247us; 1071us; 1250us; 1071us; 1253us; 1071us; 1254us; 1071us; 1265us; 1071us; 1272us; 1071us; 1273us; 1071us; 1279us; 1071us; 1285us; 1071us; 1286us; 1071us; 1287us; 1071us; 1303us; 1071us; 1313us; 1071us; 1326us; 1071us; 1327us; 1071us; 1329us; 1071us; 1331us; 1071us; 1335us; 1071us; 1336us; 1071us; 1359us; 1071us; 1364us; 1071us; 1389us; 1071us; 1423us; 1071us; 1428us; 1071us; 121us; 65535us; 34us; 1068us; 74us; 1068us; 104us; 1068us; 126us; 1068us; 182us; 1068us; 184us; 1068us; 390us; 1068us; 395us; 1068us; 430us; 1068us; 446us; 1068us; 670us; 1068us; 676us; 1068us; 725us; 1068us; 729us; 1068us; 739us; 1068us; 887us; 1068us; 892us; 1068us; 904us; 1068us; 906us; 1068us; 909us; 1068us; 912us; 1068us; 928us; 1068us; 931us; 1068us; 934us; 1068us; 940us; 1068us; 944us; 1068us; 948us; 1068us; 950us; 1068us; 955us; 1068us; 957us; 1068us; 959us; 1068us; 961us; 1068us; 963us; 1068us; 965us; 1068us; 976us; 1068us; 984us; 1068us; 991us; 1068us; 997us; 1068us; 999us; 1068us; 1002us; 1068us; 1005us; 1068us; 1008us; 1068us; 1011us; 1068us; 1014us; 1068us; 1017us; 1068us; 1019us; 1068us; 1024us; 1068us; 1067us; 1068us; 1069us; 1068us; 1072us; 1068us; 1073us; 1068us; 1074us; 1068us; 1075us; 1068us; 1076us; 1068us; 1077us; 1068us; 1078us; 1068us; 1079us; 1068us; 1080us; 1068us; 1081us; 1068us; 1082us; 1068us; 1083us; 1068us; 1084us; 1068us; 1085us; 1068us; 1086us; 1068us; 1087us; 1068us; 1088us; 1068us; 1089us; 1068us; 1090us; 1068us; 1091us; 1068us; 1113us; 1068us; 1135us; 1068us; 1136us; 1068us; 1140us; 1068us; 1142us; 1068us; 1146us; 1068us; 1148us; 1068us; 1152us; 1068us; 1155us; 1068us; 1157us; 1068us; 1159us; 1161us; 1160us; 1161us; 1162us; 1164us; 1163us; 1164us; 1165us; 1167us; 1166us; 1167us; 1168us; 1170us; 1169us; 1170us; 1171us; 1173us; 1172us; 1173us; 1174us; 1176us; 1175us; 1176us; 1187us; 1188us; 1189us; 1190us; 1220us; 1068us; 1229us; 1068us; 1236us; 1068us; 1244us; 1068us; 1247us; 1068us; 1250us; 1068us; 1253us; 1068us; 1254us; 1068us; 1265us; 1068us; 1272us; 1068us; 1273us; 1068us; 1279us; 1068us; 1285us; 1068us; 1286us; 1068us; 1287us; 1068us; 1303us; 1068us; 1313us; 1068us; 1326us; 1068us; 1327us; 1068us; 1329us; 1068us; 1331us; 1068us; 1335us; 1068us; 1336us; 1068us; 1359us; 1068us; 1364us; 1068us; 1389us; 1068us; 1423us; 1068us; 1428us; 1068us; 121us; 65535us; 34us; 1191us; 74us; 1191us; 104us; 1191us; 126us; 1191us; 182us; 1191us; 184us; 1191us; 390us; 1191us; 395us; 1191us; 430us; 1191us; 446us; 1191us; 670us; 1191us; 676us; 1191us; 725us; 1191us; 729us; 1191us; 739us; 1191us; 887us; 1191us; 892us; 1191us; 904us; 1191us; 906us; 1191us; 909us; 1191us; 912us; 1191us; 928us; 1191us; 931us; 1191us; 934us; 1191us; 940us; 1191us; 944us; 1191us; 948us; 1191us; 950us; 1191us; 955us; 1191us; 957us; 1191us; 959us; 1191us; 961us; 1191us; 963us; 1191us; 965us; 1191us; 976us; 1191us; 984us; 1191us; 991us; 1191us; 997us; 1191us; 999us; 1191us; 1002us; 1191us; 1005us; 1191us; 1008us; 1191us; 1011us; 1191us; 1014us; 1191us; 1017us; 1191us; 1019us; 1191us; 1024us; 1191us; 1067us; 1191us; 1069us; 1191us; 1072us; 1191us; 1073us; 1191us; 1074us; 1191us; 1075us; 1191us; 1076us; 1191us; 1077us; 1191us; 1078us; 1191us; 1079us; 1191us; 1080us; 1191us; 1081us; 1191us; 1082us; 1191us; 1083us; 1191us; 1084us; 1191us; 1085us; 1191us; 1086us; 1191us; 1087us; 1191us; 1088us; 1191us; 1089us; 1191us; 1090us; 1191us; 1091us; 1191us; 1113us; 1191us; 1135us; 1191us; 1136us; 1191us; 1140us; 1191us; 1142us; 1191us; 1146us; 1191us; 1148us; 1191us; 1152us; 1191us; 1155us; 1191us; 1157us; 1191us; 1159us; 1191us; 1160us; 1191us; 1162us; 1191us; 1163us; 1191us; 1165us; 1191us; 1166us; 1191us; 1168us; 1191us; 1169us; 1191us; 1171us; 1191us; 1172us; 1191us; 1174us; 1191us; 1175us; 1191us; 1187us; 1191us; 1189us; 1191us; 1220us; 1191us; 1229us; 1191us; 1236us; 1191us; 1244us; 1191us; 1247us; 1191us; 1250us; 1191us; 1253us; 1191us; 1254us; 1191us; 1265us; 1191us; 1272us; 1191us; 1273us; 1191us; 1279us; 1191us; 1285us; 1191us; 1286us; 1191us; 1287us; 1191us; 1303us; 1191us; 1313us; 1192us; 1326us; 1191us; 1327us; 1191us; 1329us; 1191us; 1331us; 1191us; 1335us; 1191us; 1336us; 1191us; 1359us; 1191us; 1364us; 1191us; 1389us; 1191us; 1423us; 1191us; 1428us; 1191us; 3us; 65535us; 1191us; 1193us; 1192us; 1193us; 1340us; 1343us; 130us; 65535us; 34us; 1194us; 74us; 1194us; 104us; 1194us; 126us; 1194us; 182us; 1194us; 184us; 1194us; 390us; 1194us; 395us; 1194us; 430us; 1194us; 446us; 1194us; 670us; 1194us; 676us; 1194us; 725us; 1194us; 729us; 1194us; 739us; 1194us; 887us; 1194us; 892us; 1194us; 904us; 1194us; 906us; 1194us; 909us; 1194us; 912us; 1194us; 928us; 1194us; 931us; 1194us; 934us; 1194us; 940us; 1194us; 944us; 1194us; 948us; 1194us; 950us; 1194us; 955us; 1194us; 957us; 1194us; 959us; 1194us; 961us; 1194us; 963us; 1194us; 965us; 1194us; 976us; 1194us; 984us; 1194us; 991us; 1194us; 997us; 1194us; 999us; 1194us; 1002us; 1194us; 1005us; 1194us; 1008us; 1194us; 1011us; 1194us; 1014us; 1194us; 1017us; 1194us; 1019us; 1194us; 1024us; 1194us; 1067us; 1194us; 1069us; 1194us; 1072us; 1194us; 1073us; 1194us; 1074us; 1194us; 1075us; 1194us; 1076us; 1194us; 1077us; 1194us; 1078us; 1194us; 1079us; 1194us; 1080us; 1194us; 1081us; 1194us; 1082us; 1194us; 1083us; 1194us; 1084us; 1194us; 1085us; 1194us; 1086us; 1194us; 1087us; 1194us; 1088us; 1194us; 1089us; 1194us; 1090us; 1194us; 1091us; 1194us; 1113us; 1194us; 1135us; 1194us; 1136us; 1194us; 1140us; 1194us; 1142us; 1194us; 1146us; 1194us; 1148us; 1194us; 1152us; 1194us; 1155us; 1194us; 1157us; 1194us; 1159us; 1194us; 1160us; 1194us; 1162us; 1194us; 1163us; 1194us; 1165us; 1194us; 1166us; 1194us; 1168us; 1194us; 1169us; 1194us; 1171us; 1194us; 1172us; 1194us; 1174us; 1194us; 1175us; 1194us; 1187us; 1194us; 1189us; 1194us; 1191us; 1197us; 1192us; 1197us; 1195us; 1196us; 1202us; 1198us; 1203us; 1199us; 1206us; 1200us; 1207us; 1200us; 1220us; 1194us; 1229us; 1194us; 1236us; 1194us; 1244us; 1194us; 1247us; 1194us; 1250us; 1194us; 1253us; 1194us; 1254us; 1194us; 1265us; 1194us; 1272us; 1194us; 1273us; 1194us; 1279us; 1194us; 1285us; 1194us; 1286us; 1194us; 1287us; 1194us; 1303us; 1194us; 1313us; 1194us; 1326us; 1194us; 1327us; 1194us; 1329us; 1194us; 1331us; 1194us; 1335us; 1194us; 1336us; 1194us; 1340us; 1197us; 1359us; 1194us; 1364us; 1194us; 1389us; 1194us; 1423us; 1194us; 1428us; 1194us; 1566us; 1201us; 2us; 65535us; 1208us; 1209us; 1211us; 1212us; 4us; 65535us; 1236us; 1242us; 1244us; 1245us; 1247us; 1248us; 1250us; 1251us; 137us; 65535us; 34us; 1226us; 74us; 1226us; 104us; 1226us; 126us; 1226us; 182us; 1226us; 184us; 1226us; 213us; 1344us; 217us; 1344us; 222us; 1344us; 390us; 1226us; 395us; 1226us; 430us; 1226us; 446us; 1226us; 474us; 475us; 670us; 1226us; 676us; 1226us; 725us; 1226us; 729us; 1226us; 739us; 1226us; 887us; 1226us; 892us; 1226us; 904us; 1226us; 906us; 1226us; 909us; 1226us; 912us; 1226us; 928us; 1226us; 931us; 1226us; 934us; 1226us; 940us; 1226us; 944us; 1226us; 948us; 1226us; 950us; 1226us; 955us; 1226us; 957us; 1226us; 959us; 1226us; 961us; 1226us; 963us; 1226us; 965us; 1226us; 976us; 1226us; 984us; 1226us; 991us; 1226us; 997us; 1226us; 999us; 1226us; 1002us; 1226us; 1005us; 1226us; 1008us; 1226us; 1011us; 1226us; 1014us; 1226us; 1017us; 1226us; 1019us; 1226us; 1024us; 1226us; 1067us; 1226us; 1069us; 1226us; 1072us; 1226us; 1073us; 1226us; 1074us; 1226us; 1075us; 1226us; 1076us; 1226us; 1077us; 1226us; 1078us; 1226us; 1079us; 1226us; 1080us; 1226us; 1081us; 1226us; 1082us; 1226us; 1083us; 1226us; 1084us; 1226us; 1085us; 1226us; 1086us; 1226us; 1087us; 1226us; 1088us; 1226us; 1089us; 1226us; 1090us; 1226us; 1091us; 1226us; 1113us; 1226us; 1135us; 1226us; 1136us; 1226us; 1140us; 1226us; 1142us; 1226us; 1146us; 1226us; 1148us; 1226us; 1152us; 1226us; 1155us; 1226us; 1157us; 1226us; 1159us; 1226us; 1160us; 1226us; 1162us; 1226us; 1163us; 1226us; 1165us; 1226us; 1166us; 1226us; 1168us; 1226us; 1169us; 1226us; 1171us; 1226us; 1172us; 1226us; 1174us; 1226us; 1175us; 1226us; 1181us; 1183us; 1182us; 1184us; 1187us; 1226us; 1189us; 1226us; 1191us; 1226us; 1192us; 1226us; 1195us; 1226us; 1202us; 1226us; 1203us; 1226us; 1206us; 1226us; 1207us; 1226us; 1220us; 1226us; 1229us; 1226us; 1236us; 1226us; 1244us; 1226us; 1247us; 1226us; 1250us; 1226us; 1253us; 1226us; 1254us; 1226us; 1265us; 1226us; 1272us; 1226us; 1273us; 1226us; 1279us; 1226us; 1285us; 1226us; 1286us; 1226us; 1287us; 1226us; 1303us; 1226us; 1313us; 1226us; 1326us; 1226us; 1327us; 1226us; 1329us; 1226us; 1331us; 1226us; 1335us; 1226us; 1336us; 1226us; 1340us; 1226us; 1355us; 1344us; 1359us; 1226us; 1364us; 1226us; 1389us; 1226us; 1423us; 1226us; 1428us; 1226us; 1566us; 1226us; 137us; 65535us; 34us; 1264us; 74us; 1264us; 104us; 1264us; 126us; 1264us; 182us; 1264us; 184us; 1264us; 213us; 1264us; 217us; 1264us; 222us; 1264us; 390us; 1264us; 395us; 1264us; 430us; 1264us; 446us; 1264us; 474us; 1264us; 670us; 1264us; 676us; 1264us; 725us; 1264us; 729us; 1264us; 739us; 1264us; 887us; 1264us; 892us; 1264us; 904us; 1264us; 906us; 1264us; 909us; 1264us; 912us; 1264us; 928us; 1264us; 931us; 1264us; 934us; 1264us; 940us; 1264us; 944us; 1264us; 948us; 1264us; 950us; 1264us; 955us; 1264us; 957us; 1264us; 959us; 1264us; 961us; 1264us; 963us; 1264us; 965us; 1264us; 976us; 1264us; 984us; 1264us; 991us; 1264us; 997us; 1264us; 999us; 1264us; 1002us; 1264us; 1005us; 1264us; 1008us; 1264us; 1011us; 1264us; 1014us; 1264us; 1017us; 1264us; 1019us; 1264us; 1024us; 1264us; 1067us; 1264us; 1069us; 1264us; 1072us; 1264us; 1073us; 1264us; 1074us; 1264us; 1075us; 1264us; 1076us; 1264us; 1077us; 1264us; 1078us; 1264us; 1079us; 1264us; 1080us; 1264us; 1081us; 1264us; 1082us; 1264us; 1083us; 1264us; 1084us; 1264us; 1085us; 1264us; 1086us; 1264us; 1087us; 1264us; 1088us; 1264us; 1089us; 1264us; 1090us; 1264us; 1091us; 1264us; 1113us; 1264us; 1135us; 1264us; 1136us; 1264us; 1140us; 1264us; 1142us; 1264us; 1146us; 1264us; 1148us; 1264us; 1152us; 1264us; 1155us; 1264us; 1157us; 1264us; 1159us; 1264us; 1160us; 1264us; 1162us; 1264us; 1163us; 1264us; 1165us; 1264us; 1166us; 1264us; 1168us; 1264us; 1169us; 1264us; 1171us; 1264us; 1172us; 1264us; 1174us; 1264us; 1175us; 1264us; 1181us; 1264us; 1182us; 1264us; 1187us; 1264us; 1189us; 1264us; 1191us; 1264us; 1192us; 1264us; 1195us; 1264us; 1202us; 1264us; 1203us; 1264us; 1206us; 1264us; 1207us; 1264us; 1220us; 1264us; 1229us; 1264us; 1236us; 1264us; 1244us; 1264us; 1247us; 1264us; 1250us; 1264us; 1253us; 1264us; 1254us; 1264us; 1265us; 1264us; 1272us; 1264us; 1273us; 1264us; 1279us; 1264us; 1285us; 1264us; 1286us; 1264us; 1287us; 1264us; 1303us; 1264us; 1313us; 1264us; 1326us; 1264us; 1327us; 1264us; 1329us; 1264us; 1331us; 1264us; 1335us; 1264us; 1336us; 1264us; 1340us; 1264us; 1355us; 1264us; 1359us; 1264us; 1364us; 1264us; 1389us; 1264us; 1423us; 1264us; 1428us; 1264us; 1566us; 1264us; 176us; 65535us; 34us; 1262us; 74us; 1262us; 104us; 1262us; 126us; 1262us; 182us; 1262us; 184us; 1262us; 213us; 1262us; 217us; 1262us; 222us; 1262us; 387us; 823us; 390us; 1262us; 392us; 823us; 395us; 1262us; 427us; 823us; 430us; 1262us; 446us; 1262us; 474us; 1262us; 670us; 1262us; 676us; 1262us; 722us; 823us; 725us; 1262us; 729us; 1262us; 739us; 1262us; 798us; 823us; 799us; 823us; 803us; 823us; 804us; 823us; 805us; 823us; 806us; 823us; 808us; 823us; 810us; 823us; 812us; 823us; 817us; 823us; 819us; 823us; 821us; 823us; 829us; 823us; 832us; 823us; 844us; 823us; 865us; 823us; 870us; 823us; 871us; 823us; 873us; 823us; 874us; 823us; 875us; 823us; 876us; 823us; 883us; 823us; 885us; 823us; 887us; 1262us; 892us; 1262us; 904us; 1262us; 906us; 1262us; 909us; 1262us; 912us; 1262us; 928us; 1262us; 931us; 1262us; 934us; 1262us; 940us; 1262us; 944us; 1262us; 948us; 1262us; 950us; 1262us; 955us; 1262us; 957us; 1262us; 959us; 1262us; 961us; 1262us; 963us; 1262us; 965us; 1262us; 974us; 823us; 976us; 1262us; 984us; 1262us; 991us; 1262us; 997us; 1262us; 999us; 1262us; 1001us; 823us; 1002us; 1262us; 1005us; 1262us; 1007us; 823us; 1008us; 1262us; 1011us; 1262us; 1014us; 1262us; 1017us; 1262us; 1019us; 1262us; 1024us; 1262us; 1067us; 1262us; 1069us; 1262us; 1072us; 1262us; 1073us; 1262us; 1074us; 1262us; 1075us; 1262us; 1076us; 1262us; 1077us; 1262us; 1078us; 1262us; 1079us; 1262us; 1080us; 1262us; 1081us; 1262us; 1082us; 1262us; 1083us; 1262us; 1084us; 1262us; 1085us; 1262us; 1086us; 1262us; 1087us; 1262us; 1088us; 1262us; 1089us; 1262us; 1090us; 1262us; 1091us; 1262us; 1113us; 1262us; 1116us; 823us; 1118us; 823us; 1123us; 823us; 1130us; 823us; 1135us; 1262us; 1136us; 1262us; 1140us; 1262us; 1142us; 1262us; 1146us; 1262us; 1148us; 1262us; 1152us; 1262us; 1155us; 1262us; 1157us; 1262us; 1159us; 1262us; 1160us; 1262us; 1162us; 1262us; 1163us; 1262us; 1165us; 1262us; 1166us; 1262us; 1168us; 1262us; 1169us; 1262us; 1171us; 1262us; 1172us; 1262us; 1174us; 1262us; 1175us; 1262us; 1181us; 1262us; 1182us; 1262us; 1187us; 1262us; 1189us; 1262us; 1191us; 1262us; 1192us; 1262us; 1195us; 1262us; 1202us; 1262us; 1203us; 1262us; 1206us; 1262us; 1207us; 1262us; 1220us; 1262us; 1229us; 1262us; 1236us; 1262us; 1244us; 1262us; 1247us; 1262us; 1250us; 1262us; 1253us; 1262us; 1254us; 1262us; 1265us; 1262us; 1272us; 1262us; 1273us; 1262us; 1279us; 1262us; 1285us; 1262us; 1286us; 1262us; 1287us; 1262us; 1303us; 1262us; 1313us; 1262us; 1326us; 1262us; 1327us; 1262us; 1329us; 1262us; 1331us; 1262us; 1335us; 1262us; 1336us; 1262us; 1340us; 1262us; 1355us; 1262us; 1359us; 1262us; 1364us; 1262us; 1389us; 1262us; 1421us; 823us; 1423us; 1262us; 1426us; 823us; 1428us; 1262us; 1439us; 823us; 1441us; 823us; 1566us; 1262us; 137us; 65535us; 34us; 1263us; 74us; 1263us; 104us; 1263us; 126us; 1263us; 182us; 1263us; 184us; 1263us; 213us; 1263us; 217us; 1263us; 222us; 1263us; 390us; 1263us; 395us; 1263us; 430us; 1263us; 446us; 1263us; 474us; 1263us; 670us; 1263us; 676us; 1263us; 725us; 1263us; 729us; 1263us; 739us; 1263us; 887us; 1263us; 892us; 1263us; 904us; 1263us; 906us; 1263us; 909us; 1263us; 912us; 1263us; 928us; 1263us; 931us; 1263us; 934us; 1263us; 940us; 1263us; 944us; 1263us; 948us; 1263us; 950us; 1263us; 955us; 1263us; 957us; 1263us; 959us; 1263us; 961us; 1263us; 963us; 1263us; 965us; 1263us; 976us; 1263us; 984us; 1263us; 991us; 1263us; 997us; 1263us; 999us; 1263us; 1002us; 1263us; 1005us; 1263us; 1008us; 1263us; 1011us; 1263us; 1014us; 1263us; 1017us; 1263us; 1019us; 1263us; 1024us; 1263us; 1067us; 1263us; 1069us; 1263us; 1072us; 1263us; 1073us; 1263us; 1074us; 1263us; 1075us; 1263us; 1076us; 1263us; 1077us; 1263us; 1078us; 1263us; 1079us; 1263us; 1080us; 1263us; 1081us; 1263us; 1082us; 1263us; 1083us; 1263us; 1084us; 1263us; 1085us; 1263us; 1086us; 1263us; 1087us; 1263us; 1088us; 1263us; 1089us; 1263us; 1090us; 1263us; 1091us; 1263us; 1113us; 1263us; 1135us; 1263us; 1136us; 1263us; 1140us; 1263us; 1142us; 1263us; 1146us; 1263us; 1148us; 1263us; 1152us; 1263us; 1155us; 1263us; 1157us; 1263us; 1159us; 1263us; 1160us; 1263us; 1162us; 1263us; 1163us; 1263us; 1165us; 1263us; 1166us; 1263us; 1168us; 1263us; 1169us; 1263us; 1171us; 1263us; 1172us; 1263us; 1174us; 1263us; 1175us; 1263us; 1181us; 1263us; 1182us; 1263us; 1187us; 1263us; 1189us; 1263us; 1191us; 1263us; 1192us; 1263us; 1195us; 1263us; 1202us; 1263us; 1203us; 1263us; 1206us; 1263us; 1207us; 1263us; 1220us; 1263us; 1229us; 1263us; 1236us; 1263us; 1244us; 1263us; 1247us; 1263us; 1250us; 1263us; 1253us; 1263us; 1254us; 1263us; 1265us; 1263us; 1272us; 1263us; 1273us; 1263us; 1279us; 1263us; 1285us; 1263us; 1286us; 1263us; 1287us; 1263us; 1303us; 1263us; 1313us; 1263us; 1326us; 1263us; 1327us; 1263us; 1329us; 1263us; 1331us; 1263us; 1335us; 1263us; 1336us; 1263us; 1340us; 1263us; 1355us; 1263us; 1359us; 1263us; 1364us; 1263us; 1389us; 1263us; 1423us; 1263us; 1428us; 1263us; 1566us; 1263us; 137us; 65535us; 34us; 1257us; 74us; 1257us; 104us; 1257us; 126us; 1257us; 182us; 1257us; 184us; 1257us; 213us; 1257us; 217us; 1257us; 222us; 1257us; 390us; 1257us; 395us; 1257us; 430us; 1257us; 446us; 1257us; 474us; 1257us; 670us; 1257us; 676us; 1257us; 725us; 1257us; 729us; 1257us; 739us; 1257us; 887us; 1257us; 892us; 1257us; 904us; 1257us; 906us; 1257us; 909us; 1257us; 912us; 1257us; 928us; 1257us; 931us; 1257us; 934us; 1257us; 940us; 1257us; 944us; 1257us; 948us; 1257us; 950us; 1257us; 955us; 1257us; 957us; 1257us; 959us; 1257us; 961us; 1257us; 963us; 1257us; 965us; 1257us; 976us; 1257us; 984us; 1257us; 991us; 1257us; 997us; 1257us; 999us; 1257us; 1002us; 1257us; 1005us; 1257us; 1008us; 1257us; 1011us; 1257us; 1014us; 1257us; 1017us; 1257us; 1019us; 1257us; 1024us; 1257us; 1067us; 1257us; 1069us; 1257us; 1072us; 1257us; 1073us; 1257us; 1074us; 1257us; 1075us; 1257us; 1076us; 1257us; 1077us; 1257us; 1078us; 1257us; 1079us; 1257us; 1080us; 1257us; 1081us; 1257us; 1082us; 1257us; 1083us; 1257us; 1084us; 1257us; 1085us; 1257us; 1086us; 1257us; 1087us; 1257us; 1088us; 1257us; 1089us; 1257us; 1090us; 1257us; 1091us; 1257us; 1113us; 1257us; 1135us; 1257us; 1136us; 1257us; 1140us; 1257us; 1142us; 1257us; 1146us; 1257us; 1148us; 1257us; 1152us; 1257us; 1155us; 1257us; 1157us; 1257us; 1159us; 1257us; 1160us; 1257us; 1162us; 1257us; 1163us; 1257us; 1165us; 1257us; 1166us; 1257us; 1168us; 1257us; 1169us; 1257us; 1171us; 1257us; 1172us; 1257us; 1174us; 1257us; 1175us; 1257us; 1181us; 1257us; 1182us; 1257us; 1187us; 1257us; 1189us; 1257us; 1191us; 1257us; 1192us; 1257us; 1195us; 1257us; 1202us; 1257us; 1203us; 1257us; 1206us; 1257us; 1207us; 1257us; 1220us; 1257us; 1229us; 1257us; 1236us; 1257us; 1244us; 1257us; 1247us; 1257us; 1250us; 1257us; 1253us; 1257us; 1254us; 1257us; 1265us; 1257us; 1272us; 1257us; 1273us; 1257us; 1279us; 1257us; 1285us; 1257us; 1286us; 1257us; 1287us; 1257us; 1303us; 1257us; 1313us; 1257us; 1326us; 1257us; 1327us; 1257us; 1329us; 1257us; 1331us; 1257us; 1335us; 1257us; 1336us; 1257us; 1340us; 1257us; 1355us; 1257us; 1359us; 1257us; 1364us; 1257us; 1389us; 1257us; 1423us; 1257us; 1428us; 1257us; 1566us; 1257us; 3us; 65535us; 1285us; 1289us; 1286us; 1289us; 1287us; 1289us; 3us; 65535us; 1285us; 1299us; 1286us; 1299us; 1287us; 1299us; 1us; 65535us; 1286us; 1309us; 137us; 65535us; 34us; 1258us; 74us; 1258us; 104us; 1258us; 126us; 1258us; 182us; 1258us; 184us; 1258us; 213us; 1258us; 217us; 1258us; 222us; 1258us; 390us; 1258us; 395us; 1258us; 430us; 1258us; 446us; 1258us; 474us; 1258us; 670us; 1258us; 676us; 1258us; 725us; 1258us; 729us; 1258us; 739us; 1258us; 887us; 1258us; 892us; 1258us; 904us; 1258us; 906us; 1258us; 909us; 1258us; 912us; 1258us; 928us; 1258us; 931us; 1258us; 934us; 1258us; 940us; 1258us; 944us; 1258us; 948us; 1258us; 950us; 1258us; 955us; 1258us; 957us; 1258us; 959us; 1258us; 961us; 1258us; 963us; 1258us; 965us; 1258us; 976us; 1258us; 984us; 1258us; 991us; 1258us; 997us; 1258us; 999us; 1258us; 1002us; 1258us; 1005us; 1258us; 1008us; 1258us; 1011us; 1258us; 1014us; 1258us; 1017us; 1258us; 1019us; 1258us; 1024us; 1258us; 1067us; 1258us; 1069us; 1258us; 1072us; 1258us; 1073us; 1258us; 1074us; 1258us; 1075us; 1258us; 1076us; 1258us; 1077us; 1258us; 1078us; 1258us; 1079us; 1258us; 1080us; 1258us; 1081us; 1258us; 1082us; 1258us; 1083us; 1258us; 1084us; 1258us; 1085us; 1258us; 1086us; 1258us; 1087us; 1258us; 1088us; 1258us; 1089us; 1258us; 1090us; 1258us; 1091us; 1258us; 1113us; 1258us; 1135us; 1258us; 1136us; 1258us; 1140us; 1258us; 1142us; 1258us; 1146us; 1258us; 1148us; 1258us; 1152us; 1258us; 1155us; 1258us; 1157us; 1258us; 1159us; 1258us; 1160us; 1258us; 1162us; 1258us; 1163us; 1258us; 1165us; 1258us; 1166us; 1258us; 1168us; 1258us; 1169us; 1258us; 1171us; 1258us; 1172us; 1258us; 1174us; 1258us; 1175us; 1258us; 1181us; 1258us; 1182us; 1258us; 1187us; 1258us; 1189us; 1258us; 1191us; 1258us; 1192us; 1258us; 1195us; 1258us; 1202us; 1258us; 1203us; 1258us; 1206us; 1258us; 1207us; 1258us; 1220us; 1258us; 1229us; 1258us; 1236us; 1258us; 1244us; 1258us; 1247us; 1258us; 1250us; 1258us; 1253us; 1258us; 1254us; 1258us; 1265us; 1258us; 1272us; 1258us; 1273us; 1258us; 1279us; 1258us; 1285us; 1258us; 1286us; 1258us; 1287us; 1258us; 1303us; 1258us; 1313us; 1258us; 1326us; 1258us; 1327us; 1258us; 1329us; 1258us; 1331us; 1258us; 1335us; 1258us; 1336us; 1258us; 1340us; 1258us; 1355us; 1258us; 1359us; 1258us; 1364us; 1258us; 1389us; 1258us; 1423us; 1258us; 1428us; 1258us; 1566us; 1258us; 1us; 65535us; 1313us; 1314us; 2us; 65535us; 1220us; 1221us; 1279us; 1280us; 3us; 65535us; 1220us; 1323us; 1279us; 1323us; 1313us; 1322us; 4us; 65535us; 1220us; 1325us; 1279us; 1325us; 1313us; 1325us; 1331us; 1332us; 1us; 65535us; 1022us; 1023us; 1us; 65535us; 974us; 975us; 1us; 65535us; 974us; 983us; 3us; 65535us; 1285us; 1306us; 1286us; 1306us; 1287us; 1306us; 1us; 65535us; 1339us; 1340us; 4us; 65535us; 213us; 214us; 217us; 218us; 222us; 223us; 1355us; 1356us; 1us; 65535us; 1338us; 1339us; 1us; 65535us; 1340us; 1341us; 1us; 65535us; 1313us; 1320us; 6us; 65535us; 1357us; 1358us; 1361us; 1362us; 1366us; 1367us; 1370us; 1371us; 1372us; 1373us; 1376us; 1377us; 6us; 65535us; 1357us; 1380us; 1361us; 1380us; 1366us; 1380us; 1370us; 1380us; 1372us; 1379us; 1376us; 1380us; 3us; 65535us; 1368us; 1388us; 1372us; 1388us; 1380us; 1388us; 5us; 65535us; 1356us; 1357us; 1360us; 1361us; 1365us; 1366us; 1369us; 1370us; 1375us; 1376us; 3us; 65535us; 1368us; 1369us; 1372us; 1375us; 1380us; 1387us; 1us; 65535us; 1313us; 1321us; 1us; 65535us; 1313us; 1393us; 1us; 65535us; 1415us; 1416us; 2us; 65535us; 1393us; 1394us; 1415us; 1400us; 1us; 65535us; 1397us; 1398us; 4us; 65535us; 1395us; 1396us; 1408us; 1409us; 1410us; 1411us; 1412us; 1413us; 5us; 65535us; 1395us; 1410us; 1397us; 1408us; 1408us; 1410us; 1410us; 1410us; 1412us; 1410us; 1us; 65535us; 1059us; 1336us; 107us; 65535us; 34us; 939us; 74us; 939us; 104us; 939us; 126us; 939us; 182us; 939us; 184us; 939us; 390us; 939us; 395us; 939us; 430us; 939us; 446us; 939us; 670us; 939us; 676us; 939us; 725us; 939us; 729us; 939us; 739us; 939us; 887us; 939us; 892us; 939us; 904us; 939us; 906us; 939us; 909us; 939us; 912us; 939us; 928us; 939us; 931us; 939us; 934us; 939us; 940us; 939us; 944us; 939us; 948us; 939us; 950us; 939us; 955us; 939us; 957us; 939us; 959us; 939us; 961us; 939us; 963us; 939us; 965us; 939us; 976us; 939us; 984us; 939us; 991us; 939us; 997us; 939us; 999us; 939us; 1002us; 939us; 1005us; 939us; 1008us; 939us; 1011us; 939us; 1014us; 939us; 1017us; 939us; 1019us; 939us; 1024us; 939us; 1067us; 939us; 1069us; 939us; 1072us; 939us; 1073us; 939us; 1074us; 939us; 1075us; 939us; 1076us; 939us; 1077us; 939us; 1078us; 939us; 1079us; 939us; 1080us; 939us; 1081us; 939us; 1082us; 939us; 1083us; 939us; 1084us; 939us; 1085us; 939us; 1086us; 939us; 1087us; 939us; 1088us; 939us; 1089us; 939us; 1090us; 939us; 1091us; 939us; 1113us; 939us; 1135us; 939us; 1136us; 939us; 1140us; 939us; 1142us; 939us; 1146us; 939us; 1148us; 939us; 1152us; 939us; 1155us; 939us; 1157us; 939us; 1220us; 939us; 1229us; 939us; 1236us; 939us; 1244us; 939us; 1247us; 939us; 1250us; 939us; 1253us; 939us; 1254us; 939us; 1265us; 939us; 1272us; 939us; 1273us; 939us; 1279us; 939us; 1285us; 939us; 1286us; 939us; 1287us; 939us; 1303us; 939us; 1313us; 939us; 1326us; 939us; 1327us; 939us; 1329us; 939us; 1331us; 939us; 1335us; 939us; 1336us; 939us; 1359us; 939us; 1364us; 939us; 1389us; 939us; 1423us; 939us; 1428us; 939us; 107us; 65535us; 34us; 938us; 74us; 938us; 104us; 938us; 126us; 938us; 182us; 938us; 184us; 938us; 390us; 938us; 395us; 938us; 430us; 938us; 446us; 938us; 670us; 938us; 676us; 938us; 725us; 938us; 729us; 938us; 739us; 938us; 887us; 938us; 892us; 938us; 904us; 938us; 906us; 938us; 909us; 938us; 912us; 938us; 928us; 938us; 931us; 938us; 934us; 938us; 940us; 938us; 944us; 938us; 948us; 938us; 950us; 938us; 955us; 938us; 957us; 938us; 959us; 938us; 961us; 938us; 963us; 938us; 965us; 938us; 976us; 938us; 984us; 938us; 991us; 938us; 997us; 938us; 999us; 938us; 1002us; 938us; 1005us; 938us; 1008us; 938us; 1011us; 938us; 1014us; 938us; 1017us; 938us; 1019us; 938us; 1024us; 938us; 1067us; 938us; 1069us; 938us; 1072us; 938us; 1073us; 938us; 1074us; 938us; 1075us; 938us; 1076us; 938us; 1077us; 938us; 1078us; 938us; 1079us; 938us; 1080us; 938us; 1081us; 938us; 1082us; 938us; 1083us; 938us; 1084us; 938us; 1085us; 938us; 1086us; 938us; 1087us; 938us; 1088us; 938us; 1089us; 938us; 1090us; 938us; 1091us; 938us; 1113us; 938us; 1135us; 938us; 1136us; 938us; 1140us; 938us; 1142us; 938us; 1146us; 938us; 1148us; 938us; 1152us; 938us; 1155us; 938us; 1157us; 938us; 1220us; 938us; 1229us; 938us; 1236us; 938us; 1244us; 938us; 1247us; 938us; 1250us; 938us; 1253us; 938us; 1254us; 938us; 1265us; 938us; 1272us; 938us; 1273us; 938us; 1279us; 938us; 1285us; 938us; 1286us; 938us; 1287us; 938us; 1303us; 938us; 1313us; 938us; 1326us; 938us; 1327us; 938us; 1329us; 938us; 1331us; 938us; 1335us; 938us; 1336us; 938us; 1359us; 938us; 1364us; 938us; 1389us; 938us; 1423us; 938us; 1428us; 938us; 3us; 65535us; 775us; 776us; 868us; 869us; 899us; 900us; 5us; 65535us; 179us; 180us; 306us; 307us; 321us; 322us; 416us; 417us; 1448us; 1449us; 3us; 65535us; 388us; 389us; 393us; 394us; 723us; 724us; 9us; 65535us; 179us; 1446us; 253us; 254us; 306us; 1446us; 321us; 1446us; 353us; 354us; 416us; 1446us; 613us; 614us; 1448us; 1446us; 1451us; 1452us; 9us; 65535us; 179us; 1450us; 253us; 1450us; 306us; 1450us; 321us; 1450us; 353us; 1450us; 416us; 1450us; 613us; 1450us; 1448us; 1450us; 1451us; 1450us; 2us; 65535us; 1454us; 1455us; 1457us; 1458us; 11us; 65535us; 179us; 1453us; 253us; 1453us; 306us; 1453us; 321us; 1453us; 353us; 1453us; 416us; 1453us; 613us; 1453us; 1448us; 1453us; 1451us; 1453us; 1454us; 1456us; 1457us; 1456us; 32us; 65535us; 300us; 512us; 403us; 512us; 439us; 440us; 449us; 450us; 507us; 512us; 515us; 1561us; 570us; 571us; 573us; 574us; 647us; 648us; 745us; 746us; 775us; 1444us; 868us; 1444us; 899us; 1444us; 1061us; 1062us; 1063us; 1064us; 1065us; 1066us; 1346us; 1347us; 1349us; 1350us; 1351us; 1561us; 1475us; 1476us; 1509us; 1561us; 1510us; 1561us; 1518us; 1520us; 1519us; 1521us; 1524us; 1526us; 1525us; 1527us; 1537us; 1592us; 1541us; 1592us; 1559us; 1560us; 1580us; 1592us; 1582us; 1592us; 1593us; 1594us; 32us; 65535us; 300us; 1474us; 403us; 1474us; 439us; 1474us; 449us; 1474us; 507us; 1474us; 515us; 1474us; 570us; 1474us; 573us; 1474us; 647us; 1474us; 745us; 1474us; 775us; 1474us; 868us; 1474us; 899us; 1474us; 1061us; 1474us; 1063us; 1474us; 1065us; 1474us; 1346us; 1474us; 1349us; 1474us; 1351us; 1474us; 1475us; 1474us; 1509us; 1474us; 1510us; 1474us; 1518us; 1474us; 1519us; 1474us; 1524us; 1474us; 1525us; 1474us; 1537us; 1474us; 1541us; 1474us; 1559us; 1474us; 1580us; 1474us; 1582us; 1474us; 1593us; 1474us; 5us; 65535us; 1478us; 1479us; 1480us; 1481us; 1482us; 1483us; 1485us; 1486us; 1487us; 1488us; 2us; 65535us; 636us; 637us; 1490us; 1491us; 86us; 65535us; 179us; 1497us; 253us; 1497us; 300us; 1497us; 306us; 1497us; 310us; 1497us; 311us; 1496us; 312us; 1497us; 313us; 1496us; 321us; 1497us; 353us; 1497us; 403us; 1497us; 409us; 1497us; 410us; 1496us; 416us; 1497us; 439us; 1497us; 449us; 1497us; 471us; 1497us; 507us; 1497us; 515us; 1497us; 524us; 1497us; 570us; 1497us; 573us; 1497us; 610us; 1497us; 613us; 1497us; 632us; 1497us; 635us; 1496us; 636us; 1497us; 647us; 1497us; 660us; 1497us; 745us; 1497us; 775us; 1497us; 814us; 1497us; 868us; 1497us; 899us; 1497us; 1061us; 1497us; 1063us; 1497us; 1065us; 1497us; 1177us; 1497us; 1178us; 1497us; 1346us; 1497us; 1349us; 1497us; 1351us; 1497us; 1353us; 1497us; 1414us; 1497us; 1415us; 1496us; 1448us; 1497us; 1451us; 1497us; 1454us; 1497us; 1457us; 1497us; 1459us; 1497us; 1460us; 1496us; 1461us; 1497us; 1462us; 1496us; 1465us; 1497us; 1466us; 1496us; 1467us; 1496us; 1468us; 1497us; 1469us; 1496us; 1472us; 1497us; 1473us; 1496us; 1475us; 1497us; 1477us; 1496us; 1478us; 1497us; 1480us; 1497us; 1482us; 1497us; 1484us; 1496us; 1485us; 1497us; 1487us; 1497us; 1489us; 1496us; 1490us; 1497us; 1500us; 1496us; 1509us; 1497us; 1510us; 1497us; 1513us; 1496us; 1514us; 1496us; 1518us; 1497us; 1519us; 1497us; 1524us; 1497us; 1525us; 1497us; 1537us; 1497us; 1541us; 1497us; 1555us; 1497us; 1559us; 1497us; 1580us; 1497us; 1582us; 1497us; 1593us; 1497us; 86us; 65535us; 179us; 1557us; 253us; 1557us; 300us; 1557us; 306us; 1557us; 310us; 1557us; 311us; 1507us; 312us; 1557us; 313us; 1507us; 321us; 1557us; 353us; 1557us; 403us; 1557us; 409us; 1557us; 410us; 1507us; 416us; 1557us; 439us; 1557us; 449us; 1557us; 471us; 1557us; 507us; 1557us; 515us; 1557us; 524us; 1557us; 570us; 1557us; 573us; 1557us; 610us; 1557us; 613us; 1557us; 632us; 1557us; 635us; 1507us; 636us; 1557us; 647us; 1557us; 660us; 1557us; 745us; 1557us; 775us; 1557us; 814us; 1557us; 868us; 1557us; 899us; 1557us; 1061us; 1557us; 1063us; 1557us; 1065us; 1557us; 1177us; 1557us; 1178us; 1557us; 1346us; 1557us; 1349us; 1557us; 1351us; 1557us; 1353us; 1557us; 1414us; 1557us; 1415us; 1507us; 1448us; 1557us; 1451us; 1557us; 1454us; 1557us; 1457us; 1557us; 1459us; 1557us; 1460us; 1507us; 1461us; 1557us; 1462us; 1507us; 1465us; 1557us; 1466us; 1507us; 1467us; 1507us; 1468us; 1557us; 1469us; 1507us; 1472us; 1557us; 1473us; 1507us; 1475us; 1557us; 1477us; 1507us; 1478us; 1557us; 1480us; 1557us; 1482us; 1557us; 1484us; 1507us; 1485us; 1557us; 1487us; 1557us; 1489us; 1507us; 1490us; 1557us; 1500us; 1508us; 1509us; 1557us; 1510us; 1557us; 1513us; 1515us; 1514us; 1516us; 1518us; 1557us; 1519us; 1557us; 1524us; 1557us; 1525us; 1557us; 1537us; 1557us; 1541us; 1557us; 1555us; 1557us; 1559us; 1557us; 1580us; 1557us; 1582us; 1557us; 1593us; 1557us; 66us; 65535us; 179us; 1467us; 253us; 1467us; 300us; 1477us; 306us; 1467us; 310us; 311us; 312us; 313us; 321us; 1467us; 353us; 1467us; 403us; 1477us; 409us; 410us; 416us; 1467us; 439us; 1477us; 449us; 1477us; 471us; 1500us; 507us; 1477us; 515us; 1477us; 570us; 1477us; 573us; 1477us; 610us; 635us; 613us; 1467us; 632us; 635us; 636us; 1489us; 647us; 1477us; 660us; 635us; 745us; 1477us; 775us; 1477us; 868us; 1477us; 899us; 1477us; 1061us; 1477us; 1063us; 1477us; 1065us; 1477us; 1177us; 1500us; 1178us; 1500us; 1346us; 1477us; 1349us; 1477us; 1351us; 1477us; 1353us; 1500us; 1414us; 1415us; 1448us; 1467us; 1451us; 1467us; 1454us; 1467us; 1457us; 1467us; 1459us; 1460us; 1461us; 1462us; 1465us; 1466us; 1468us; 1469us; 1472us; 1473us; 1475us; 1477us; 1478us; 1484us; 1480us; 1484us; 1482us; 1484us; 1485us; 1484us; 1487us; 1484us; 1490us; 1489us; 1509us; 1477us; 1510us; 1477us; 1518us; 1477us; 1519us; 1477us; 1524us; 1477us; 1525us; 1477us; 1537us; 1477us; 1541us; 1477us; 1559us; 1477us; 1580us; 1477us; 1582us; 1477us; 1593us; 1477us; 17us; 65535us; 311us; 1501us; 313us; 1501us; 410us; 1501us; 635us; 1501us; 1415us; 1501us; 1460us; 1501us; 1462us; 1501us; 1466us; 1501us; 1467us; 1501us; 1469us; 1501us; 1473us; 1501us; 1477us; 1501us; 1484us; 1501us; 1489us; 1501us; 1500us; 1502us; 1503us; 1505us; 1504us; 1506us; 4us; 65535us; 515us; 1511us; 1351us; 1511us; 1509us; 1512us; 1510us; 1511us; 2us; 65535us; 1538us; 1539us; 1583us; 1540us; 66us; 65535us; 179us; 1517us; 253us; 1517us; 300us; 1517us; 306us; 1517us; 310us; 1517us; 312us; 1517us; 321us; 1517us; 353us; 1517us; 403us; 1517us; 409us; 1517us; 416us; 1517us; 439us; 1517us; 449us; 1517us; 471us; 1517us; 507us; 1517us; 515us; 1517us; 570us; 1517us; 573us; 1517us; 610us; 1517us; 613us; 1517us; 632us; 1517us; 636us; 1517us; 647us; 1517us; 660us; 1517us; 745us; 1517us; 775us; 1517us; 868us; 1517us; 899us; 1517us; 1061us; 1517us; 1063us; 1517us; 1065us; 1517us; 1177us; 1517us; 1178us; 1517us; 1346us; 1517us; 1349us; 1517us; 1351us; 1517us; 1353us; 1517us; 1414us; 1517us; 1448us; 1517us; 1451us; 1517us; 1454us; 1517us; 1457us; 1517us; 1459us; 1517us; 1461us; 1517us; 1465us; 1517us; 1468us; 1517us; 1472us; 1517us; 1475us; 1517us; 1478us; 1517us; 1480us; 1517us; 1482us; 1517us; 1485us; 1517us; 1487us; 1517us; 1490us; 1517us; 1509us; 1517us; 1510us; 1517us; 1518us; 1517us; 1519us; 1517us; 1524us; 1517us; 1525us; 1517us; 1537us; 1517us; 1541us; 1517us; 1559us; 1517us; 1580us; 1517us; 1582us; 1517us; 1593us; 1517us; 4us; 65535us; 471us; 472us; 1177us; 1179us; 1178us; 1180us; 1353us; 1354us; 4us; 65535us; 471us; 1554us; 1177us; 1554us; 1178us; 1554us; 1353us; 1554us; 69us; 65535us; 179us; 1545us; 253us; 1545us; 300us; 1545us; 306us; 1545us; 310us; 1545us; 312us; 1545us; 321us; 1545us; 353us; 1545us; 403us; 1545us; 409us; 1545us; 416us; 1545us; 439us; 1545us; 449us; 1545us; 471us; 1544us; 507us; 1545us; 515us; 1545us; 524us; 1556us; 570us; 1545us; 573us; 1545us; 610us; 1545us; 613us; 1545us; 632us; 1545us; 636us; 1545us; 647us; 1545us; 660us; 1545us; 745us; 1545us; 775us; 1545us; 814us; 815us; 868us; 1545us; 899us; 1545us; 1061us; 1545us; 1063us; 1545us; 1065us; 1545us; 1177us; 1544us; 1178us; 1544us; 1346us; 1545us; 1349us; 1545us; 1351us; 1545us; 1353us; 1544us; 1414us; 1545us; 1448us; 1545us; 1451us; 1545us; 1454us; 1545us; 1457us; 1545us; 1459us; 1545us; 1461us; 1545us; 1465us; 1545us; 1468us; 1545us; 1472us; 1545us; 1475us; 1545us; 1478us; 1545us; 1480us; 1545us; 1482us; 1545us; 1485us; 1545us; 1487us; 1545us; 1490us; 1545us; 1509us; 1545us; 1510us; 1545us; 1518us; 1545us; 1519us; 1545us; 1524us; 1545us; 1525us; 1545us; 1537us; 1545us; 1541us; 1545us; 1555us; 1556us; 1559us; 1545us; 1580us; 1545us; 1582us; 1545us; 1593us; 1545us; 4us; 65535us; 577us; 592us; 590us; 591us; 1497us; 1571us; 1573us; 1574us; 6us; 65535us; 577us; 1577us; 590us; 1577us; 1204us; 1205us; 1497us; 1577us; 1573us; 1577us; 1578us; 1579us; 8us; 65535us; 515us; 1536us; 1351us; 1536us; 1509us; 1536us; 1510us; 1536us; 1537us; 1538us; 1541us; 1542us; 1580us; 1587us; 1582us; 1595us; 2us; 65535us; 1580us; 1581us; 1582us; 1583us; 3us; 65535us; 1541us; 1543us; 1580us; 1596us; 1582us; 1596us; 1us; 65535us; 767us; 768us; 6us; 65535us; 1597us; 1607us; 1604us; 1607us; 1613us; 1607us; 1619us; 1607us; 1620us; 1607us; 1621us; 1607us; 6us; 65535us; 1597us; 1613us; 1604us; 1613us; 1613us; 1613us; 1619us; 1613us; 1620us; 1613us; 1621us; 1613us; 6us; 65535us; 1597us; 1615us; 1604us; 1615us; 1613us; 1614us; 1619us; 1615us; 1620us; 1615us; 1621us; 1615us; 5us; 65535us; 1597us; 1598us; 1604us; 1605us; 1619us; 1616us; 1620us; 1617us; 1621us; 1618us; 103us; 65535us; 179us; 1494us; 253us; 1494us; 300us; 1494us; 306us; 1494us; 310us; 1494us; 311us; 1493us; 312us; 1494us; 313us; 1493us; 321us; 1494us; 353us; 1494us; 403us; 1494us; 409us; 1494us; 410us; 1493us; 416us; 1494us; 439us; 1494us; 449us; 1494us; 471us; 1495us; 507us; 1494us; 515us; 1494us; 524us; 1493us; 532us; 537us; 547us; 548us; 561us; 572us; 565us; 572us; 568us; 569us; 570us; 1494us; 573us; 1494us; 583us; 595us; 593us; 594us; 610us; 1494us; 613us; 1494us; 632us; 1494us; 635us; 1493us; 636us; 1494us; 647us; 1494us; 660us; 1494us; 737us; 744us; 741us; 744us; 745us; 1494us; 775us; 1494us; 814us; 1493us; 868us; 1494us; 899us; 1494us; 1061us; 1494us; 1063us; 1494us; 1065us; 1494us; 1177us; 1495us; 1178us; 1495us; 1346us; 1494us; 1349us; 1494us; 1351us; 1494us; 1353us; 1495us; 1414us; 1494us; 1415us; 1493us; 1445us; 572us; 1447us; 572us; 1448us; 1494us; 1451us; 1494us; 1454us; 1494us; 1457us; 1494us; 1459us; 1494us; 1460us; 1493us; 1461us; 1494us; 1462us; 1493us; 1465us; 1494us; 1466us; 1493us; 1467us; 1493us; 1468us; 1494us; 1469us; 1493us; 1472us; 1494us; 1473us; 1493us; 1475us; 1494us; 1477us; 1493us; 1478us; 1494us; 1480us; 1494us; 1482us; 1494us; 1484us; 1493us; 1485us; 1494us; 1487us; 1494us; 1489us; 1493us; 1490us; 1494us; 1500us; 1493us; 1509us; 1494us; 1510us; 1494us; 1513us; 1493us; 1514us; 1493us; 1518us; 1494us; 1519us; 1494us; 1524us; 1494us; 1525us; 1494us; 1537us; 1494us; 1541us; 1494us; 1555us; 1493us; 1559us; 1494us; 1580us; 1494us; 1582us; 1494us; 1593us; 1494us; 1597us; 1603us; 1604us; 1603us; 1613us; 1603us; 1619us; 1603us; 1620us; 1603us; 1621us; 1603us; 107us; 65535us; 179us; 1624us; 253us; 1624us; 300us; 1624us; 306us; 1624us; 310us; 1624us; 311us; 1624us; 312us; 1624us; 313us; 1624us; 321us; 1624us; 353us; 1624us; 403us; 1624us; 409us; 1624us; 410us; 1624us; 416us; 1624us; 439us; 1624us; 449us; 1624us; 471us; 1624us; 507us; 1624us; 515us; 1624us; 524us; 1624us; 532us; 1624us; 547us; 1624us; 561us; 1624us; 565us; 1624us; 568us; 1624us; 570us; 1624us; 573us; 1624us; 583us; 1624us; 593us; 1624us; 610us; 1624us; 613us; 1624us; 632us; 1624us; 635us; 1624us; 636us; 1624us; 647us; 1624us; 660us; 1624us; 737us; 1624us; 741us; 1624us; 745us; 1624us; 775us; 1624us; 814us; 1624us; 868us; 1624us; 899us; 1624us; 1061us; 1624us; 1063us; 1624us; 1065us; 1624us; 1177us; 1624us; 1178us; 1624us; 1285us; 1307us; 1286us; 1308us; 1287us; 1307us; 1311us; 1312us; 1346us; 1624us; 1349us; 1624us; 1351us; 1624us; 1353us; 1624us; 1414us; 1624us; 1415us; 1624us; 1445us; 1624us; 1447us; 1624us; 1448us; 1624us; 1451us; 1624us; 1454us; 1624us; 1457us; 1624us; 1459us; 1624us; 1460us; 1624us; 1461us; 1624us; 1462us; 1624us; 1465us; 1624us; 1466us; 1624us; 1467us; 1624us; 1468us; 1624us; 1469us; 1624us; 1472us; 1624us; 1473us; 1624us; 1475us; 1624us; 1477us; 1624us; 1478us; 1624us; 1480us; 1624us; 1482us; 1624us; 1484us; 1624us; 1485us; 1624us; 1487us; 1624us; 1489us; 1624us; 1490us; 1624us; 1500us; 1624us; 1509us; 1624us; 1510us; 1624us; 1513us; 1624us; 1514us; 1624us; 1518us; 1624us; 1519us; 1624us; 1524us; 1624us; 1525us; 1624us; 1537us; 1624us; 1541us; 1624us; 1555us; 1624us; 1559us; 1624us; 1580us; 1624us; 1582us; 1624us; 1593us; 1624us; 1597us; 1624us; 1604us; 1624us; 1613us; 1624us; 1619us; 1624us; 1620us; 1624us; 1621us; 1624us; 319us; 65535us; 34us; 1677us; 50us; 1630us; 52us; 1630us; 74us; 1677us; 104us; 1677us; 126us; 1677us; 133us; 1630us; 138us; 1630us; 165us; 1630us; 170us; 1630us; 176us; 1677us; 179us; 1630us; 182us; 1677us; 184us; 1677us; 199us; 228us; 210us; 228us; 215us; 1630us; 219us; 1630us; 253us; 1630us; 288us; 1677us; 290us; 1677us; 295us; 1677us; 300us; 626us; 303us; 1677us; 306us; 1630us; 310us; 1630us; 311us; 1630us; 312us; 1630us; 313us; 1630us; 321us; 1630us; 353us; 1630us; 387us; 1679us; 390us; 1677us; 392us; 1679us; 395us; 1677us; 403us; 626us; 409us; 1630us; 410us; 1630us; 413us; 1677us; 416us; 1630us; 427us; 1679us; 430us; 1677us; 437us; 438us; 439us; 1630us; 443us; 444us; 446us; 1677us; 449us; 1630us; 452us; 1679us; 455us; 1679us; 471us; 1630us; 479us; 480us; 482us; 483us; 507us; 626us; 515us; 1630us; 524us; 1630us; 532us; 1630us; 534us; 1630us; 570us; 1630us; 573us; 1630us; 607us; 1677us; 610us; 1630us; 613us; 1630us; 632us; 1630us; 635us; 1630us; 636us; 1630us; 645us; 646us; 647us; 1630us; 656us; 659us; 660us; 1630us; 662us; 1630us; 664us; 1630us; 670us; 1677us; 676us; 1677us; 687us; 688us; 699us; 1630us; 700us; 701us; 712us; 1630us; 722us; 1679us; 725us; 1677us; 729us; 1677us; 739us; 1677us; 745us; 1630us; 771us; 772us; 775us; 1630us; 777us; 770us; 778us; 770us; 780us; 770us; 796us; 797us; 798us; 1679us; 799us; 1679us; 803us; 1679us; 804us; 1679us; 805us; 1679us; 806us; 1679us; 808us; 1679us; 810us; 1679us; 812us; 1679us; 814us; 1630us; 817us; 1679us; 819us; 1679us; 821us; 1679us; 826us; 1630us; 829us; 1679us; 832us; 1679us; 836us; 838us; 837us; 838us; 844us; 1679us; 863us; 864us; 865us; 1679us; 868us; 1630us; 870us; 1679us; 871us; 1679us; 873us; 1679us; 874us; 1679us; 875us; 1679us; 876us; 1679us; 880us; 1630us; 883us; 1679us; 885us; 1679us; 887us; 1677us; 892us; 1677us; 899us; 1630us; 904us; 1677us; 906us; 1677us; 909us; 1677us; 912us; 1677us; 928us; 1677us; 931us; 1677us; 934us; 1677us; 940us; 1677us; 944us; 1677us; 948us; 1677us; 950us; 1677us; 955us; 1677us; 957us; 1677us; 959us; 1677us; 961us; 1677us; 963us; 1677us; 965us; 1677us; 974us; 1679us; 976us; 1677us; 984us; 1677us; 991us; 1677us; 997us; 1677us; 999us; 1677us; 1001us; 1679us; 1002us; 1677us; 1005us; 1677us; 1007us; 1679us; 1008us; 1677us; 1011us; 1677us; 1014us; 1677us; 1017us; 1677us; 1019us; 1677us; 1024us; 1677us; 1061us; 1630us; 1063us; 1630us; 1065us; 1630us; 1067us; 1677us; 1069us; 1677us; 1072us; 1677us; 1073us; 1677us; 1074us; 1677us; 1075us; 1677us; 1076us; 1677us; 1077us; 1677us; 1078us; 1677us; 1079us; 1677us; 1080us; 1677us; 1081us; 1677us; 1082us; 1677us; 1083us; 1677us; 1084us; 1677us; 1085us; 1677us; 1086us; 1677us; 1087us; 1677us; 1088us; 1677us; 1089us; 1677us; 1090us; 1677us; 1091us; 1677us; 1113us; 1677us; 1116us; 1679us; 1118us; 1679us; 1123us; 1679us; 1130us; 1679us; 1135us; 1677us; 1136us; 1677us; 1140us; 1677us; 1142us; 1677us; 1146us; 1677us; 1148us; 1677us; 1152us; 1677us; 1155us; 1677us; 1157us; 1677us; 1159us; 1677us; 1160us; 1677us; 1162us; 1677us; 1163us; 1677us; 1165us; 1677us; 1166us; 1677us; 1168us; 1677us; 1169us; 1677us; 1171us; 1677us; 1172us; 1677us; 1174us; 1677us; 1175us; 1677us; 1177us; 1630us; 1178us; 1630us; 1187us; 1677us; 1189us; 1677us; 1191us; 1677us; 1192us; 1677us; 1195us; 1677us; 1202us; 1677us; 1203us; 1677us; 1206us; 1677us; 1207us; 1677us; 1208us; 1677us; 1211us; 1677us; 1213us; 1677us; 1214us; 1677us; 1220us; 1677us; 1229us; 1677us; 1236us; 1677us; 1244us; 1677us; 1247us; 1677us; 1250us; 1677us; 1253us; 1677us; 1254us; 1677us; 1265us; 1677us; 1272us; 1677us; 1273us; 1677us; 1279us; 1677us; 1285us; 1677us; 1286us; 1677us; 1287us; 1677us; 1303us; 1677us; 1313us; 1677us; 1326us; 1677us; 1327us; 1677us; 1329us; 1677us; 1331us; 1677us; 1335us; 1677us; 1336us; 1677us; 1340us; 1677us; 1346us; 1630us; 1349us; 1630us; 1351us; 1630us; 1353us; 1630us; 1359us; 1677us; 1364us; 1677us; 1368us; 1630us; 1372us; 1630us; 1380us; 1630us; 1389us; 1677us; 1414us; 1630us; 1415us; 1630us; 1421us; 1679us; 1423us; 1677us; 1426us; 1679us; 1428us; 1677us; 1439us; 1679us; 1441us; 1679us; 1448us; 1630us; 1451us; 1630us; 1454us; 1630us; 1457us; 1630us; 1459us; 1630us; 1460us; 1630us; 1461us; 1630us; 1462us; 1630us; 1463us; 1464us; 1465us; 1630us; 1466us; 1630us; 1467us; 1630us; 1468us; 1630us; 1469us; 1630us; 1470us; 1471us; 1472us; 1630us; 1473us; 1630us; 1475us; 1630us; 1477us; 1630us; 1478us; 1630us; 1480us; 1630us; 1482us; 1630us; 1484us; 1630us; 1485us; 1630us; 1487us; 1630us; 1489us; 1630us; 1490us; 1630us; 1500us; 1630us; 1509us; 1630us; 1510us; 1630us; 1513us; 1630us; 1514us; 1630us; 1518us; 1630us; 1519us; 1630us; 1524us; 1630us; 1525us; 1630us; 1537us; 1630us; 1541us; 1630us; 1555us; 1630us; 1559us; 1630us; 1566us; 1677us; 1572us; 1630us; 1580us; 1630us; 1582us; 1630us; 1593us; 1630us; 1597us; 1630us; 1604us; 1630us; 1613us; 1630us; 1619us; 1630us; 1620us; 1630us; 1621us; 1630us; 1622us; 1623us; 1625us; 1627us; 1626us; 1627us; 1631us; 1632us; 1681us; 1679us; 114us; 65535us; 50us; 51us; 52us; 53us; 133us; 151us; 138us; 139us; 165us; 141us; 170us; 171us; 179us; 1492us; 199us; 212us; 210us; 212us; 215us; 216us; 219us; 220us; 253us; 1492us; 300us; 508us; 306us; 1492us; 310us; 1492us; 311us; 1492us; 312us; 1492us; 313us; 1492us; 321us; 1492us; 353us; 1492us; 403us; 508us; 409us; 1492us; 410us; 1492us; 416us; 1492us; 439us; 1492us; 449us; 1492us; 471us; 1492us; 507us; 508us; 515us; 1492us; 524us; 1492us; 532us; 533us; 534us; 535us; 570us; 1492us; 573us; 1492us; 610us; 1492us; 613us; 1492us; 632us; 1492us; 635us; 1492us; 636us; 1492us; 647us; 1492us; 660us; 1492us; 662us; 663us; 664us; 665us; 699us; 702us; 712us; 702us; 745us; 1492us; 775us; 1492us; 814us; 1492us; 826us; 882us; 868us; 1492us; 880us; 882us; 899us; 1492us; 1061us; 1492us; 1063us; 1492us; 1065us; 1492us; 1177us; 1492us; 1178us; 1492us; 1346us; 1492us; 1349us; 1492us; 1351us; 1492us; 1353us; 1492us; 1368us; 1385us; 1372us; 1385us; 1380us; 1385us; 1414us; 1492us; 1415us; 1492us; 1448us; 1492us; 1451us; 1492us; 1454us; 1492us; 1457us; 1492us; 1459us; 1492us; 1460us; 1492us; 1461us; 1492us; 1462us; 1492us; 1465us; 1492us; 1466us; 1492us; 1467us; 1492us; 1468us; 1492us; 1469us; 1492us; 1472us; 1492us; 1473us; 1492us; 1475us; 1492us; 1477us; 1492us; 1478us; 1492us; 1480us; 1492us; 1482us; 1492us; 1484us; 1492us; 1485us; 1492us; 1487us; 1492us; 1489us; 1492us; 1490us; 1492us; 1500us; 1492us; 1509us; 1492us; 1510us; 1492us; 1513us; 1492us; 1514us; 1492us; 1518us; 1492us; 1519us; 1492us; 1524us; 1492us; 1525us; 1492us; 1537us; 1492us; 1541us; 1492us; 1555us; 1492us; 1559us; 1492us; 1572us; 1573us; 1580us; 1492us; 1582us; 1492us; 1593us; 1492us; 1597us; 1602us; 1604us; 1602us; 1613us; 1602us; 1619us; 1602us; 1620us; 1602us; 1621us; 1602us; 183us; 65535us; 34us; 1678us; 74us; 1678us; 104us; 1678us; 126us; 1678us; 176us; 1678us; 182us; 1678us; 184us; 1678us; 288us; 1678us; 290us; 1678us; 295us; 1678us; 303us; 1678us; 387us; 1680us; 390us; 1678us; 392us; 1680us; 395us; 1678us; 413us; 1678us; 427us; 1680us; 430us; 1678us; 446us; 1678us; 452us; 1680us; 455us; 1680us; 607us; 1678us; 670us; 1678us; 676us; 1678us; 722us; 1680us; 725us; 1678us; 729us; 1678us; 739us; 1678us; 798us; 1680us; 799us; 1680us; 803us; 1680us; 804us; 1680us; 805us; 1680us; 806us; 1680us; 808us; 1680us; 810us; 1680us; 812us; 1680us; 817us; 1680us; 819us; 1680us; 821us; 1680us; 829us; 1680us; 832us; 1680us; 844us; 1680us; 865us; 1680us; 870us; 1680us; 871us; 1680us; 873us; 1680us; 874us; 1680us; 875us; 1680us; 876us; 1680us; 883us; 1680us; 885us; 1680us; 887us; 1678us; 892us; 1678us; 904us; 1678us; 906us; 1678us; 909us; 1678us; 912us; 1678us; 928us; 1678us; 931us; 1678us; 934us; 1678us; 940us; 1678us; 944us; 1678us; 948us; 1678us; 950us; 1678us; 955us; 1678us; 957us; 1678us; 959us; 1678us; 961us; 1678us; 963us; 1678us; 965us; 1678us; 974us; 1680us; 976us; 1678us; 984us; 1678us; 991us; 1678us; 997us; 1678us; 999us; 1678us; 1001us; 1680us; 1002us; 1678us; 1005us; 1678us; 1007us; 1680us; 1008us; 1678us; 1011us; 1678us; 1014us; 1678us; 1017us; 1678us; 1019us; 1678us; 1024us; 1678us; 1067us; 1678us; 1069us; 1678us; 1072us; 1678us; 1073us; 1678us; 1074us; 1678us; 1075us; 1678us; 1076us; 1678us; 1077us; 1678us; 1078us; 1678us; 1079us; 1678us; 1080us; 1678us; 1081us; 1678us; 1082us; 1678us; 1083us; 1678us; 1084us; 1678us; 1085us; 1678us; 1086us; 1678us; 1087us; 1678us; 1088us; 1678us; 1089us; 1678us; 1090us; 1678us; 1091us; 1678us; 1113us; 1678us; 1116us; 1680us; 1118us; 1680us; 1123us; 1680us; 1130us; 1680us; 1135us; 1678us; 1136us; 1678us; 1140us; 1678us; 1142us; 1678us; 1146us; 1678us; 1148us; 1678us; 1152us; 1678us; 1155us; 1678us; 1157us; 1678us; 1159us; 1678us; 1160us; 1678us; 1162us; 1678us; 1163us; 1678us; 1165us; 1678us; 1166us; 1678us; 1168us; 1678us; 1169us; 1678us; 1171us; 1678us; 1172us; 1678us; 1174us; 1678us; 1175us; 1678us; 1187us; 1678us; 1189us; 1678us; 1191us; 1678us; 1192us; 1678us; 1195us; 1678us; 1202us; 1678us; 1203us; 1678us; 1206us; 1678us; 1207us; 1678us; 1208us; 1678us; 1211us; 1678us; 1213us; 1678us; 1214us; 1678us; 1220us; 1678us; 1229us; 1678us; 1236us; 1678us; 1244us; 1678us; 1247us; 1678us; 1250us; 1678us; 1253us; 1678us; 1254us; 1678us; 1265us; 1678us; 1272us; 1678us; 1273us; 1678us; 1279us; 1678us; 1285us; 1678us; 1286us; 1678us; 1287us; 1678us; 1303us; 1678us; 1313us; 1678us; 1326us; 1678us; 1327us; 1678us; 1329us; 1678us; 1331us; 1678us; 1335us; 1678us; 1336us; 1678us; 1340us; 1678us; 1359us; 1678us; 1364us; 1678us; 1389us; 1678us; 1421us; 1680us; 1423us; 1678us; 1426us; 1680us; 1428us; 1678us; 1439us; 1680us; 1441us; 1680us; 1566us; 1678us; 1681us; 1680us; 6us; 65535us; 620us; 1635us; 844us; 1635us; 1229us; 1635us; 1286us; 1635us; 1287us; 1635us; 1634us; 1635us; 2us; 65535us; 1641us; 1676us; 1674us; 1675us; 6us; 65535us; 620us; 1640us; 844us; 1640us; 1229us; 1640us; 1286us; 1640us; 1287us; 1640us; 1634us; 1640us; 141us; 65535us; 34us; 1684us; 74us; 1684us; 104us; 1684us; 126us; 1684us; 176us; 1684us; 182us; 1684us; 184us; 1684us; 288us; 1684us; 290us; 1684us; 295us; 1684us; 303us; 1684us; 390us; 1684us; 395us; 1684us; 413us; 1684us; 430us; 1684us; 446us; 1684us; 607us; 1684us; 670us; 1684us; 676us; 1684us; 725us; 1684us; 729us; 1684us; 739us; 1684us; 887us; 1684us; 892us; 1684us; 904us; 1684us; 906us; 1684us; 909us; 1684us; 912us; 1684us; 928us; 1684us; 931us; 1684us; 934us; 1684us; 940us; 1684us; 944us; 1684us; 948us; 1684us; 950us; 1684us; 955us; 1684us; 957us; 1684us; 959us; 1684us; 961us; 1684us; 963us; 1684us; 965us; 1684us; 976us; 1684us; 984us; 1684us; 991us; 1684us; 997us; 1684us; 999us; 1684us; 1002us; 1684us; 1005us; 1684us; 1008us; 1684us; 1011us; 1684us; 1014us; 1684us; 1017us; 1684us; 1019us; 1684us; 1024us; 1684us; 1067us; 1684us; 1069us; 1684us; 1072us; 1684us; 1073us; 1684us; 1074us; 1684us; 1075us; 1684us; 1076us; 1684us; 1077us; 1684us; 1078us; 1684us; 1079us; 1684us; 1080us; 1684us; 1081us; 1684us; 1082us; 1684us; 1083us; 1684us; 1084us; 1684us; 1085us; 1684us; 1086us; 1684us; 1087us; 1684us; 1088us; 1684us; 1089us; 1684us; 1090us; 1684us; 1091us; 1684us; 1113us; 1684us; 1135us; 1684us; 1136us; 1684us; 1140us; 1684us; 1142us; 1684us; 1146us; 1684us; 1148us; 1684us; 1152us; 1684us; 1155us; 1684us; 1157us; 1684us; 1159us; 1684us; 1160us; 1684us; 1162us; 1684us; 1163us; 1684us; 1165us; 1684us; 1166us; 1684us; 1168us; 1684us; 1169us; 1684us; 1171us; 1684us; 1172us; 1684us; 1174us; 1684us; 1175us; 1684us; 1187us; 1684us; 1189us; 1684us; 1191us; 1684us; 1192us; 1684us; 1195us; 1684us; 1202us; 1684us; 1203us; 1684us; 1206us; 1684us; 1207us; 1684us; 1208us; 1227us; 1211us; 1227us; 1213us; 1684us; 1214us; 1684us; 1220us; 1684us; 1229us; 1684us; 1236us; 1684us; 1244us; 1684us; 1247us; 1684us; 1250us; 1684us; 1253us; 1684us; 1254us; 1684us; 1265us; 1684us; 1272us; 1684us; 1273us; 1684us; 1279us; 1684us; 1285us; 1684us; 1286us; 1684us; 1287us; 1684us; 1303us; 1684us; 1313us; 1684us; 1326us; 1684us; 1327us; 1684us; 1329us; 1684us; 1331us; 1684us; 1335us; 1684us; 1336us; 1684us; 1340us; 1684us; 1359us; 1684us; 1364us; 1684us; 1389us; 1684us; 1423us; 1684us; 1428us; 1684us; 1566us; 1684us; 42us; 65535us; 387us; 454us; 392us; 454us; 427us; 454us; 452us; 453us; 455us; 456us; 722us; 454us; 798us; 454us; 799us; 454us; 803us; 454us; 804us; 454us; 805us; 454us; 806us; 454us; 808us; 454us; 810us; 454us; 812us; 454us; 817us; 454us; 819us; 454us; 821us; 454us; 829us; 454us; 832us; 454us; 844us; 454us; 865us; 454us; 870us; 454us; 871us; 454us; 873us; 454us; 874us; 454us; 875us; 454us; 876us; 454us; 883us; 454us; 885us; 454us; 974us; 454us; 1001us; 454us; 1007us; 454us; 1116us; 454us; 1118us; 454us; 1123us; 454us; 1130us; 454us; 1421us; 454us; 1426us; 454us; 1439us; 454us; 1441us; 454us; 1681us; 1682us; 139us; 65535us; 34us; 1219us; 74us; 1219us; 104us; 1219us; 126us; 1219us; 176us; 177us; 182us; 1219us; 184us; 1219us; 288us; 294us; 290us; 294us; 295us; 296us; 303us; 304us; 390us; 1219us; 395us; 1219us; 413us; 414us; 430us; 1219us; 446us; 1219us; 607us; 619us; 670us; 1219us; 676us; 1219us; 725us; 1219us; 729us; 1219us; 739us; 1219us; 887us; 1219us; 892us; 1219us; 904us; 1219us; 906us; 1219us; 909us; 1219us; 912us; 1219us; 928us; 1219us; 931us; 1219us; 934us; 1219us; 940us; 1219us; 944us; 1219us; 948us; 1219us; 950us; 1219us; 955us; 1219us; 957us; 1219us; 959us; 1219us; 961us; 1219us; 963us; 1219us; 965us; 1219us; 976us; 1219us; 984us; 1219us; 991us; 1219us; 997us; 1219us; 999us; 1219us; 1002us; 1219us; 1005us; 1219us; 1008us; 1219us; 1011us; 1219us; 1014us; 1219us; 1017us; 1219us; 1019us; 1219us; 1024us; 1219us; 1067us; 1219us; 1069us; 1219us; 1072us; 1219us; 1073us; 1219us; 1074us; 1219us; 1075us; 1219us; 1076us; 1219us; 1077us; 1219us; 1078us; 1219us; 1079us; 1219us; 1080us; 1219us; 1081us; 1219us; 1082us; 1219us; 1083us; 1219us; 1084us; 1219us; 1085us; 1219us; 1086us; 1219us; 1087us; 1219us; 1088us; 1219us; 1089us; 1219us; 1090us; 1219us; 1091us; 1219us; 1113us; 1219us; 1135us; 1219us; 1136us; 1219us; 1140us; 1219us; 1142us; 1219us; 1146us; 1219us; 1148us; 1219us; 1152us; 1219us; 1155us; 1219us; 1157us; 1219us; 1159us; 1219us; 1160us; 1219us; 1162us; 1219us; 1163us; 1219us; 1165us; 1219us; 1166us; 1219us; 1168us; 1219us; 1169us; 1219us; 1171us; 1219us; 1172us; 1219us; 1174us; 1219us; 1175us; 1219us; 1187us; 1219us; 1189us; 1219us; 1191us; 1219us; 1192us; 1219us; 1195us; 1219us; 1202us; 1219us; 1203us; 1219us; 1206us; 1219us; 1207us; 1219us; 1213us; 1215us; 1214us; 1215us; 1220us; 1219us; 1229us; 1219us; 1236us; 1219us; 1244us; 1219us; 1247us; 1219us; 1250us; 1219us; 1253us; 1219us; 1254us; 1219us; 1265us; 1219us; 1272us; 1219us; 1273us; 1219us; 1279us; 1219us; 1285us; 1219us; 1286us; 1219us; 1287us; 1219us; 1303us; 1219us; 1313us; 1219us; 1326us; 1219us; 1327us; 1219us; 1329us; 1219us; 1331us; 1219us; 1335us; 1219us; 1336us; 1219us; 1340us; 1219us; 1359us; 1219us; 1364us; 1219us; 1389us; 1219us; 1423us; 1219us; 1428us; 1219us; 1566us; 1219us; 14us; 65535us; 41us; 1688us; 47us; 1688us; 84us; 1688us; 87us; 1688us; 88us; 1694us; 91us; 1688us; 99us; 1688us; 105us; 1688us; 110us; 1688us; 114us; 1688us; 115us; 1688us; 116us; 1688us; 1688us; 1688us; 1694us; 1694us; 12us; 65535us; 41us; 92us; 47us; 117us; 84us; 92us; 87us; 92us; 91us; 92us; 99us; 117us; 105us; 106us; 110us; 112us; 114us; 117us; 115us; 117us; 116us; 117us; 1688us; 1689us; 4us; 65535us; 19us; 1692us; 21us; 1692us; 23us; 1692us; 1692us; 1692us; 4us; 65535us; 19us; 25us; 21us; 27us; 23us; 29us; 1692us; 1693us; 0us; 65535us; 2us; 65535us; 88us; 89us; 1694us; 1695us; 10us; 65535us; 200us; 210us; 276us; 1709us; 374us; 1709us; 490us; 1709us; 638us; 639us; 860us; 885us; 878us; 880us; 901us; 904us; 902us; 904us; 903us; 904us; 4us; 65535us; 158us; 159us; 463us; 464us; 466us; 467us; 469us; 470us; 2us; 65535us; 1406us; 1407us; 1416us; 1417us; 9us; 65535us; 407us; 408us; 418us; 419us; 421us; 422us; 423us; 424us; 425us; 426us; 431us; 432us; 496us; 497us; 498us; 499us; 502us; 503us; 2us; 65535us; 58us; 59us; 65us; 66us; 20us; 65535us; 81us; 82us; 96us; 97us; 202us; 203us; 205us; 206us; 242us; 243us; 341us; 342us; 601us; 631us; 608us; 609us; 611us; 612us; 614us; 615us; 617us; 618us; 626us; 627us; 629us; 630us; 975us; 1022us; 1004us; 1005us; 1010us; 1011us; 1016us; 1017us; 1393us; 1397us; 1394us; 1395us; 1417us; 1418us; 7us; 65535us; 200us; 201us; 276us; 277us; 374us; 375us; 490us; 491us; 638us; 641us; 860us; 884us; 878us; 879us; 2us; 65535us; 666us; 667us; 672us; 673us; 0us; 65535us; 11us; 65535us; 173us; 174us; 301us; 302us; 377us; 386us; 379us; 386us; 384us; 386us; 406us; 392us; 412us; 413us; 494us; 721us; 495us; 392us; 501us; 392us; 718us; 721us; 7us; 65535us; 174us; 175us; 314us; 644us; 316us; 644us; 435us; 436us; 441us; 442us; 642us; 644us; 721us; 722us; 4us; 65535us; 917us; 991us; 964us; 965us; 975us; 976us; 983us; 984us; 9us; 65535us; 914us; 973us; 915us; 980us; 916us; 988us; 918us; 995us; 966us; 967us; 969us; 970us; 977us; 978us; 985us; 986us; 992us; 993us; 2us; 65535us; 133us; 152us; 142us; 152us; 2us; 65535us; 138us; 189us; 165us; 193us; 2us; 65535us; 70us; 165us; 164us; 165us; 2us; 65535us; 525us; 526us; 1341us; 1342us; 11us; 65535us; 212us; 213us; 216us; 217us; 221us; 222us; 334us; 335us; 472us; 474us; 688us; 689us; 700us; 704us; 703us; 704us; 1179us; 1181us; 1180us; 1182us; 1354us; 1355us; 5us; 65535us; 177us; 554us; 304us; 554us; 414us; 554us; 533us; 549us; 807us; 554us; 13us; 65535us; 34us; 128us; 69us; 232us; 74us; 128us; 104us; 128us; 122us; 128us; 163us; 232us; 199us; 226us; 210us; 226us; 279us; 318us; 280us; 433us; 1338us; 1345us; 1727us; 1729us; 1728us; 1729us; 10us; 65535us; 34us; 49us; 69us; 49us; 74us; 49us; 104us; 49us; 122us; 49us; 163us; 49us; 199us; 224us; 210us; 224us; 1732us; 1734us; 1733us; 1734us; 7us; 65535us; 519us; 520us; 522us; 523us; 827us; 828us; 925us; 1317us; 1313us; 1319us; 1314us; 1315us; 1737us; 1738us; 37us; 65535us; 516us; 517us; 539us; 540us; 581us; 582us; 584us; 585us; 588us; 589us; 621us; 622us; 624us; 625us; 691us; 692us; 780us; 783us; 781us; 782us; 785us; 786us; 845us; 846us; 848us; 849us; 923us; 1292us; 924us; 1293us; 1114us; 1115us; 1230us; 1231us; 1234us; 1235us; 1285us; 1288us; 1286us; 1288us; 1287us; 1288us; 1289us; 1290us; 1302us; 1303us; 1309us; 1310us; 1347us; 1348us; 1351us; 1352us; 1511us; 1513us; 1512us; 1514us; 1560us; 1562us; 1561us; 1562us; 1569us; 1570us; 1605us; 1606us; 1635us; 1636us; 1637us; 1638us; 1641us; 1642us; 1644us; 1645us; 1741us; 1742us; 26us; 65535us; 80us; 81us; 84us; 85us; 95us; 96us; 99us; 100us; 115us; 149us; 139us; 140us; 143us; 144us; 146us; 147us; 185us; 186us; 187us; 188us; 191us; 192us; 220us; 221us; 245us; 246us; 263us; 264us; 271us; 272us; 344us; 345us; 363us; 365us; 367us; 369us; 486us; 487us; 730us; 731us; 888us; 889us; 893us; 894us; 910us; 911us; 1143us; 1144us; 1149us; 1150us; 1745us; 1746us; 1us; 65535us; 1289us; 1291us; 16us; 65535us; 199us; 208us; 201us; 207us; 471us; 477us; 861us; 1334us; 974us; 994us; 975us; 982us; 976us; 981us; 977us; 979us; 1155us; 1156us; 1157us; 1158us; 1331us; 1333us; 1388us; 1392us; 1389us; 1391us; 1575us; 1576us; 1582us; 1586us; 1631us; 1633us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 3us; 5us; 29us; 279us; 281us; 283us; 291us; 296us; 302us; 307us; 312us; 314us; 316us; 323us; 328us; 330us; 333us; 336us; 338us; 341us; 344us; 347us; 350us; 354us; 361us; 371us; 375us; 381us; 391us; 402us; 413us; 429us; 431us; 433us; 436us; 437us; 439us; 449us; 459us; 462us; 464us; 545us; 660us; 775us; 777us; 780us; 783us; 786us; 789us; 793us; 795us; 798us; 801us; 804us; 808us; 817us; 826us; 831us; 834us; 838us; 841us; 853us; 860us; 863us; 867us; 870us; 874us; 878us; 882us; 886us; 897us; 908us; 910us; 913us; 917us; 921us; 924us; 935us; 939us; 942us; 944us; 984us; 995us; 1057us; 1070us; 1072us; 1077us; 1083us; 1086us; 1089us; 1092us; 1095us; 1099us; 1102us; 1107us; 1112us; 1115us; 1121us; 1128us; 1130us; 1136us; 1146us; 1148us; 1150us; 1154us; 1160us; 1162us; 1164us; 1169us; 1173us; 1175us; 1179us; 1183us; 1188us; 1190us; 1194us; 1200us; 1204us; 1208us; 1210us; 1214us; 1218us; 1222us; 1225us; 1228us; 1232us; 1237us; 1240us; 1247us; 1254us; 1256us; 1258us; 1274us; 1386us; 1394us; 1506us; 1617us; 1621us; 1626us; 1738us; 1740us; 1742us; 1746us; 1749us; 1751us; 1756us; 1759us; 1765us; 1768us; 1770us; 1773us; 1775us; 1777us; 1779us; 1782us; 2030us; 2209us; 2213us; 2217us; 2220us; 2222us; 2234us; 2246us; 2258us; 2289us; 2298us; 2338us; 2340us; 2360us; 2380us; 2400us; 2402us; 2405us; 2408us; 2412us; 2436us; 2443us; 2449us; 2498us; 2552us; 2637us; 2745us; 2747us; 2750us; 2755us; 2762us; 2769us; 2771us; 2773us; 2776us; 2779us; 2781us; 2889us; 3011us; 3133us; 3137us; 3268us; 3271us; 3276us; 3414us; 3552us; 3729us; 3867us; 4005us; 4009us; 4013us; 4015us; 4153us; 4155us; 4158us; 4162us; 4167us; 4169us; 4171us; 4173us; 4177us; 4179us; 4184us; 4186us; 4188us; 4190us; 4197us; 4204us; 4208us; 4214us; 4218us; 4220us; 4222us; 4224us; 4227us; 4229us; 4234us; 4240us; 4242us; 4350us; 4458us; 4462us; 4468us; 4472us; 4482us; 4492us; 4495us; 4507us; 4540us; 4573us; 4579us; 4582us; 4669us; 4756us; 4823us; 4841us; 4846us; 4849us; 4916us; 4921us; 4926us; 4996us; 5001us; 5008us; 5017us; 5020us; 5024us; 5026us; 5033us; 5040us; 5047us; 5053us; 5157us; 5265us; 5585us; 5700us; 5884us; 5891us; 5894us; 5901us; 6043us; 6086us; 6226us; 6241us; 6254us; 6259us; 6264us; 6265us; 6268us; 6279us; 6284us; 6287us; 6297us; 6300us; 6321us; 6329us; 6332us; 6333us; 6345us; 6353us; 6358us; 6368us; 6371us; 6374us; 6377us; 6380us; 6392us; 6398us; 6412us; 6423us; 6431us; 6469us; 6496us; 6498us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 2us; 6us; 11us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 2us; 15us; 18us; 1us; 15us; 2us; 16us; 19us; 1us; 16us; 2us; 17us; 20us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 2us; 21us; 22us; 1us; 22us; 7us; 23us; 75us; 76us; 77us; 78us; 79us; 80us; 7us; 23us; 75us; 76us; 77us; 78us; 79us; 80us; 47us; 23us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 1us; 26us; 1us; 26us; 3us; 27us; 52us; 55us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 1us; 29us; 1us; 29us; 2us; 30us; 72us; 1us; 30us; 1us; 31us; 1us; 31us; 3us; 31us; 901us; 902us; 1us; 32us; 3us; 32us; 901us; 902us; 2us; 33us; 34us; 1us; 34us; 2us; 35us; 36us; 1us; 35us; 1us; 37us; 1us; 37us; 1us; 37us; 2us; 38us; 39us; 1us; 39us; 2us; 40us; 41us; 1us; 40us; 1us; 42us; 1us; 42us; 1us; 42us; 6us; 43us; 99us; 100us; 101us; 102us; 104us; 6us; 43us; 99us; 100us; 101us; 102us; 104us; 3us; 43us; 99us; 100us; 1us; 43us; 1us; 44us; 11us; 45us; 63us; 64us; 65us; 67us; 75us; 76us; 77us; 78us; 79us; 80us; 10us; 45us; 63us; 64us; 65us; 75us; 76us; 77us; 78us; 79us; 80us; 2us; 45us; 80us; 1us; 45us; 1us; 46us; 1us; 47us; 3us; 48us; 49us; 50us; 2us; 48us; 49us; 1us; 48us; 1us; 48us; 1us; 49us; 3us; 50us; 52us; 55us; 1us; 50us; 1us; 51us; 2us; 52us; 55us; 2us; 54us; 56us; 2us; 54us; 56us; 1us; 54us; 1us; 55us; 1us; 55us; 1us; 55us; 3us; 57us; 58us; 59us; 2us; 57us; 58us; 1us; 57us; 1us; 57us; 1us; 58us; 2us; 59us; 72us; 1us; 59us; 1us; 60us; 1us; 61us; 10us; 63us; 64us; 65us; 67us; 75us; 76us; 77us; 78us; 79us; 80us; 9us; 63us; 64us; 65us; 75us; 76us; 77us; 78us; 79us; 80us; 49us; 63us; 64us; 65us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 2us; 63us; 64us; 1us; 63us; 1us; 66us; 1us; 67us; 4us; 68us; 69us; 70us; 71us; 1us; 68us; 2us; 69us; 71us; 1us; 69us; 1us; 72us; 2us; 72us; 89us; 2us; 72us; 94us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 74us; 6us; 75us; 76us; 77us; 78us; 79us; 80us; 6us; 75us; 76us; 77us; 78us; 79us; 80us; 1us; 75us; 3us; 75us; 491us; 492us; 1us; 76us; 5us; 76us; 493us; 494us; 495us; 496us; 1us; 77us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 80us; 2us; 81us; 111us; 1us; 81us; 1us; 82us; 3us; 83us; 108us; 109us; 3us; 83us; 901us; 902us; 1us; 83us; 3us; 84us; 901us; 902us; 5us; 85us; 86us; 87us; 88us; 89us; 2us; 85us; 86us; 1us; 85us; 1us; 86us; 2us; 87us; 88us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; 3us; 91us; 901us; 902us; 3us; 92us; 93us; 94us; 2us; 92us; 93us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 96us; 1us; 96us; 1us; 96us; 1us; 97us; 1us; 98us; 5us; 99us; 100us; 101us; 102us; 104us; 5us; 99us; 100us; 101us; 102us; 104us; 2us; 99us; 100us; 2us; 99us; 100us; 1us; 99us; 1us; 100us; 1us; 101us; 1us; 102us; 1us; 103us; 3us; 103us; 901us; 902us; 1us; 104us; 1us; 104us; 1us; 104us; 1us; 104us; 1us; 104us; 1us; 104us; 1us; 104us; 1us; 104us; 1us; 104us; 1us; 104us; 2us; 106us; 107us; 47us; 106us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 1us; 107us; 47us; 107us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 1us; 107us; 1us; 108us; 1us; 108us; 1us; 109us; 1us; 109us; 1us; 109us; 1us; 109us; 1us; 110us; 1us; 110us; 1us; 110us; 1us; 111us; 2us; 113us; 114us; 1us; 114us; 4us; 115us; 116us; 117us; 118us; 3us; 115us; 117us; 120us; 2us; 115us; 117us; 1us; 115us; 1us; 115us; 2us; 116us; 489us; 1us; 116us; 1us; 116us; 1us; 117us; 1us; 118us; 1us; 119us; 2us; 120us; 974us; 1us; 120us; 3us; 121us; 901us; 902us; 1us; 121us; 1us; 121us; 2us; 122us; 123us; 3us; 122us; 901us; 902us; 1us; 122us; 1us; 122us; 1us; 123us; 3us; 123us; 901us; 902us; 1us; 123us; 1us; 123us; 1us; 123us; 1us; 124us; 1us; 124us; 1us; 125us; 1us; 125us; 2us; 126us; 900us; 1us; 126us; 1us; 127us; 1us; 127us; 1us; 128us; 1us; 128us; 2us; 129us; 130us; 1us; 129us; 1us; 129us; 2us; 131us; 132us; 1us; 131us; 1us; 131us; 1us; 132us; 3us; 133us; 142us; 143us; 1us; 133us; 1us; 133us; 1us; 133us; 1us; 133us; 1us; 133us; 1us; 133us; 1us; 134us; 1us; 134us; 1us; 135us; 1us; 136us; 1us; 137us; 1us; 137us; 1us; 137us; 1us; 138us; 3us; 139us; 140us; 141us; 2us; 139us; 140us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 141us; 2us; 142us; 143us; 2us; 142us; 143us; 1us; 142us; 1us; 143us; 2us; 144us; 145us; 2us; 144us; 145us; 1us; 144us; 1us; 145us; 2us; 146us; 147us; 2us; 146us; 147us; 1us; 146us; 1us; 147us; 1us; 148us; 1us; 149us; 1us; 151us; 1us; 151us; 1us; 151us; 3us; 152us; 169us; 170us; 4us; 152us; 209us; 215us; 218us; 1us; 152us; 1us; 153us; 1us; 154us; 1us; 155us; 1us; 156us; 2us; 157us; 158us; 1us; 158us; 1us; 160us; 1us; 160us; 2us; 161us; 162us; 2us; 161us; 162us; 1us; 161us; 1us; 162us; 2us; 163us; 164us; 1us; 164us; 1us; 164us; 7us; 165us; 166us; 167us; 168us; 169us; 170us; 171us; 12us; 165us; 166us; 167us; 168us; 169us; 170us; 171us; 260us; 261us; 262us; 263us; 264us; 7us; 165us; 166us; 167us; 168us; 169us; 170us; 171us; 12us; 165us; 166us; 167us; 168us; 169us; 170us; 171us; 260us; 261us; 262us; 263us; 264us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 166us; 4us; 166us; 822us; 823us; 824us; 1us; 167us; 4us; 167us; 822us; 823us; 824us; 1us; 168us; 1us; 168us; 1us; 169us; 1us; 169us; 1us; 170us; 1us; 170us; 1us; 171us; 1us; 171us; 1us; 171us; 1us; 172us; 1us; 172us; 1us; 172us; 1us; 173us; 1us; 173us; 1us; 173us; 4us; 175us; 176us; 177us; 178us; 1us; 176us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 178us; 1us; 178us; 1us; 178us; 1us; 178us; 1us; 178us; 1us; 178us; 4us; 179us; 180us; 189us; 190us; 2us; 179us; 180us; 2us; 179us; 180us; 2us; 179us; 180us; 2us; 179us; 180us; 1us; 179us; 1us; 179us; 1us; 180us; 1us; 181us; 1us; 181us; 1us; 182us; 1us; 183us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 185us; 3us; 186us; 187us; 188us; 2us; 186us; 187us; 1us; 186us; 1us; 187us; 2us; 188us; 195us; 1us; 188us; 2us; 189us; 190us; 2us; 189us; 190us; 1us; 189us; 1us; 190us; 2us; 191us; 192us; 2us; 191us; 192us; 1us; 191us; 1us; 192us; 1us; 193us; 1us; 194us; 1us; 195us; 1us; 195us; 1us; 197us; 1us; 197us; 1us; 197us; 1us; 198us; 1us; 198us; 2us; 199us; 200us; 2us; 199us; 200us; 1us; 199us; 1us; 200us; 2us; 201us; 202us; 1us; 202us; 1us; 202us; 1us; 203us; 1us; 203us; 1us; 203us; 1us; 203us; 1us; 203us; 1us; 203us; 2us; 204us; 205us; 2us; 204us; 205us; 2us; 204us; 205us; 1us; 204us; 1us; 204us; 1us; 205us; 2us; 206us; 207us; 1us; 207us; 11us; 208us; 209us; 210us; 211us; 212us; 213us; 214us; 215us; 216us; 217us; 218us; 16us; 208us; 209us; 210us; 211us; 212us; 213us; 214us; 215us; 216us; 217us; 218us; 260us; 261us; 262us; 263us; 264us; 11us; 208us; 209us; 210us; 211us; 212us; 213us; 214us; 215us; 216us; 217us; 218us; 16us; 208us; 209us; 210us; 211us; 212us; 213us; 214us; 215us; 216us; 217us; 218us; 260us; 261us; 262us; 263us; 264us; 1us; 208us; 1us; 209us; 2us; 210us; 216us; 1us; 210us; 1us; 210us; 1us; 211us; 4us; 211us; 822us; 823us; 824us; 1us; 211us; 1us; 212us; 1us; 212us; 1us; 212us; 1us; 212us; 1us; 212us; 1us; 212us; 1us; 212us; 1us; 212us; 1us; 213us; 1us; 214us; 1us; 214us; 1us; 215us; 1us; 215us; 1us; 216us; 1us; 216us; 1us; 217us; 1us; 217us; 1us; 217us; 1us; 217us; 1us; 217us; 1us; 217us; 1us; 218us; 1us; 218us; 1us; 219us; 1us; 219us; 1us; 219us; 1us; 219us; 1us; 219us; 1us; 219us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 222us; 1us; 222us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 227us; 1us; 228us; 1us; 229us; 1us; 230us; 1us; 231us; 1us; 233us; 1us; 233us; 1us; 233us; 1us; 235us; 1us; 235us; 1us; 235us; 1us; 237us; 1us; 237us; 1us; 237us; 3us; 239us; 240us; 241us; 2us; 239us; 240us; 1us; 239us; 1us; 240us; 1us; 240us; 1us; 240us; 1us; 241us; 1us; 242us; 1us; 244us; 1us; 244us; 1us; 245us; 2us; 247us; 248us; 1us; 247us; 1us; 248us; 2us; 249us; 250us; 2us; 249us; 250us; 1us; 249us; 1us; 250us; 1us; 251us; 2us; 252us; 253us; 2us; 252us; 253us; 1us; 252us; 4us; 254us; 255us; 256us; 257us; 5us; 254us; 255us; 256us; 257us; 370us; 3us; 254us; 255us; 256us; 1us; 254us; 1us; 254us; 1us; 255us; 1us; 255us; 1us; 256us; 1us; 257us; 1us; 257us; 1us; 257us; 1us; 258us; 1us; 259us; 5us; 260us; 261us; 262us; 263us; 264us; 5us; 260us; 261us; 262us; 263us; 264us; 4us; 260us; 818us; 901us; 902us; 1us; 260us; 1us; 260us; 1us; 260us; 1us; 261us; 1us; 262us; 1us; 263us; 5us; 264us; 825us; 853us; 854us; 860us; 1us; 264us; 1us; 264us; 3us; 265us; 266us; 267us; 2us; 265us; 266us; 1us; 265us; 1us; 266us; 1us; 267us; 1us; 267us; 2us; 268us; 850us; 2us; 268us; 401us; 1us; 268us; 1us; 269us; 1us; 270us; 1us; 271us; 1us; 272us; 1us; 273us; 3us; 274us; 275us; 276us; 4us; 274us; 276us; 901us; 902us; 1us; 275us; 3us; 275us; 901us; 902us; 1us; 276us; 1us; 277us; 1us; 278us; 2us; 278us; 279us; 1us; 278us; 2us; 279us; 282us; 3us; 279us; 283us; 284us; 1us; 279us; 2us; 279us; 283us; 1us; 279us; 1us; 280us; 1us; 281us; 1us; 281us; 1us; 282us; 1us; 282us; 1us; 282us; 1us; 282us; 1us; 283us; 1us; 286us; 1us; 286us; 1us; 286us; 1us; 286us; 1us; 286us; 1us; 287us; 2us; 289us; 427us; 1us; 292us; 2us; 292us; 293us; 2us; 293us; 790us; 2us; 293us; 792us; 1us; 293us; 1us; 293us; 1us; 294us; 1us; 295us; 1us; 295us; 1us; 295us; 1us; 295us; 8us; 296us; 297us; 298us; 299us; 300us; 302us; 303us; 304us; 1us; 296us; 1us; 296us; 7us; 297us; 298us; 299us; 300us; 302us; 303us; 304us; 1us; 297us; 3us; 298us; 303us; 304us; 1us; 298us; 1us; 299us; 1us; 300us; 1us; 300us; 1us; 300us; 1us; 301us; 2us; 301us; 305us; 1us; 301us; 1us; 301us; 1us; 301us; 1us; 301us; 1us; 301us; 1us; 302us; 1us; 302us; 1us; 303us; 1us; 305us; 1us; 305us; 1us; 306us; 1us; 307us; 1us; 307us; 1us; 308us; 1us; 308us; 1us; 308us; 2us; 309us; 322us; 1us; 310us; 2us; 311us; 312us; 1us; 311us; 1us; 311us; 4us; 313us; 314us; 315us; 316us; 4us; 313us; 314us; 315us; 316us; 4us; 313us; 314us; 315us; 316us; 1us; 313us; 1us; 314us; 1us; 314us; 1us; 314us; 1us; 315us; 1us; 315us; 1us; 315us; 1us; 316us; 1us; 316us; 1us; 316us; 1us; 317us; 6us; 318us; 319us; 903us; 904us; 906us; 907us; 1us; 318us; 1us; 318us; 1us; 319us; 1us; 319us; 1us; 319us; 5us; 320us; 321us; 323us; 324us; 900us; 1us; 320us; 2us; 321us; 324us; 2us; 321us; 324us; 2us; 321us; 324us; 1us; 322us; 1us; 323us; 1us; 323us; 1us; 325us; 5us; 326us; 327us; 822us; 823us; 824us; 1us; 326us; 1us; 326us; 2us; 328us; 329us; 2us; 328us; 974us; 1us; 328us; 1us; 329us; 1us; 330us; 1us; 330us; 1us; 331us; 1us; 331us; 1us; 331us; 1us; 331us; 1us; 331us; 1us; 332us; 1us; 332us; 1us; 333us; 1us; 333us; 1us; 334us; 1us; 335us; 1us; 335us; 1us; 335us; 1us; 335us; 1us; 335us; 2us; 336us; 337us; 1us; 337us; 1us; 337us; 1us; 339us; 3us; 339us; 901us; 902us; 1us; 340us; 3us; 340us; 901us; 902us; 1us; 341us; 1us; 341us; 1us; 341us; 1us; 342us; 1us; 343us; 1us; 343us; 1us; 344us; 1us; 344us; 1us; 344us; 1us; 344us; 1us; 345us; 1us; 345us; 1us; 345us; 1us; 346us; 1us; 347us; 1us; 348us; 1us; 349us; 1us; 350us; 1us; 351us; 1us; 352us; 1us; 352us; 1us; 352us; 1us; 352us; 1us; 352us; 1us; 352us; 1us; 352us; 1us; 352us; 2us; 353us; 356us; 2us; 354us; 357us; 1us; 356us; 1us; 356us; 1us; 357us; 1us; 357us; 2us; 358us; 359us; 5us; 358us; 359us; 361us; 362us; 363us; 1us; 359us; 3us; 360us; 901us; 902us; 4us; 361us; 362us; 363us; 365us; 1us; 361us; 1us; 361us; 1us; 361us; 1us; 362us; 1us; 363us; 1us; 364us; 2us; 364us; 366us; 1us; 364us; 2us; 365us; 366us; 1us; 367us; 1us; 367us; 1us; 368us; 1us; 368us; 1us; 368us; 1us; 370us; 1us; 370us; 1us; 371us; 3us; 372us; 373us; 374us; 3us; 372us; 373us; 374us; 3us; 372us; 373us; 374us; 3us; 372us; 373us; 374us; 2us; 372us; 373us; 1us; 372us; 1us; 373us; 1us; 374us; 2us; 375us; 376us; 2us; 375us; 376us; 1us; 375us; 1us; 376us; 1us; 377us; 1us; 378us; 2us; 378us; 379us; 1us; 379us; 1us; 381us; 2us; 381us; 382us; 1us; 381us; 1us; 381us; 1us; 382us; 1us; 382us; 1us; 383us; 2us; 384us; 385us; 1us; 384us; 1us; 384us; 1us; 385us; 1us; 386us; 1us; 387us; 1us; 388us; 1us; 389us; 1us; 390us; 1us; 391us; 1us; 392us; 1us; 393us; 1us; 394us; 1us; 395us; 1us; 396us; 1us; 397us; 1us; 398us; 2us; 398us; 438us; 1us; 399us; 1us; 400us; 1us; 401us; 1us; 402us; 2us; 403us; 404us; 1us; 404us; 1us; 404us; 6us; 405us; 417us; 418us; 419us; 424us; 426us; 1us; 406us; 1us; 407us; 1us; 407us; 2us; 408us; 409us; 3us; 408us; 410us; 411us; 1us; 408us; 1us; 408us; 1us; 409us; 1us; 411us; 1us; 411us; 5us; 412us; 413us; 414us; 415us; 416us; 2us; 412us; 414us; 1us; 412us; 1us; 413us; 1us; 414us; 2us; 415us; 489us; 1us; 415us; 1us; 416us; 6us; 417us; 418us; 418us; 419us; 424us; 426us; 6us; 417us; 418us; 419us; 419us; 424us; 426us; 6us; 417us; 418us; 419us; 423us; 424us; 426us; 6us; 417us; 418us; 419us; 424us; 424us; 426us; 6us; 417us; 418us; 419us; 424us; 425us; 426us; 6us; 417us; 418us; 419us; 424us; 426us; 426us; 6us; 417us; 418us; 419us; 424us; 426us; 536us; 7us; 417us; 418us; 419us; 424us; 426us; 537us; 538us; 1us; 417us; 1us; 417us; 1us; 418us; 1us; 419us; 2us; 420us; 423us; 2us; 421us; 425us; 1us; 422us; 1us; 423us; 1us; 424us; 1us; 425us; 1us; 426us; 5us; 427us; 428us; 429us; 430us; 444us; 3us; 428us; 429us; 430us; 1us; 428us; 1us; 429us; 1us; 429us; 1us; 430us; 1us; 430us; 1us; 431us; 3us; 431us; 862us; 863us; 1us; 432us; 4us; 433us; 434us; 435us; 436us; 1us; 433us; 1us; 434us; 1us; 434us; 1us; 435us; 1us; 435us; 1us; 437us; 1us; 438us; 1us; 438us; 1us; 439us; 1us; 439us; 1us; 439us; 1us; 440us; 1us; 440us; 1us; 440us; 1us; 441us; 1us; 441us; 1us; 441us; 1us; 442us; 1us; 443us; 2us; 443us; 924us; 1us; 443us; 1us; 444us; 1us; 445us; 1us; 446us; 1us; 447us; 1us; 448us; 8us; 449us; 450us; 451us; 452us; 903us; 904us; 906us; 907us; 2us; 449us; 450us; 1us; 449us; 1us; 450us; 3us; 451us; 489us; 904us; 2us; 451us; 904us; 1us; 452us; 7us; 453us; 455us; 456us; 459us; 461us; 464us; 466us; 7us; 455us; 456us; 456us; 459us; 461us; 464us; 466us; 7us; 455us; 456us; 459us; 460us; 461us; 464us; 466us; 7us; 455us; 456us; 459us; 461us; 461us; 464us; 466us; 7us; 455us; 456us; 459us; 461us; 463us; 464us; 466us; 7us; 455us; 456us; 459us; 461us; 464us; 464us; 466us; 7us; 455us; 456us; 459us; 461us; 464us; 465us; 466us; 7us; 455us; 456us; 459us; 461us; 464us; 466us; 466us; 7us; 455us; 456us; 459us; 461us; 464us; 466us; 470us; 8us; 455us; 456us; 459us; 461us; 464us; 466us; 472us; 473us; 13us; 455us; 456us; 459us; 461us; 464us; 466us; 532us; 533us; 723us; 724us; 725us; 726us; 727us; 7us; 455us; 456us; 459us; 461us; 464us; 466us; 599us; 1us; 455us; 1us; 455us; 1us; 456us; 2us; 457us; 463us; 2us; 458us; 465us; 1us; 459us; 1us; 459us; 1us; 460us; 1us; 461us; 1us; 462us; 1us; 463us; 1us; 464us; 1us; 465us; 1us; 466us; 1us; 467us; 2us; 468us; 469us; 1us; 468us; 2us; 469us; 974us; 1us; 469us; 3us; 470us; 901us; 902us; 1us; 470us; 1us; 472us; 2us; 473us; 974us; 1us; 473us; 2us; 474us; 475us; 2us; 474us; 475us; 1us; 474us; 1us; 475us; 1us; 476us; 1us; 477us; 1us; 477us; 1us; 477us; 47us; 478us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 2us; 479us; 480us; 1us; 479us; 2us; 481us; 482us; 1us; 481us; 1us; 481us; 51us; 483us; 484us; 485us; 486us; 487us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 53us; 483us; 484us; 485us; 486us; 487us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 666us; 667us; 54us; 483us; 484us; 485us; 486us; 487us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 719us; 720us; 721us; 2us; 483us; 484us; 1us; 483us; 1us; 486us; 1us; 486us; 1us; 487us; 1us; 487us; 1us; 487us; 1us; 487us; 5us; 488us; 493us; 494us; 495us; 496us; 1us; 489us; 2us; 489us; 519us; 2us; 489us; 522us; 2us; 489us; 527us; 2us; 489us; 530us; 2us; 489us; 532us; 2us; 489us; 650us; 2us; 489us; 660us; 2us; 489us; 685us; 2us; 489us; 689us; 2us; 489us; 694us; 3us; 489us; 694us; 904us; 2us; 489us; 709us; 1us; 490us; 2us; 491us; 492us; 2us; 491us; 492us; 1us; 491us; 1us; 492us; 4us; 493us; 494us; 495us; 496us; 1us; 493us; 1us; 494us; 2us; 495us; 496us; 1us; 495us; 1us; 496us; 1us; 497us; 1us; 498us; 1us; 499us; 2us; 500us; 501us; 2us; 500us; 501us; 1us; 500us; 1us; 501us; 3us; 502us; 503us; 504us; 3us; 502us; 503us; 504us; 1us; 502us; 1us; 503us; 1us; 504us; 1us; 504us; 3us; 505us; 506us; 507us; 48us; 505us; 506us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 1us; 505us; 1us; 506us; 1us; 507us; 1us; 508us; 47us; 508us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 2us; 509us; 510us; 47us; 509us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 1us; 511us; 1us; 511us; 2us; 512us; 513us; 1us; 512us; 6us; 514us; 515us; 516us; 517us; 518us; 519us; 50us; 514us; 515us; 516us; 517us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 3us; 514us; 515us; 516us; 2us; 514us; 515us; 1us; 514us; 1us; 515us; 1us; 516us; 1us; 516us; 1us; 517us; 1us; 518us; 1us; 519us; 15us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 541us; 6us; 520us; 521us; 522us; 523us; 524us; 541us; 4us; 520us; 521us; 522us; 523us; 2us; 520us; 521us; 1us; 520us; 1us; 521us; 1us; 522us; 1us; 523us; 1us; 524us; 5us; 525us; 526us; 527us; 528us; 529us; 4us; 525us; 526us; 527us; 528us; 2us; 525us; 526us; 1us; 525us; 1us; 526us; 1us; 527us; 1us; 528us; 1us; 529us; 1us; 530us; 1us; 530us; 1us; 530us; 1us; 531us; 1us; 532us; 2us; 533us; 1025us; 1us; 534us; 47us; 534us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 1us; 535us; 47us; 535us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 1us; 536us; 1us; 536us; 1us; 536us; 1us; 536us; 1us; 536us; 1us; 536us; 2us; 537us; 538us; 2us; 537us; 538us; 2us; 537us; 538us; 2us; 537us; 538us; 2us; 537us; 538us; 1us; 537us; 1us; 538us; 1us; 539us; 1us; 539us; 1us; 539us; 1us; 539us; 1us; 539us; 1us; 540us; 1us; 540us; 1us; 540us; 1us; 541us; 1us; 541us; 1us; 542us; 1us; 542us; 47us; 543us; 544us; 545us; 546us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 605us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 609us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 613us; 620us; 621us; 48us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 616us; 617us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 618us; 620us; 621us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 621us; 48us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 666us; 667us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 666us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 668us; 50us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 719us; 720us; 721us; 723us; 48us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 719us; 720us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 720us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 727us; 47us; 543us; 544us; 545us; 546us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 620us; 621us; 727us; 1us; 543us; 1us; 543us; 1us; 544us; 1us; 544us; 1us; 545us; 1us; 545us; 1us; 546us; 2us; 547us; 589us; 1us; 547us; 1us; 547us; 3us; 548us; 618us; 619us; 2us; 549us; 569us; 2us; 550us; 570us; 2us; 551us; 571us; 2us; 552us; 572us; 2us; 553us; 573us; 2us; 554us; 574us; 2us; 555us; 575us; 2us; 556us; 576us; 2us; 557us; 577us; 2us; 558us; 578us; 2us; 559us; 579us; 2us; 560us; 580us; 2us; 561us; 581us; 2us; 562us; 582us; 2us; 563us; 583us; 2us; 564us; 584us; 2us; 565us; 585us; 2us; 566us; 586us; 2us; 567us; 587us; 2us; 568us; 588us; 1us; 569us; 1us; 570us; 1us; 571us; 1us; 572us; 1us; 573us; 1us; 574us; 1us; 575us; 1us; 576us; 1us; 577us; 1us; 578us; 1us; 579us; 1us; 580us; 1us; 581us; 1us; 582us; 1us; 583us; 1us; 584us; 1us; 585us; 1us; 586us; 1us; 587us; 1us; 588us; 1us; 590us; 1us; 591us; 1us; 591us; 1us; 591us; 1us; 592us; 1us; 592us; 2us; 593us; 594us; 2us; 593us; 594us; 1us; 593us; 1us; 594us; 1us; 595us; 2us; 596us; 597us; 1us; 596us; 1us; 597us; 1us; 598us; 1us; 599us; 5us; 600us; 601us; 602us; 603us; 604us; 4us; 600us; 601us; 602us; 603us; 2us; 601us; 602us; 1us; 601us; 1us; 602us; 1us; 603us; 1us; 604us; 1us; 605us; 1us; 607us; 1us; 607us; 1us; 608us; 1us; 608us; 1us; 609us; 2us; 610us; 611us; 2us; 610us; 611us; 2us; 610us; 611us; 1us; 610us; 1us; 611us; 1us; 613us; 2us; 614us; 615us; 2us; 614us; 615us; 2us; 614us; 615us; 1us; 614us; 1us; 615us; 2us; 616us; 617us; 1us; 616us; 1us; 617us; 2us; 618us; 619us; 1us; 619us; 2us; 620us; 621us; 1us; 620us; 1us; 622us; 2us; 622us; 918us; 1us; 622us; 1us; 623us; 2us; 623us; 914us; 1us; 623us; 1us; 624us; 2us; 624us; 917us; 1us; 624us; 1us; 625us; 2us; 625us; 930us; 1us; 625us; 1us; 626us; 2us; 626us; 925us; 1us; 626us; 1us; 627us; 2us; 627us; 926us; 1us; 627us; 3us; 628us; 629us; 630us; 7us; 628us; 629us; 630us; 763us; 764us; 765us; 766us; 2us; 628us; 629us; 6us; 628us; 629us; 763us; 764us; 765us; 766us; 2us; 628us; 629us; 4us; 628us; 629us; 764us; 765us; 1us; 628us; 3us; 628us; 764us; 765us; 1us; 629us; 1us; 630us; 1us; 631us; 1us; 631us; 1us; 632us; 1us; 632us; 2us; 633us; 634us; 6us; 633us; 634us; 739us; 743us; 744us; 745us; 1us; 634us; 6us; 635us; 638us; 639us; 640us; 642us; 645us; 1us; 636us; 6us; 636us; 638us; 639us; 640us; 642us; 645us; 6us; 637us; 638us; 639us; 640us; 642us; 645us; 6us; 638us; 638us; 639us; 640us; 642us; 645us; 6us; 638us; 639us; 639us; 640us; 642us; 645us; 6us; 638us; 639us; 640us; 641us; 642us; 645us; 6us; 638us; 639us; 640us; 642us; 645us; 857us; 1us; 638us; 1us; 639us; 1us; 640us; 1us; 640us; 1us; 641us; 2us; 641us; 908us; 1us; 642us; 1us; 642us; 1us; 643us; 1us; 643us; 1us; 643us; 1us; 644us; 2us; 644us; 924us; 1us; 644us; 1us; 645us; 1us; 645us; 1us; 646us; 1us; 647us; 4us; 648us; 649us; 650us; 651us; 2us; 648us; 649us; 1us; 648us; 1us; 649us; 1us; 650us; 1us; 651us; 1us; 652us; 1us; 653us; 1us; 655us; 6us; 656us; 657us; 903us; 904us; 906us; 907us; 1us; 656us; 1us; 656us; 1us; 656us; 1us; 656us; 1us; 657us; 1us; 657us; 8us; 658us; 659us; 660us; 661us; 662us; 663us; 664us; 665us; 2us; 658us; 659us; 1us; 658us; 1us; 659us; 1us; 660us; 1us; 661us; 4us; 662us; 663us; 664us; 665us; 1us; 662us; 3us; 663us; 664us; 665us; 3us; 663us; 664us; 665us; 1us; 663us; 2us; 664us; 665us; 2us; 664us; 665us; 1us; 664us; 1us; 665us; 1us; 665us; 1us; 665us; 2us; 666us; 667us; 1us; 668us; 1us; 669us; 1us; 670us; 1us; 671us; 1us; 672us; 1us; 673us; 1us; 674us; 1us; 675us; 1us; 676us; 1us; 677us; 1us; 678us; 4us; 679us; 680us; 681us; 682us; 2us; 679us; 680us; 1us; 679us; 1us; 680us; 1us; 681us; 1us; 681us; 1us; 682us; 4us; 683us; 684us; 685us; 686us; 5us; 683us; 684us; 685us; 686us; 933us; 2us; 683us; 684us; 1us; 683us; 1us; 684us; 1us; 685us; 1us; 686us; 4us; 687us; 688us; 689us; 690us; 2us; 687us; 688us; 1us; 687us; 1us; 688us; 1us; 689us; 1us; 690us; 9us; 691us; 692us; 693us; 694us; 695us; 696us; 697us; 698us; 699us; 14us; 691us; 692us; 693us; 694us; 695us; 696us; 697us; 698us; 699us; 704us; 903us; 904us; 906us; 907us; 13us; 691us; 692us; 693us; 694us; 695us; 696us; 697us; 698us; 699us; 903us; 904us; 906us; 907us; 1us; 691us; 2us; 692us; 693us; 1us; 692us; 1us; 693us; 1us; 694us; 2us; 694us; 904us; 1us; 695us; 1us; 696us; 1us; 697us; 1us; 698us; 1us; 699us; 1us; 700us; 1us; 700us; 1us; 700us; 1us; 700us; 1us; 700us; 1us; 700us; 1us; 701us; 1us; 702us; 1us; 703us; 2us; 703us; 706us; 2us; 704us; 705us; 1us; 704us; 1us; 705us; 1us; 705us; 5us; 707us; 708us; 709us; 710us; 711us; 2us; 707us; 708us; 1us; 707us; 1us; 708us; 1us; 709us; 1us; 710us; 1us; 711us; 1us; 712us; 1us; 713us; 1us; 714us; 1us; 715us; 1us; 717us; 1us; 718us; 3us; 719us; 720us; 721us; 1us; 720us; 1us; 721us; 1us; 722us; 1us; 722us; 3us; 723us; 724us; 725us; 1us; 724us; 1us; 725us; 1us; 726us; 1us; 727us; 1us; 727us; 1us; 728us; 1us; 728us; 1us; 728us; 2us; 728us; 729us; 1us; 728us; 1us; 728us; 1us; 729us; 1us; 732us; 1us; 734us; 1us; 734us; 1us; 734us; 1us; 734us; 2us; 736us; 737us; 1us; 736us; 5us; 737us; 825us; 853us; 854us; 860us; 1us; 737us; 1us; 738us; 1us; 738us; 1us; 738us; 1us; 738us; 2us; 738us; 754us; 1us; 738us; 1us; 739us; 1us; 739us; 2us; 739us; 754us; 1us; 739us; 3us; 740us; 741us; 742us; 2us; 741us; 742us; 1us; 742us; 2us; 742us; 754us; 1us; 742us; 1us; 743us; 1us; 743us; 2us; 743us; 754us; 1us; 743us; 2us; 744us; 745us; 1us; 744us; 1us; 744us; 1us; 745us; 2us; 745us; 754us; 1us; 745us; 1us; 745us; 1us; 746us; 2us; 746us; 754us; 2us; 748us; 751us; 2us; 749us; 750us; 1us; 750us; 1us; 751us; 3us; 752us; 901us; 902us; 1us; 753us; 1us; 754us; 5us; 756us; 757us; 758us; 759us; 760us; 3us; 756us; 757us; 758us; 1us; 756us; 1us; 758us; 1us; 760us; 2us; 761us; 762us; 1us; 761us; 1us; 761us; 1us; 761us; 1us; 762us; 1us; 762us; 1us; 764us; 1us; 767us; 2us; 769us; 771us; 1us; 769us; 1us; 770us; 1us; 770us; 1us; 770us; 1us; 771us; 1us; 771us; 1us; 772us; 1us; 772us; 1us; 774us; 1us; 774us; 1us; 775us; 1us; 775us; 1us; 776us; 4us; 776us; 822us; 823us; 824us; 1us; 776us; 1us; 776us; 1us; 776us; 1us; 777us; 1us; 778us; 2us; 779us; 780us; 2us; 779us; 780us; 2us; 779us; 780us; 1us; 779us; 1us; 780us; 6us; 781us; 782us; 783us; 784us; 785us; 786us; 5us; 781us; 782us; 783us; 784us; 785us; 4us; 781us; 782us; 783us; 784us; 2us; 781us; 782us; 1us; 781us; 1us; 782us; 1us; 783us; 1us; 783us; 1us; 784us; 1us; 785us; 1us; 785us; 1us; 786us; 1us; 786us; 1us; 787us; 1us; 787us; 1us; 788us; 1us; 788us; 1us; 788us; 2us; 789us; 790us; 1us; 790us; 2us; 791us; 792us; 1us; 792us; 1us; 794us; 1us; 794us; 2us; 795us; 796us; 1us; 795us; 1us; 795us; 2us; 797us; 798us; 1us; 797us; 1us; 797us; 2us; 799us; 800us; 1us; 799us; 1us; 799us; 3us; 801us; 802us; 803us; 5us; 801us; 803us; 822us; 823us; 824us; 1us; 801us; 4us; 801us; 822us; 823us; 824us; 1us; 802us; 1us; 802us; 1us; 802us; 4us; 802us; 822us; 823us; 824us; 5us; 804us; 806us; 822us; 823us; 824us; 1us; 804us; 4us; 804us; 822us; 823us; 824us; 1us; 805us; 1us; 805us; 1us; 805us; 4us; 805us; 822us; 823us; 824us; 2us; 807us; 808us; 1us; 807us; 1us; 807us; 6us; 809us; 811us; 812us; 822us; 823us; 824us; 1us; 809us; 1us; 809us; 1us; 810us; 1us; 810us; 1us; 811us; 1us; 811us; 6us; 813us; 814us; 815us; 822us; 823us; 824us; 1us; 813us; 1us; 813us; 1us; 814us; 1us; 814us; 5us; 816us; 817us; 822us; 823us; 824us; 1us; 816us; 1us; 816us; 3us; 818us; 901us; 902us; 1us; 819us; 2us; 819us; 827us; 3us; 819us; 827us; 845us; 2us; 820us; 821us; 4us; 820us; 821us; 861us; 864us; 1us; 820us; 1us; 820us; 6us; 822us; 823us; 824us; 840us; 841us; 842us; 1us; 822us; 2us; 822us; 840us; 1us; 823us; 2us; 823us; 841us; 1us; 823us; 2us; 823us; 841us; 1us; 824us; 2us; 824us; 842us; 5us; 825us; 843us; 853us; 854us; 860us; 4us; 825us; 853us; 854us; 860us; 1us; 825us; 2us; 825us; 843us; 1us; 825us; 2us; 825us; 843us; 1us; 825us; 2us; 825us; 843us; 1us; 826us; 1us; 827us; 2us; 827us; 845us; 1us; 827us; 2us; 827us; 845us; 3us; 828us; 846us; 852us; 2us; 828us; 852us; 1us; 828us; 2us; 828us; 846us; 1us; 828us; 2us; 828us; 846us; 4us; 829us; 830us; 831us; 832us; 1us; 829us; 3us; 830us; 831us; 832us; 1us; 830us; 2us; 831us; 832us; 1us; 831us; 1us; 832us; 1us; 832us; 1us; 833us; 1us; 833us; 1us; 833us; 3us; 833us; 834us; 835us; 4us; 834us; 835us; 867us; 868us; 2us; 834us; 835us; 1us; 834us; 1us; 835us; 8us; 837us; 838us; 839us; 847us; 848us; 849us; 862us; 863us; 5us; 837us; 838us; 839us; 862us; 863us; 2us; 838us; 839us; 4us; 838us; 839us; 848us; 849us; 1us; 838us; 2us; 838us; 848us; 1us; 839us; 2us; 839us; 849us; 1us; 839us; 2us; 839us; 849us; 1us; 844us; 1us; 850us; 3us; 850us; 862us; 863us; 1us; 851us; 1us; 852us; 3us; 853us; 854us; 860us; 2us; 853us; 854us; 5us; 853us; 854us; 874us; 875us; 876us; 1us; 853us; 1us; 854us; 1us; 855us; 1us; 856us; 1us; 857us; 1us; 858us; 1us; 859us; 1us; 860us; 1us; 860us; 1us; 861us; 2us; 862us; 863us; 4us; 862us; 863us; 901us; 902us; 1us; 863us; 1us; 864us; 1us; 864us; 1us; 865us; 1us; 866us; 1us; 866us; 7us; 867us; 868us; 869us; 870us; 871us; 872us; 873us; 3us; 867us; 868us; 869us; 3us; 867us; 868us; 869us; 2us; 867us; 868us; 1us; 867us; 1us; 868us; 1us; 869us; 3us; 870us; 871us; 877us; 1us; 870us; 1us; 871us; 1us; 872us; 1us; 873us; 3us; 874us; 875us; 876us; 2us; 875us; 876us; 1us; 875us; 1us; 877us; 1us; 878us; 2us; 880us; 881us; 3us; 880us; 892us; 893us; 1us; 880us; 1us; 881us; 1us; 881us; 3us; 882us; 901us; 902us; 1us; 883us; 1us; 884us; 3us; 884us; 892us; 893us; 1us; 884us; 3us; 885us; 886us; 887us; 2us; 886us; 887us; 1us; 886us; 1us; 887us; 1us; 887us; 1us; 888us; 2us; 889us; 890us; 1us; 890us; 1us; 891us; 3us; 892us; 892us; 893us; 3us; 892us; 893us; 893us; 3us; 892us; 893us; 894us; 1us; 892us; 1us; 893us; 1us; 894us; 1us; 895us; 1us; 895us; 1us; 896us; 1us; 897us; 2us; 897us; 911us; 1us; 897us; 1us; 898us; 1us; 899us; 1us; 900us; 2us; 901us; 902us; 1us; 901us; 1us; 902us; 4us; 903us; 904us; 906us; 907us; 1us; 903us; 1us; 903us; 1us; 904us; 1us; 904us; 1us; 905us; 3us; 906us; 907us; 936us; 3us; 906us; 907us; 936us; 1us; 906us; 1us; 907us; 1us; 907us; 1us; 907us; 1us; 908us; 1us; 909us; 1us; 910us; 1us; 911us; 1us; 912us; 1us; 913us; 1us; 914us; 1us; 915us; 1us; 916us; 1us; 917us; 1us; 918us; 1us; 919us; 1us; 920us; 1us; 921us; 1us; 922us; 1us; 923us; 1us; 924us; 1us; 925us; 1us; 926us; 1us; 927us; 1us; 928us; 1us; 929us; 1us; 930us; 2us; 931us; 932us; 1us; 932us; 1us; 933us; 1us; 933us; 1us; 934us; 1us; 935us; 1us; 935us; 1us; 936us; 1us; 937us; 1us; 938us; 3us; 939us; 941us; 942us; 1us; 940us; 2us; 941us; 942us; 1us; 941us; 1us; 942us; 1us; 943us; 1us; 944us; 1us; 945us; 1us; 946us; 2us; 947us; 948us; 1us; 948us; 1us; 949us; 1us; 950us; 2us; 951us; 952us; 1us; 952us; 1us; 955us; 1us; 955us; 2us; 957us; 959us; 2us; 958us; 960us; 1us; 959us; 1us; 960us; 1us; 961us; 1us; 962us; 1us; 963us; 1us; 964us; 1us; 965us; 1us; 966us; 1us; 968us; 1us; 970us; 1us; 972us; 1us; 974us; 1us; 976us; 1us; 980us; 1us; 982us; 1us; 984us; 1us; 985us; 1us; 986us; 1us; 987us; 1us; 988us; 1us; 989us; 1us; 990us; 1us; 991us; 1us; 992us; 1us; 993us; 1us; 994us; 1us; 995us; 1us; 996us; 1us; 998us; 1us; 1000us; 2us; 1000us; 1020us; 1us; 1000us; 1us; 1001us; 1us; 1002us; 1us; 1003us; 2us; 1003us; 1021us; 1us; 1003us; 1us; 1004us; 1us; 1005us; 1us; 1006us; 1us; 1006us; 1us; 1007us; 1us; 1008us; 1us; 1009us; 1us; 1009us; 1us; 1010us; 1us; 1011us; 1us; 1012us; 1us; 1012us; 1us; 1013us; 1us; 1014us; 1us; 1015us; 1us; 1016us; 1us; 1017us; 1us; 1018us; 1us; 1019us; 1us; 1020us; 1us; 1021us; 1us; 1022us; 1us; 1023us; 1us; 1024us; 1us; 1025us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 25us; 27us; 29us; 31us; 33us; 35us; 37us; 39us; 42us; 44us; 47us; 49us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 69us; 71us; 79us; 87us; 135us; 137us; 140us; 142us; 144us; 146us; 150us; 152us; 155us; 157us; 159us; 161us; 164us; 166us; 168us; 170us; 174us; 176us; 180us; 183us; 185us; 188us; 190us; 192us; 194us; 196us; 199us; 201us; 204us; 206us; 208us; 210us; 212us; 219us; 226us; 230us; 232us; 234us; 246us; 257us; 260us; 262us; 264us; 266us; 270us; 273us; 275us; 277us; 279us; 283us; 285us; 287us; 290us; 293us; 296us; 298us; 300us; 302us; 304us; 308us; 311us; 313us; 315us; 317us; 320us; 322us; 324us; 326us; 337us; 347us; 397us; 400us; 402us; 404us; 406us; 411us; 413us; 416us; 418us; 420us; 423us; 426us; 428us; 430us; 432us; 434us; 441us; 448us; 450us; 454us; 456us; 462us; 464us; 466us; 468us; 470us; 472us; 474us; 476us; 478us; 481us; 483us; 485us; 489us; 493us; 495us; 499us; 505us; 508us; 510us; 512us; 515us; 517us; 519us; 521us; 523us; 527us; 531us; 534us; 536us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 556us; 562us; 565us; 568us; 570us; 572us; 574us; 576us; 578us; 582us; 584us; 586us; 588us; 590us; 592us; 594us; 596us; 598us; 600us; 602us; 605us; 653us; 655us; 703us; 705us; 707us; 709us; 711us; 713us; 715us; 717us; 719us; 721us; 723us; 725us; 728us; 730us; 735us; 739us; 742us; 744us; 746us; 749us; 751us; 753us; 755us; 757us; 759us; 762us; 764us; 768us; 770us; 772us; 775us; 779us; 781us; 783us; 785us; 789us; 791us; 793us; 795us; 797us; 799us; 801us; 803us; 806us; 808us; 810us; 812us; 814us; 816us; 819us; 821us; 823us; 826us; 828us; 830us; 832us; 836us; 838us; 840us; 842us; 844us; 846us; 848us; 850us; 852us; 854us; 856us; 858us; 860us; 862us; 864us; 868us; 871us; 873us; 875us; 877us; 879us; 882us; 885us; 887us; 889us; 892us; 895us; 897us; 899us; 902us; 905us; 907us; 909us; 911us; 913us; 915us; 917us; 919us; 923us; 928us; 930us; 932us; 934us; 936us; 938us; 941us; 943us; 945us; 947us; 950us; 953us; 955us; 957us; 960us; 962us; 964us; 972us; 985us; 993us; 1006us; 1008us; 1010us; 1012us; 1014us; 1016us; 1018us; 1020us; 1022us; 1024us; 1026us; 1031us; 1033us; 1038us; 1040us; 1042us; 1044us; 1046us; 1048us; 1050us; 1052us; 1054us; 1056us; 1058us; 1060us; 1062us; 1064us; 1066us; 1068us; 1073us; 1075us; 1077us; 1079us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1093us; 1098us; 1101us; 1104us; 1107us; 1110us; 1112us; 1114us; 1116us; 1118us; 1120us; 1122us; 1124us; 1126us; 1128us; 1130us; 1132us; 1136us; 1139us; 1141us; 1143us; 1146us; 1148us; 1151us; 1154us; 1156us; 1158us; 1161us; 1164us; 1166us; 1168us; 1170us; 1172us; 1174us; 1176us; 1178us; 1180us; 1182us; 1184us; 1186us; 1189us; 1192us; 1194us; 1196us; 1199us; 1201us; 1203us; 1205us; 1207us; 1209us; 1211us; 1213us; 1215us; 1218us; 1221us; 1224us; 1226us; 1228us; 1230us; 1233us; 1235us; 1247us; 1264us; 1276us; 1293us; 1295us; 1297us; 1300us; 1302us; 1304us; 1306us; 1311us; 1313us; 1315us; 1317us; 1319us; 1321us; 1323us; 1325us; 1327us; 1329us; 1331us; 1333us; 1335us; 1337us; 1339us; 1341us; 1343us; 1345us; 1347us; 1349us; 1351us; 1353us; 1355us; 1357us; 1359us; 1361us; 1363us; 1365us; 1367us; 1369us; 1371us; 1373us; 1375us; 1377us; 1379us; 1381us; 1383us; 1385us; 1387us; 1389us; 1391us; 1393us; 1395us; 1397us; 1399us; 1401us; 1403us; 1405us; 1407us; 1409us; 1411us; 1413us; 1415us; 1417us; 1419us; 1421us; 1423us; 1425us; 1427us; 1429us; 1431us; 1435us; 1438us; 1440us; 1442us; 1444us; 1446us; 1448us; 1450us; 1452us; 1454us; 1456us; 1459us; 1461us; 1463us; 1466us; 1469us; 1471us; 1473us; 1475us; 1478us; 1481us; 1483us; 1488us; 1494us; 1498us; 1500us; 1502us; 1504us; 1506us; 1508us; 1510us; 1512us; 1514us; 1516us; 1518us; 1524us; 1530us; 1535us; 1537us; 1539us; 1541us; 1543us; 1545us; 1547us; 1553us; 1555us; 1557us; 1561us; 1564us; 1566us; 1568us; 1570us; 1572us; 1575us; 1578us; 1580us; 1582us; 1584us; 1586us; 1588us; 1590us; 1594us; 1599us; 1601us; 1605us; 1607us; 1609us; 1611us; 1614us; 1616us; 1619us; 1623us; 1625us; 1628us; 1630us; 1632us; 1634us; 1636us; 1638us; 1640us; 1642us; 1644us; 1646us; 1648us; 1650us; 1652us; 1654us; 1656us; 1658us; 1661us; 1663us; 1666us; 1669us; 1672us; 1674us; 1676us; 1678us; 1680us; 1682us; 1684us; 1686us; 1695us; 1697us; 1699us; 1707us; 1709us; 1713us; 1715us; 1717us; 1719us; 1721us; 1723us; 1725us; 1728us; 1730us; 1732us; 1734us; 1736us; 1738us; 1740us; 1742us; 1744us; 1746us; 1748us; 1750us; 1752us; 1754us; 1756us; 1758us; 1760us; 1763us; 1765us; 1768us; 1770us; 1772us; 1777us; 1782us; 1787us; 1789us; 1791us; 1793us; 1795us; 1797us; 1799us; 1801us; 1803us; 1805us; 1807us; 1809us; 1816us; 1818us; 1820us; 1822us; 1824us; 1826us; 1832us; 1834us; 1837us; 1840us; 1843us; 1845us; 1847us; 1849us; 1851us; 1857us; 1859us; 1861us; 1864us; 1867us; 1869us; 1871us; 1873us; 1875us; 1877us; 1879us; 1881us; 1883us; 1885us; 1887us; 1889us; 1891us; 1893us; 1895us; 1897us; 1899us; 1901us; 1903us; 1905us; 1908us; 1910us; 1912us; 1914us; 1918us; 1920us; 1924us; 1926us; 1928us; 1930us; 1932us; 1934us; 1936us; 1938us; 1940us; 1942us; 1944us; 1946us; 1948us; 1950us; 1952us; 1954us; 1956us; 1958us; 1960us; 1962us; 1964us; 1966us; 1968us; 1970us; 1972us; 1974us; 1976us; 1978us; 1981us; 1984us; 1986us; 1988us; 1990us; 1992us; 1995us; 2001us; 2003us; 2007us; 2012us; 2014us; 2016us; 2018us; 2020us; 2022us; 2024us; 2027us; 2029us; 2032us; 2034us; 2036us; 2038us; 2040us; 2042us; 2044us; 2046us; 2048us; 2052us; 2056us; 2060us; 2064us; 2067us; 2069us; 2071us; 2073us; 2076us; 2079us; 2081us; 2083us; 2085us; 2087us; 2090us; 2092us; 2094us; 2097us; 2099us; 2101us; 2103us; 2105us; 2107us; 2110us; 2112us; 2114us; 2116us; 2118us; 2120us; 2122us; 2124us; 2126us; 2128us; 2130us; 2132us; 2134us; 2136us; 2138us; 2140us; 2142us; 2145us; 2147us; 2149us; 2151us; 2153us; 2156us; 2158us; 2160us; 2167us; 2169us; 2171us; 2173us; 2176us; 2180us; 2182us; 2184us; 2186us; 2188us; 2190us; 2196us; 2199us; 2201us; 2203us; 2205us; 2208us; 2210us; 2212us; 2219us; 2226us; 2233us; 2240us; 2247us; 2254us; 2261us; 2269us; 2271us; 2273us; 2275us; 2277us; 2280us; 2283us; 2285us; 2287us; 2289us; 2291us; 2293us; 2299us; 2303us; 2305us; 2307us; 2309us; 2311us; 2313us; 2315us; 2319us; 2321us; 2326us; 2328us; 2330us; 2332us; 2334us; 2336us; 2338us; 2340us; 2342us; 2344us; 2346us; 2348us; 2350us; 2352us; 2354us; 2356us; 2358us; 2360us; 2362us; 2364us; 2367us; 2369us; 2371us; 2373us; 2375us; 2377us; 2379us; 2388us; 2391us; 2393us; 2395us; 2399us; 2402us; 2404us; 2412us; 2420us; 2428us; 2436us; 2444us; 2452us; 2460us; 2468us; 2476us; 2485us; 2499us; 2507us; 2509us; 2511us; 2513us; 2516us; 2519us; 2521us; 2523us; 2525us; 2527us; 2529us; 2531us; 2533us; 2535us; 2537us; 2539us; 2542us; 2544us; 2547us; 2549us; 2553us; 2555us; 2557us; 2560us; 2562us; 2565us; 2568us; 2570us; 2572us; 2574us; 2576us; 2578us; 2580us; 2628us; 2631us; 2633us; 2636us; 2638us; 2640us; 2692us; 2746us; 2801us; 2804us; 2806us; 2808us; 2810us; 2812us; 2814us; 2816us; 2818us; 2824us; 2826us; 2829us; 2832us; 2835us; 2838us; 2841us; 2844us; 2847us; 2850us; 2853us; 2856us; 2860us; 2863us; 2865us; 2868us; 2871us; 2873us; 2875us; 2880us; 2882us; 2884us; 2887us; 2889us; 2891us; 2893us; 2895us; 2897us; 2900us; 2903us; 2905us; 2907us; 2911us; 2915us; 2917us; 2919us; 2921us; 2923us; 2927us; 2976us; 2978us; 2980us; 2982us; 2984us; 3032us; 3035us; 3083us; 3085us; 3087us; 3090us; 3092us; 3099us; 3150us; 3154us; 3157us; 3159us; 3161us; 3163us; 3165us; 3167us; 3169us; 3171us; 3187us; 3194us; 3199us; 3202us; 3204us; 3206us; 3208us; 3210us; 3212us; 3218us; 3223us; 3226us; 3228us; 3230us; 3232us; 3234us; 3236us; 3238us; 3240us; 3242us; 3244us; 3246us; 3249us; 3251us; 3299us; 3301us; 3349us; 3351us; 3353us; 3355us; 3357us; 3359us; 3361us; 3364us; 3367us; 3370us; 3373us; 3376us; 3378us; 3380us; 3382us; 3384us; 3386us; 3388us; 3390us; 3392us; 3394us; 3396us; 3398us; 3400us; 3402us; 3404us; 3452us; 3500us; 3548us; 3596us; 3644us; 3692us; 3740us; 3788us; 3836us; 3884us; 3932us; 3980us; 4028us; 4076us; 4124us; 4172us; 4220us; 4268us; 4316us; 4364us; 4412us; 4460us; 4508us; 4556us; 4605us; 4653us; 4701us; 4750us; 4798us; 4846us; 4897us; 4946us; 4994us; 5042us; 5090us; 5092us; 5094us; 5096us; 5098us; 5100us; 5102us; 5104us; 5107us; 5109us; 5111us; 5115us; 5118us; 5121us; 5124us; 5127us; 5130us; 5133us; 5136us; 5139us; 5142us; 5145us; 5148us; 5151us; 5154us; 5157us; 5160us; 5163us; 5166us; 5169us; 5172us; 5175us; 5177us; 5179us; 5181us; 5183us; 5185us; 5187us; 5189us; 5191us; 5193us; 5195us; 5197us; 5199us; 5201us; 5203us; 5205us; 5207us; 5209us; 5211us; 5213us; 5215us; 5217us; 5219us; 5221us; 5223us; 5225us; 5227us; 5230us; 5233us; 5235us; 5237us; 5239us; 5242us; 5244us; 5246us; 5248us; 5250us; 5256us; 5261us; 5264us; 5266us; 5268us; 5270us; 5272us; 5274us; 5276us; 5278us; 5280us; 5282us; 5284us; 5287us; 5290us; 5293us; 5295us; 5297us; 5299us; 5302us; 5305us; 5308us; 5310us; 5312us; 5315us; 5317us; 5319us; 5322us; 5324us; 5327us; 5329us; 5331us; 5334us; 5336us; 5338us; 5341us; 5343us; 5345us; 5348us; 5350us; 5352us; 5355us; 5357us; 5359us; 5362us; 5364us; 5366us; 5369us; 5371us; 5375us; 5383us; 5386us; 5393us; 5396us; 5401us; 5403us; 5407us; 5409us; 5411us; 5413us; 5415us; 5417us; 5419us; 5422us; 5429us; 5431us; 5438us; 5440us; 5447us; 5454us; 5461us; 5468us; 5475us; 5482us; 5484us; 5486us; 5488us; 5490us; 5492us; 5495us; 5497us; 5499us; 5501us; 5503us; 5505us; 5507us; 5510us; 5512us; 5514us; 5516us; 5518us; 5520us; 5525us; 5528us; 5530us; 5532us; 5534us; 5536us; 5538us; 5540us; 5542us; 5549us; 5551us; 5553us; 5555us; 5557us; 5559us; 5561us; 5570us; 5573us; 5575us; 5577us; 5579us; 5581us; 5586us; 5588us; 5592us; 5596us; 5598us; 5601us; 5604us; 5606us; 5608us; 5610us; 5612us; 5615us; 5617us; 5619us; 5621us; 5623us; 5625us; 5627us; 5629us; 5631us; 5633us; 5635us; 5637us; 5642us; 5645us; 5647us; 5649us; 5651us; 5653us; 5655us; 5660us; 5666us; 5669us; 5671us; 5673us; 5675us; 5677us; 5682us; 5685us; 5687us; 5689us; 5691us; 5693us; 5703us; 5718us; 5732us; 5734us; 5737us; 5739us; 5741us; 5743us; 5746us; 5748us; 5750us; 5752us; 5754us; 5756us; 5758us; 5760us; 5762us; 5764us; 5766us; 5768us; 5770us; 5772us; 5774us; 5777us; 5780us; 5782us; 5784us; 5786us; 5792us; 5795us; 5797us; 5799us; 5801us; 5803us; 5805us; 5807us; 5809us; 5811us; 5813us; 5815us; 5817us; 5821us; 5823us; 5825us; 5827us; 5829us; 5833us; 5835us; 5837us; 5839us; 5841us; 5843us; 5845us; 5847us; 5849us; 5852us; 5854us; 5856us; 5858us; 5860us; 5862us; 5864us; 5866us; 5868us; 5871us; 5873us; 5879us; 5881us; 5883us; 5885us; 5887us; 5889us; 5892us; 5894us; 5896us; 5898us; 5901us; 5903us; 5907us; 5910us; 5912us; 5915us; 5917us; 5919us; 5921us; 5924us; 5926us; 5929us; 5931us; 5933us; 5935us; 5938us; 5940us; 5942us; 5944us; 5947us; 5950us; 5953us; 5955us; 5957us; 5961us; 5963us; 5965us; 5971us; 5975us; 5977us; 5979us; 5981us; 5984us; 5986us; 5988us; 5990us; 5992us; 5994us; 5996us; 5998us; 6001us; 6003us; 6005us; 6007us; 6009us; 6011us; 6013us; 6015us; 6017us; 6019us; 6021us; 6023us; 6025us; 6027us; 6032us; 6034us; 6036us; 6038us; 6040us; 6042us; 6045us; 6048us; 6051us; 6053us; 6055us; 6062us; 6068us; 6073us; 6076us; 6078us; 6080us; 6082us; 6084us; 6086us; 6088us; 6090us; 6092us; 6094us; 6096us; 6098us; 6100us; 6102us; 6104us; 6107us; 6109us; 6112us; 6114us; 6116us; 6118us; 6121us; 6123us; 6125us; 6128us; 6130us; 6132us; 6135us; 6137us; 6139us; 6143us; 6149us; 6151us; 6156us; 6158us; 6160us; 6162us; 6167us; 6173us; 6175us; 6180us; 6182us; 6184us; 6186us; 6191us; 6194us; 6196us; 6198us; 6205us; 6207us; 6209us; 6211us; 6213us; 6215us; 6217us; 6224us; 6226us; 6228us; 6230us; 6232us; 6238us; 6240us; 6242us; 6246us; 6248us; 6251us; 6255us; 6258us; 6263us; 6265us; 6267us; 6274us; 6276us; 6279us; 6281us; 6284us; 6286us; 6289us; 6291us; 6294us; 6300us; 6305us; 6307us; 6310us; 6312us; 6315us; 6317us; 6320us; 6322us; 6324us; 6327us; 6329us; 6332us; 6336us; 6339us; 6341us; 6344us; 6346us; 6349us; 6354us; 6356us; 6360us; 6362us; 6365us; 6367us; 6369us; 6371us; 6373us; 6375us; 6377us; 6381us; 6386us; 6389us; 6391us; 6393us; 6402us; 6408us; 6411us; 6416us; 6418us; 6421us; 6423us; 6426us; 6428us; 6431us; 6433us; 6435us; 6439us; 6441us; 6443us; 6447us; 6450us; 6456us; 6458us; 6460us; 6462us; 6464us; 6466us; 6468us; 6470us; 6472us; 6474us; 6476us; 6479us; 6484us; 6486us; 6488us; 6490us; 6492us; 6494us; 6496us; 6504us; 6508us; 6512us; 6515us; 6517us; 6519us; 6521us; 6525us; 6527us; 6529us; 6531us; 6533us; 6537us; 6540us; 6542us; 6544us; 6546us; 6549us; 6553us; 6555us; 6557us; 6559us; 6563us; 6565us; 6567us; 6571us; 6573us; 6577us; 6580us; 6582us; 6584us; 6586us; 6588us; 6591us; 6593us; 6595us; 6599us; 6603us; 6607us; 6609us; 6611us; 6613us; 6615us; 6617us; 6619us; 6621us; 6624us; 6626us; 6628us; 6630us; 6632us; 6635us; 6637us; 6639us; 6644us; 6646us; 6648us; 6650us; 6652us; 6654us; 6658us; 6662us; 6664us; 6666us; 6668us; 6670us; 6672us; 6674us; 6676us; 6678us; 6680us; 6682us; 6684us; 6686us; 6688us; 6690us; 6692us; 6694us; 6696us; 6698us; 6700us; 6702us; 6704us; 6706us; 6708us; 6710us; 6712us; 6714us; 6716us; 6719us; 6721us; 6723us; 6725us; 6727us; 6729us; 6731us; 6733us; 6735us; 6737us; 6741us; 6743us; 6746us; 6748us; 6750us; 6752us; 6754us; 6756us; 6758us; 6761us; 6763us; 6765us; 6767us; 6770us; 6772us; 6774us; 6776us; 6779us; 6782us; 6784us; 6786us; 6788us; 6790us; 6792us; 6794us; 6796us; 6798us; 6800us; 6802us; 6804us; 6806us; 6808us; 6810us; 6812us; 6814us; 6816us; 6818us; 6820us; 6822us; 6824us; 6826us; 6828us; 6830us; 6832us; 6834us; 6836us; 6838us; 6840us; 6842us; 6845us; 6847us; 6849us; 6851us; 6853us; 6856us; 6858us; 6860us; 6862us; 6864us; 6866us; 6868us; 6870us; 6872us; 6874us; 6876us; 6878us; 6880us; 6882us; 6884us; 6886us; 6888us; 6890us; 6892us; 6894us; 6896us; 6898us; 6900us; 6902us; 6904us; 6906us; |]
let _fsyacc_action_rows = 1760
let _fsyacc_actionTableElements = [|16us; 16437us; 21us; 79us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 72us; 199us; 87us; 9us; 100us; 170us; 107us; 16496us; 108us; 16496us; 119us; 16496us; 147us; 16496us; 192us; 41us; 0us; 49152us; 82us; 16446us; 21us; 94us; 23us; 16496us; 24us; 16496us; 28us; 16496us; 29us; 16496us; 30us; 16496us; 31us; 16496us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 39us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 44us; 16496us; 61us; 16496us; 70us; 16496us; 71us; 16496us; 72us; 199us; 73us; 16496us; 74us; 16496us; 85us; 16496us; 87us; 9us; 88us; 16496us; 89us; 16496us; 91us; 16496us; 97us; 16496us; 99us; 16496us; 100us; 664us; 105us; 16496us; 106us; 16496us; 107us; 16496us; 113us; 16496us; 114us; 16496us; 115us; 16496us; 117us; 16496us; 119us; 16496us; 120us; 16496us; 121us; 16496us; 122us; 16496us; 123us; 16496us; 124us; 16496us; 128us; 16496us; 131us; 16496us; 132us; 16496us; 134us; 16496us; 135us; 16496us; 143us; 16496us; 144us; 16496us; 145us; 16496us; 147us; 16496us; 151us; 16496us; 152us; 16496us; 155us; 16496us; 156us; 16496us; 159us; 16496us; 160us; 16496us; 161us; 16496us; 162us; 16496us; 163us; 16496us; 164us; 16496us; 165us; 16496us; 166us; 16496us; 167us; 16496us; 168us; 16496us; 169us; 16496us; 170us; 16496us; 171us; 16496us; 172us; 16496us; 173us; 16496us; 174us; 16496us; 176us; 16496us; 177us; 16496us; 179us; 16496us; 180us; 16496us; 183us; 16496us; 188us; 16496us; 189us; 16496us; 190us; 16496us; 191us; 16496us; 192us; 47us; 0us; 49152us; 7us; 16496us; 10us; 17us; 20us; 8us; 67us; 16us; 72us; 199us; 83us; 7us; 87us; 9us; 100us; 664us; 0us; 49152us; 0us; 16387us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 188us; 10us; 0us; 16394us; 2us; 16390us; 189us; 13us; 190us; 12us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16395us; 0us; 16396us; 0us; 16397us; 0us; 16398us; 4us; 32768us; 10us; 17us; 20us; 1691us; 67us; 16us; 83us; 1690us; 0us; 16399us; 4us; 32768us; 10us; 17us; 20us; 1691us; 67us; 16us; 83us; 1690us; 0us; 16400us; 4us; 32768us; 10us; 17us; 20us; 1691us; 67us; 16us; 83us; 1690us; 0us; 16401us; 5us; 16496us; 10us; 17us; 67us; 16us; 72us; 199us; 87us; 9us; 100us; 664us; 0us; 16402us; 5us; 16496us; 10us; 17us; 67us; 16us; 72us; 199us; 87us; 9us; 100us; 664us; 0us; 16403us; 5us; 16496us; 10us; 17us; 67us; 16us; 72us; 199us; 87us; 9us; 100us; 664us; 0us; 16404us; 16us; 16405us; 31us; 16496us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 39us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 72us; 199us; 100us; 664us; 107us; 16496us; 119us; 16496us; 135us; 16496us; 147us; 16496us; 159us; 16496us; 0us; 16406us; 3us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 74us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 35us; 1727us; 36us; 1730us; 37us; 1732us; 38us; 1735us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 107us; 1731us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 119us; 653us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 135us; 670us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 147us; 1736us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 25us; 16407us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 0us; 16408us; 2us; 32768us; 10us; 38us; 192us; 39us; 0us; 16409us; 1us; 32768us; 10us; 40us; 0us; 16410us; 4us; 16436us; 10us; 42us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 0us; 16411us; 2us; 32768us; 10us; 44us; 192us; 45us; 0us; 16412us; 1us; 32768us; 10us; 46us; 0us; 16413us; 4us; 32768us; 10us; 48us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 0us; 16414us; 3us; 16610us; 41us; 459us; 42us; 458us; 43us; 460us; 2us; 32768us; 44us; 1629us; 188us; 1628us; 1us; 16415us; 76us; 1631us; 2us; 32768us; 44us; 1629us; 188us; 1628us; 1us; 16416us; 76us; 1631us; 1us; 16417us; 148us; 52us; 0us; 16418us; 1us; 16420us; 148us; 52us; 0us; 16419us; 1us; 17355us; 69us; 1707us; 16us; 16437us; 21us; 79us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 72us; 199us; 87us; 9us; 100us; 170us; 107us; 16496us; 108us; 16496us; 119us; 16496us; 147us; 16496us; 192us; 87us; 0us; 16421us; 1us; 16422us; 148us; 52us; 0us; 16423us; 1us; 16425us; 148us; 52us; 0us; 16424us; 1us; 17355us; 69us; 1707us; 82us; 16446us; 21us; 94us; 23us; 16496us; 24us; 16496us; 28us; 16496us; 29us; 16496us; 30us; 16496us; 31us; 16496us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 39us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 44us; 16496us; 61us; 16496us; 70us; 16496us; 71us; 16496us; 72us; 199us; 73us; 16496us; 74us; 16496us; 85us; 16496us; 87us; 9us; 88us; 16496us; 89us; 16496us; 91us; 16496us; 97us; 16496us; 99us; 16496us; 100us; 664us; 105us; 16496us; 106us; 16496us; 107us; 16496us; 113us; 16496us; 114us; 16496us; 115us; 16496us; 117us; 16496us; 119us; 16496us; 120us; 16496us; 121us; 16496us; 122us; 16496us; 123us; 16496us; 124us; 16496us; 128us; 16496us; 131us; 16496us; 132us; 16496us; 134us; 16496us; 135us; 16496us; 143us; 16496us; 144us; 16496us; 145us; 16496us; 147us; 16496us; 151us; 16496us; 152us; 16496us; 155us; 16496us; 156us; 16496us; 159us; 16496us; 160us; 16496us; 161us; 16496us; 162us; 16496us; 163us; 16496us; 164us; 16496us; 165us; 16496us; 166us; 16496us; 167us; 16496us; 168us; 16496us; 169us; 16496us; 170us; 16496us; 171us; 16496us; 172us; 16496us; 173us; 16496us; 174us; 16496us; 176us; 16496us; 177us; 16496us; 179us; 16496us; 180us; 16496us; 183us; 16496us; 188us; 16496us; 189us; 16496us; 190us; 16496us; 191us; 16496us; 192us; 114us; 0us; 16426us; 3us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 8us; 32768us; 35us; 1727us; 36us; 1730us; 37us; 1732us; 38us; 1735us; 107us; 1731us; 108us; 172us; 119us; 653us; 147us; 1736us; 18us; 16437us; 21us; 79us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 69us; 1722us; 72us; 199us; 77us; 1721us; 87us; 9us; 100us; 170us; 107us; 16496us; 108us; 16496us; 119us; 16496us; 147us; 16496us; 192us; 87us; 0us; 16427us; 0us; 16428us; 4us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 192us; 109us; 74us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 35us; 1727us; 36us; 1730us; 37us; 1732us; 38us; 1735us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 107us; 1731us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 119us; 653us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 135us; 670us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 147us; 1736us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 83us; 16446us; 21us; 94us; 23us; 16496us; 24us; 16496us; 28us; 16496us; 29us; 16496us; 30us; 16496us; 31us; 16496us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 39us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 44us; 16496us; 61us; 16496us; 69us; 133us; 70us; 16496us; 71us; 16496us; 72us; 199us; 73us; 16496us; 74us; 16496us; 85us; 16496us; 87us; 9us; 88us; 16496us; 89us; 16496us; 91us; 16496us; 97us; 16496us; 99us; 16496us; 100us; 664us; 105us; 16496us; 106us; 16496us; 107us; 16496us; 113us; 16496us; 114us; 16496us; 115us; 16496us; 117us; 16496us; 119us; 16496us; 120us; 16496us; 121us; 16496us; 122us; 16496us; 123us; 16496us; 124us; 16496us; 128us; 16496us; 131us; 16496us; 132us; 16496us; 134us; 16496us; 135us; 16496us; 143us; 16496us; 144us; 16496us; 145us; 16496us; 147us; 16496us; 151us; 16496us; 152us; 16496us; 155us; 16496us; 156us; 16496us; 159us; 16496us; 160us; 16496us; 161us; 16496us; 162us; 16496us; 163us; 16496us; 164us; 16496us; 165us; 16496us; 166us; 16496us; 167us; 16496us; 168us; 16496us; 169us; 16496us; 170us; 16496us; 171us; 16496us; 172us; 16496us; 173us; 16496us; 174us; 16496us; 176us; 16496us; 177us; 16496us; 179us; 16496us; 180us; 16496us; 183us; 16496us; 188us; 16496us; 189us; 16496us; 190us; 16496us; 191us; 16496us; 192us; 114us; 0us; 16429us; 0us; 16430us; 0us; 16431us; 15us; 16437us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 72us; 199us; 87us; 9us; 100us; 170us; 107us; 16496us; 108us; 16496us; 119us; 16496us; 147us; 16496us; 192us; 84us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 1us; 17357us; 20us; 1708us; 0us; 16432us; 0us; 16433us; 6us; 16436us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 0us; 16434us; 0us; 16435us; 3us; 16436us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 3us; 17340us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 15us; 16440us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 72us; 199us; 87us; 9us; 100us; 170us; 107us; 16496us; 108us; 16496us; 119us; 16496us; 147us; 16496us; 192us; 91us; 0us; 16438us; 3us; 32768us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 4us; 16496us; 72us; 199us; 87us; 9us; 100us; 170us; 192us; 91us; 0us; 16439us; 81us; 16446us; 23us; 16496us; 24us; 16496us; 28us; 16496us; 29us; 16496us; 30us; 16496us; 31us; 16496us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 39us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 44us; 16496us; 61us; 16496us; 70us; 16496us; 71us; 16496us; 72us; 199us; 73us; 16496us; 74us; 16496us; 85us; 16496us; 87us; 9us; 88us; 16496us; 89us; 16496us; 91us; 16496us; 97us; 16496us; 99us; 16496us; 100us; 664us; 105us; 16496us; 106us; 16496us; 107us; 16496us; 113us; 16496us; 114us; 16496us; 115us; 16496us; 117us; 16496us; 119us; 16496us; 120us; 16496us; 121us; 16496us; 122us; 16496us; 123us; 16496us; 124us; 16496us; 128us; 16496us; 131us; 16496us; 132us; 16496us; 134us; 16496us; 135us; 16496us; 143us; 16496us; 144us; 16496us; 145us; 16496us; 147us; 16496us; 151us; 16496us; 152us; 16496us; 155us; 16496us; 156us; 16496us; 159us; 16496us; 160us; 16496us; 161us; 16496us; 162us; 16496us; 163us; 16496us; 164us; 16496us; 165us; 16496us; 166us; 16496us; 167us; 16496us; 168us; 16496us; 169us; 16496us; 170us; 16496us; 171us; 16496us; 172us; 16496us; 173us; 16496us; 174us; 16496us; 176us; 16496us; 177us; 16496us; 179us; 16496us; 180us; 16496us; 183us; 16496us; 188us; 16496us; 189us; 16496us; 190us; 16496us; 191us; 16496us; 192us; 99us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 1us; 17357us; 20us; 1708us; 0us; 16441us; 0us; 16442us; 6us; 32768us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 0us; 16443us; 0us; 16444us; 0us; 16445us; 4us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 192us; 109us; 74us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 35us; 1727us; 36us; 1730us; 37us; 1732us; 38us; 1735us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 107us; 1731us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 119us; 653us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 135us; 670us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 147us; 1736us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 28us; 16449us; 20us; 1687us; 61us; 1088us; 62us; 1081us; 67us; 1686us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 83us; 1685us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 81us; 16448us; 23us; 16496us; 24us; 16496us; 28us; 16496us; 29us; 16496us; 30us; 16496us; 31us; 16496us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 39us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 44us; 16496us; 61us; 16496us; 70us; 16496us; 71us; 16496us; 72us; 199us; 73us; 16496us; 74us; 16496us; 85us; 16496us; 87us; 9us; 88us; 16496us; 89us; 16496us; 91us; 16496us; 97us; 16496us; 99us; 16496us; 100us; 664us; 105us; 16496us; 106us; 16496us; 107us; 16496us; 113us; 16496us; 114us; 16496us; 115us; 16496us; 117us; 16496us; 119us; 16496us; 120us; 16496us; 121us; 16496us; 122us; 16496us; 123us; 16496us; 124us; 16496us; 128us; 16496us; 131us; 16496us; 132us; 16496us; 134us; 16496us; 135us; 16496us; 143us; 16496us; 144us; 16496us; 145us; 16496us; 147us; 16496us; 151us; 16496us; 152us; 16496us; 155us; 16496us; 156us; 16496us; 159us; 16496us; 160us; 16496us; 161us; 16496us; 162us; 16496us; 163us; 16496us; 164us; 16496us; 165us; 16496us; 166us; 16496us; 167us; 16496us; 168us; 16496us; 169us; 16496us; 170us; 16496us; 171us; 16496us; 172us; 16496us; 173us; 16496us; 174us; 16496us; 176us; 16496us; 177us; 16496us; 179us; 16496us; 180us; 16496us; 183us; 16496us; 188us; 16496us; 189us; 16496us; 190us; 16496us; 191us; 16496us; 192us; 114us; 0us; 16447us; 0us; 16450us; 0us; 16451us; 21us; 16454us; 20us; 1687us; 31us; 16496us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 39us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 67us; 1686us; 72us; 199us; 83us; 1685us; 87us; 9us; 100us; 664us; 107us; 16496us; 119us; 16496us; 135us; 16496us; 147us; 16496us; 159us; 16496us; 192us; 114us; 0us; 16452us; 81us; 16455us; 23us; 16496us; 24us; 16496us; 28us; 16496us; 29us; 16496us; 30us; 16496us; 31us; 16496us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 39us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 44us; 16496us; 61us; 16496us; 70us; 16496us; 71us; 16496us; 72us; 199us; 73us; 16496us; 74us; 16496us; 85us; 16496us; 87us; 9us; 88us; 16496us; 89us; 16496us; 91us; 16496us; 97us; 16496us; 99us; 16496us; 100us; 664us; 105us; 16496us; 106us; 16496us; 107us; 16496us; 113us; 16496us; 114us; 16496us; 115us; 16496us; 117us; 16496us; 119us; 16496us; 120us; 16496us; 121us; 16496us; 122us; 16496us; 123us; 16496us; 124us; 16496us; 128us; 16496us; 131us; 16496us; 132us; 16496us; 134us; 16496us; 135us; 16496us; 143us; 16496us; 144us; 16496us; 145us; 16496us; 147us; 16496us; 151us; 16496us; 152us; 16496us; 155us; 16496us; 156us; 16496us; 159us; 16496us; 160us; 16496us; 161us; 16496us; 162us; 16496us; 163us; 16496us; 164us; 16496us; 165us; 16496us; 166us; 16496us; 167us; 16496us; 168us; 16496us; 169us; 16496us; 170us; 16496us; 171us; 16496us; 172us; 16496us; 173us; 16496us; 174us; 16496us; 176us; 16496us; 177us; 16496us; 179us; 16496us; 180us; 16496us; 183us; 16496us; 188us; 16496us; 189us; 16496us; 190us; 16496us; 191us; 16496us; 192us; 114us; 0us; 16453us; 3us; 32768us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 6us; 32768us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 4us; 32768us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 140us; 156us; 4us; 16496us; 72us; 199us; 87us; 9us; 100us; 664us; 192us; 114us; 0us; 16456us; 0us; 16457us; 0us; 16458us; 3us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 11us; 32768us; 31us; 672us; 35us; 1727us; 36us; 1730us; 37us; 1732us; 38us; 1735us; 39us; 685us; 107us; 1731us; 119us; 653us; 135us; 670us; 147us; 1736us; 159us; 666us; 0us; 16459us; 1us; 16459us; 125us; 928us; 0us; 16460us; 67us; 16460us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 933us; 0us; 16461us; 1us; 16496us; 72us; 199us; 1us; 16558us; 129us; 326us; 0us; 16462us; 0us; 16463us; 1us; 32768us; 69us; 133us; 5us; 32768us; 21us; 142us; 44us; 1629us; 54us; 1717us; 134us; 1718us; 188us; 1628us; 0us; 16464us; 2us; 16495us; 10us; 926us; 192us; 913us; 0us; 16465us; 0us; 16466us; 8us; 16496us; 44us; 1629us; 55us; 1719us; 72us; 199us; 87us; 9us; 100us; 170us; 134us; 1720us; 188us; 1628us; 192us; 91us; 4us; 32768us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 76us; 1631us; 0us; 16467us; 1us; 16468us; 76us; 1631us; 6us; 16496us; 54us; 1717us; 72us; 199us; 87us; 9us; 100us; 664us; 134us; 1718us; 192us; 115us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 0us; 16469us; 0us; 16470us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 1us; 16475us; 76us; 1631us; 81us; 16446us; 23us; 16496us; 24us; 16496us; 28us; 16496us; 29us; 16496us; 30us; 16496us; 31us; 16496us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 39us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 44us; 16496us; 61us; 16496us; 70us; 16496us; 71us; 16496us; 72us; 199us; 73us; 16496us; 74us; 16496us; 85us; 16496us; 87us; 9us; 88us; 16496us; 89us; 16496us; 91us; 16496us; 97us; 16496us; 99us; 16496us; 100us; 664us; 105us; 16496us; 106us; 16496us; 107us; 16496us; 113us; 16496us; 114us; 16496us; 115us; 16496us; 117us; 16496us; 119us; 16496us; 120us; 16496us; 121us; 16496us; 122us; 16496us; 123us; 16496us; 124us; 16496us; 128us; 16496us; 131us; 16496us; 132us; 16496us; 134us; 16496us; 135us; 16496us; 143us; 16496us; 144us; 16496us; 145us; 16496us; 147us; 16496us; 151us; 16496us; 152us; 16496us; 155us; 16496us; 156us; 16496us; 159us; 16496us; 160us; 16496us; 161us; 16496us; 162us; 16496us; 163us; 16496us; 164us; 16496us; 165us; 16496us; 166us; 16496us; 167us; 16496us; 168us; 16496us; 169us; 16496us; 170us; 16496us; 171us; 16496us; 172us; 16496us; 173us; 16496us; 174us; 16496us; 176us; 16496us; 177us; 16496us; 179us; 16496us; 180us; 16496us; 183us; 16496us; 188us; 16496us; 189us; 16496us; 190us; 16496us; 191us; 16496us; 192us; 116us; 3us; 32768us; 10us; 926us; 140us; 154us; 192us; 913us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 6us; 16496us; 18us; 16580us; 19us; 16580us; 21us; 366us; 72us; 199us; 140us; 16580us; 192us; 372us; 3us; 32768us; 18us; 1700us; 19us; 1701us; 140us; 1702us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 3us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 8us; 32768us; 35us; 1727us; 36us; 1730us; 37us; 1732us; 38us; 1735us; 107us; 1731us; 108us; 172us; 119us; 653us; 147us; 1736us; 2us; 32768us; 69us; 1722us; 77us; 1721us; 5us; 32768us; 21us; 138us; 44us; 1629us; 55us; 1719us; 134us; 1720us; 188us; 1628us; 0us; 16483us; 0us; 16484us; 0us; 16485us; 0us; 16486us; 2us; 32768us; 44us; 1629us; 188us; 1628us; 1us; 16487us; 76us; 1631us; 1us; 16496us; 72us; 199us; 1us; 17365us; 109us; 1711us; 1us; 17367us; 116us; 1712us; 3us; 16610us; 41us; 459us; 42us; 458us; 43us; 460us; 3us; 32768us; 91us; 1634us; 99us; 1639us; 188us; 1628us; 2us; 16672us; 32us; 1726us; 157us; 17383us; 1us; 32768us; 77us; 179us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 72us; 199us; 74us; 1470us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 16489us; 69us; 182us; 0us; 16488us; 67us; 32768us; 21us; 184us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 25us; 16490us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 28us; 32768us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 0us; 16491us; 3us; 32768us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 0us; 16492us; 15us; 16437us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 72us; 199us; 87us; 9us; 100us; 170us; 107us; 16496us; 108us; 16496us; 119us; 16496us; 147us; 16496us; 192us; 87us; 1us; 32768us; 140us; 191us; 3us; 32768us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 0us; 16493us; 15us; 16437us; 35us; 16496us; 36us; 16496us; 37us; 16496us; 38us; 16496us; 41us; 16496us; 42us; 16496us; 43us; 16496us; 72us; 199us; 87us; 9us; 100us; 170us; 107us; 16496us; 108us; 16496us; 119us; 16496us; 147us; 16496us; 192us; 87us; 1us; 32768us; 140us; 195us; 0us; 16494us; 0us; 16495us; 1us; 16497us; 72us; 199us; 0us; 16498us; 14us; 32768us; 10us; 926us; 15us; 1758us; 35us; 1728us; 36us; 1730us; 37us; 1733us; 38us; 1735us; 44us; 1629us; 59us; 1756us; 93us; 1757us; 107us; 1731us; 147us; 1736us; 160us; 230us; 188us; 1628us; 192us; 204us; 2us; 17359us; 20us; 1696us; 83us; 1697us; 8us; 32768us; 10us; 926us; 15us; 1758us; 35us; 1754us; 37us; 1755us; 53us; 202us; 59us; 1756us; 93us; 1757us; 192us; 913us; 1us; 17357us; 20us; 1708us; 0us; 16499us; 1us; 16873us; 53us; 205us; 1us; 17357us; 20us; 1708us; 0us; 16500us; 0us; 16501us; 0us; 16502us; 0us; 16503us; 9us; 17358us; 35us; 1727us; 36us; 1730us; 37us; 1732us; 38us; 1735us; 44us; 1629us; 107us; 1731us; 147us; 1736us; 160us; 230us; 188us; 1628us; 0us; 16504us; 3us; 17381us; 33us; 1725us; 34us; 1724us; 76us; 1631us; 26us; 17115us; 71us; 1279us; 73us; 1313us; 91us; 1285us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16505us; 3us; 32768us; 21us; 219us; 44us; 1629us; 188us; 1628us; 3us; 17381us; 33us; 1725us; 34us; 1724us; 76us; 1631us; 26us; 17115us; 71us; 1279us; 73us; 1313us; 91us; 1285us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16506us; 2us; 32768us; 44us; 1629us; 188us; 1628us; 4us; 32768us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 76us; 1631us; 2us; 17381us; 33us; 1725us; 34us; 1724us; 26us; 17115us; 71us; 1279us; 73us; 1313us; 91us; 1285us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16507us; 1us; 32768us; 77us; 225us; 0us; 16508us; 1us; 32768us; 77us; 227us; 0us; 16509us; 1us; 17284us; 77us; 229us; 0us; 16510us; 1us; 32768us; 77us; 231us; 0us; 16511us; 1us; 16496us; 72us; 199us; 0us; 16512us; 1us; 16514us; 129us; 235us; 1us; 16496us; 72us; 199us; 0us; 16513us; 2us; 16622us; 69us; 238us; 86us; 468us; 7us; 16496us; 21us; 241us; 47us; 527us; 54us; 529us; 72us; 199us; 110us; 528us; 134us; 266us; 149us; 252us; 0us; 16515us; 0us; 16516us; 12us; 16496us; 10us; 16534us; 14us; 16534us; 15us; 16534us; 16us; 16534us; 21us; 262us; 47us; 527us; 54us; 529us; 72us; 199us; 110us; 528us; 134us; 266us; 149us; 252us; 192us; 16534us; 1us; 17357us; 20us; 1708us; 5us; 16496us; 14us; 16534us; 15us; 16534us; 16us; 16534us; 72us; 199us; 86us; 16534us; 1us; 16622us; 86us; 468us; 3us; 32768us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 1us; 16622us; 86us; 468us; 0us; 16517us; 1us; 16622us; 86us; 468us; 0us; 16518us; 0us; 16519us; 0us; 16520us; 1us; 32768us; 118us; 253us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 72us; 199us; 74us; 1470us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16521us; 0us; 16522us; 5us; 16496us; 10us; 16534us; 21us; 270us; 72us; 199us; 140us; 16534us; 192us; 260us; 3us; 32768us; 10us; 926us; 140us; 258us; 192us; 913us; 0us; 16523us; 0us; 16524us; 1us; 32768us; 140us; 261us; 0us; 16525us; 6us; 16496us; 10us; 16534us; 14us; 16534us; 15us; 16534us; 16us; 16534us; 72us; 199us; 192us; 16534us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 0us; 16526us; 0us; 16527us; 5us; 16496us; 10us; 16534us; 21us; 270us; 72us; 199us; 140us; 16534us; 192us; 16534us; 3us; 32768us; 10us; 926us; 140us; 268us; 192us; 913us; 0us; 16528us; 0us; 16529us; 6us; 16496us; 10us; 16534us; 14us; 16534us; 15us; 16534us; 16us; 16534us; 72us; 199us; 192us; 16534us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 0us; 16530us; 0us; 16531us; 0us; 16532us; 0us; 16533us; 2us; 17359us; 20us; 1696us; 83us; 1697us; 10us; 16496us; 10us; 16534us; 14us; 16534us; 15us; 16534us; 16us; 16534us; 18us; 16534us; 19us; 16534us; 72us; 199us; 86us; 16534us; 140us; 16534us; 192us; 16534us; 0us; 16535us; 5us; 32768us; 35us; 1727us; 36us; 1730us; 46us; 281us; 107us; 1731us; 108us; 316us; 10us; 32768us; 29us; 676us; 31us; 672us; 35us; 1727us; 36us; 1730us; 39us; 685us; 46us; 281us; 107us; 1731us; 108us; 435us; 135us; 670us; 159us; 666us; 0us; 16536us; 0us; 16537us; 0us; 16538us; 0us; 16539us; 0us; 16540us; 1us; 16541us; 46us; 287us; 0us; 16542us; 3us; 32768us; 91us; 1634us; 99us; 1639us; 188us; 1628us; 0us; 16544us; 3us; 32768us; 91us; 1634us; 99us; 1639us; 188us; 1628us; 2us; 32768us; 19us; 292us; 192us; 293us; 0us; 16545us; 0us; 16546us; 1us; 16547us; 96us; 295us; 3us; 32768us; 91us; 1634us; 99us; 1639us; 188us; 1628us; 0us; 16548us; 3us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 3us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 10us; 32768us; 13us; 531us; 45us; 279us; 46us; 282us; 48us; 286us; 49us; 283us; 50us; 284us; 52us; 312us; 108us; 314us; 110us; 530us; 117us; 320us; 42us; 32768us; 13us; 531us; 44us; 1629us; 45us; 279us; 46us; 282us; 48us; 286us; 49us; 283us; 50us; 284us; 52us; 312us; 56us; 602us; 66us; 1523us; 73us; 518us; 87us; 1555us; 90us; 1622us; 91us; 515us; 105us; 1568us; 108us; 314us; 110us; 530us; 112us; 1566us; 117us; 320us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 17365us; 109us; 1711us; 3us; 16610us; 41us; 459us; 42us; 458us; 43us; 460us; 3us; 32768us; 91us; 1634us; 99us; 1639us; 188us; 1628us; 2us; 16672us; 32us; 1726us; 157us; 17383us; 1us; 32768us; 77us; 306us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 72us; 199us; 74us; 1470us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 2us; 16543us; 25us; 290us; 86us; 288us; 1us; 16489us; 69us; 182us; 0us; 16549us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 6us; 16550us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 6us; 16551us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 1us; 17367us; 116us; 1712us; 0us; 16552us; 1us; 17367us; 116us; 1712us; 0us; 16553us; 1us; 16496us; 72us; 199us; 0us; 16554us; 1us; 32768us; 77us; 321us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 72us; 199us; 74us; 1470us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16555us; 3us; 16610us; 41us; 459us; 42us; 458us; 43us; 460us; 1us; 16675us; 84us; 561us; 0us; 16556us; 1us; 16496us; 72us; 199us; 1us; 16558us; 129us; 326us; 0us; 16557us; 40us; 16496us; 10us; 16559us; 13us; 16559us; 14us; 16559us; 15us; 16559us; 16us; 16559us; 18us; 16559us; 19us; 16559us; 20us; 16559us; 29us; 16559us; 31us; 16559us; 35us; 16559us; 36us; 16559us; 37us; 16559us; 38us; 16559us; 39us; 16559us; 45us; 16559us; 46us; 16559us; 48us; 16559us; 49us; 16559us; 50us; 16559us; 52us; 16559us; 67us; 16559us; 69us; 330us; 72us; 199us; 83us; 16559us; 86us; 157us; 87us; 16559us; 100us; 16559us; 107us; 16559us; 108us; 16559us; 110us; 16559us; 117us; 16559us; 119us; 16559us; 129us; 16559us; 135us; 16559us; 140us; 16559us; 147us; 16559us; 148us; 16559us; 159us; 16559us; 192us; 16559us; 6us; 16496us; 21us; 340us; 47us; 527us; 54us; 529us; 72us; 199us; 110us; 528us; 149us; 352us; 0us; 16560us; 0us; 16561us; 3us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 2us; 17381us; 33us; 1725us; 34us; 1724us; 1us; 32768us; 91us; 780us; 1us; 16627us; 130us; 479us; 1us; 32768us; 69us; 338us; 6us; 16496us; 21us; 340us; 47us; 527us; 54us; 529us; 72us; 199us; 110us; 528us; 149us; 352us; 0us; 16562us; 11us; 16496us; 10us; 16580us; 14us; 16580us; 15us; 16580us; 16us; 16580us; 21us; 362us; 47us; 527us; 54us; 529us; 72us; 199us; 110us; 528us; 149us; 352us; 192us; 372us; 1us; 17357us; 20us; 1708us; 7us; 16496us; 10us; 16580us; 14us; 16580us; 15us; 16580us; 16us; 16580us; 72us; 199us; 86us; 16580us; 192us; 372us; 1us; 16620us; 86us; 465us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 1us; 16620us; 86us; 465us; 0us; 16563us; 0us; 16564us; 1us; 16620us; 86us; 465us; 0us; 16565us; 0us; 16566us; 0us; 16567us; 1us; 32768us; 118us; 353us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 72us; 199us; 74us; 1470us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16568us; 0us; 16569us; 5us; 16496us; 10us; 16580us; 21us; 366us; 72us; 199us; 140us; 16580us; 192us; 360us; 3us; 32768us; 10us; 926us; 140us; 358us; 192us; 913us; 0us; 16570us; 0us; 16571us; 4us; 16496us; 10us; 16580us; 72us; 199us; 140us; 361us; 192us; 372us; 0us; 16572us; 6us; 16496us; 10us; 16580us; 14us; 16580us; 15us; 16580us; 16us; 16580us; 72us; 199us; 192us; 372us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 0us; 16573us; 0us; 16574us; 6us; 16496us; 10us; 16580us; 14us; 16580us; 15us; 16580us; 16us; 16580us; 72us; 199us; 192us; 372us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 0us; 16575us; 0us; 16576us; 0us; 16577us; 0us; 16578us; 10us; 16496us; 10us; 16580us; 14us; 16580us; 15us; 16580us; 16us; 16580us; 18us; 16580us; 19us; 16580us; 72us; 199us; 86us; 16580us; 140us; 16580us; 192us; 372us; 0us; 16579us; 2us; 17359us; 20us; 1696us; 83us; 1697us; 10us; 16496us; 10us; 16580us; 14us; 16580us; 15us; 16580us; 16us; 16580us; 18us; 16580us; 19us; 16580us; 72us; 199us; 86us; 16580us; 140us; 16580us; 192us; 372us; 0us; 16581us; 1us; 17365us; 109us; 1711us; 0us; 16582us; 1us; 17365us; 109us; 1711us; 2us; 32768us; 19us; 381us; 192us; 382us; 0us; 16583us; 0us; 16584us; 1us; 16585us; 129us; 384us; 1us; 17365us; 109us; 1711us; 0us; 16586us; 1us; 16496us; 72us; 199us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 17177us; 77us; 1448us; 1us; 32768us; 69us; 390us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16587us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 17177us; 77us; 1448us; 3us; 32768us; 25us; 379us; 69us; 395us; 86us; 377us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16588us; 0us; 16589us; 1us; 16590us; 46us; 399us; 0us; 16591us; 3us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 3us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 15us; 32768us; 13us; 531us; 29us; 676us; 31us; 672us; 39us; 685us; 45us; 280us; 46us; 282us; 48us; 398us; 49us; 283us; 50us; 284us; 52us; 471us; 108us; 435us; 110us; 530us; 117us; 427us; 135us; 670us; 159us; 666us; 47us; 32768us; 13us; 531us; 29us; 676us; 31us; 672us; 39us; 685us; 44us; 1629us; 45us; 280us; 46us; 282us; 48us; 398us; 49us; 283us; 50us; 284us; 52us; 471us; 56us; 602us; 66us; 1523us; 73us; 518us; 87us; 1555us; 90us; 1622us; 91us; 515us; 105us; 1568us; 108us; 435us; 110us; 530us; 112us; 1566us; 117us; 427us; 120us; 1567us; 135us; 670us; 145us; 1565us; 159us; 666us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16592us; 0us; 16593us; 2us; 17365us; 108us; 441us; 109us; 1711us; 1us; 17353us; 18us; 1706us; 0us; 16594us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 7us; 16618us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 86us; 462us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 0us; 16595us; 1us; 17365us; 109us; 1711us; 3us; 32768us; 91us; 1634us; 99us; 1639us; 188us; 1628us; 2us; 16672us; 32us; 1726us; 157us; 17383us; 1us; 32768us; 77us; 416us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 72us; 199us; 74us; 1470us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 2us; 16543us; 25us; 290us; 86us; 288us; 1us; 17353us; 18us; 1706us; 0us; 16596us; 0us; 16597us; 1us; 17353us; 18us; 1706us; 0us; 16598us; 1us; 17353us; 18us; 1706us; 0us; 16599us; 1us; 17353us; 18us; 1706us; 0us; 16600us; 34us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 16627us; 130us; 479us; 1us; 32768us; 69us; 430us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 17353us; 18us; 1706us; 0us; 16601us; 1us; 16496us; 72us; 199us; 0us; 16602us; 1us; 17367us; 116us; 1712us; 3us; 16610us; 41us; 459us; 42us; 458us; 43us; 460us; 1us; 32768us; 188us; 1628us; 1us; 32768us; 77us; 439us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16603us; 1us; 17367us; 116us; 1712us; 3us; 16610us; 41us; 459us; 42us; 458us; 43us; 460us; 1us; 32768us; 188us; 1628us; 1us; 16605us; 77us; 449us; 1us; 32768us; 69us; 446us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 2us; 16543us; 25us; 290us; 86us; 288us; 0us; 16604us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16606us; 1us; 32768us; 76us; 452us; 3us; 32768us; 91us; 1634us; 99us; 1639us; 188us; 1628us; 0us; 16607us; 0us; 16608us; 3us; 32768us; 91us; 1634us; 99us; 1639us; 188us; 1628us; 0us; 16609us; 0us; 16611us; 0us; 16612us; 0us; 16613us; 0us; 16614us; 0us; 16615us; 2us; 16496us; 21us; 485us; 72us; 199us; 3us; 32768us; 18us; 1700us; 19us; 1701us; 140us; 1702us; 0us; 16617us; 6us; 16496us; 18us; 16580us; 19us; 16580us; 21us; 366us; 72us; 199us; 140us; 16580us; 192us; 372us; 3us; 32768us; 18us; 1700us; 19us; 1701us; 140us; 1702us; 0us; 16619us; 5us; 16496us; 18us; 16534us; 19us; 16534us; 21us; 270us; 72us; 199us; 140us; 16534us; 3us; 32768us; 18us; 1700us; 19us; 1701us; 140us; 1702us; 0us; 16621us; 36us; 32768us; 10us; 926us; 15us; 1758us; 35us; 1754us; 37us; 1755us; 44us; 1629us; 59us; 1756us; 66us; 1522us; 87us; 1555us; 90us; 1622us; 91us; 1509us; 93us; 1757us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 913us; 29us; 16630us; 33us; 1725us; 34us; 1724us; 71us; 17381us; 73us; 17381us; 91us; 17381us; 105us; 17381us; 120us; 17381us; 130us; 482us; 134us; 17381us; 145us; 17381us; 152us; 17381us; 162us; 17381us; 163us; 17381us; 164us; 17381us; 165us; 17381us; 166us; 17381us; 167us; 17381us; 168us; 17381us; 169us; 17381us; 170us; 17381us; 171us; 17381us; 172us; 17381us; 173us; 17381us; 174us; 17381us; 176us; 17381us; 177us; 17381us; 189us; 17381us; 190us; 17381us; 191us; 17381us; 0us; 16623us; 26us; 32768us; 71us; 1279us; 73us; 1313us; 91us; 1285us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 16630us; 130us; 482us; 0us; 16624us; 0us; 16625us; 0us; 16626us; 1us; 32768us; 188us; 1628us; 0us; 16628us; 0us; 16629us; 2us; 32768us; 151us; 484us; 188us; 1628us; 0us; 16631us; 0us; 16632us; 1us; 16496us; 72us; 199us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 0us; 16633us; 0us; 16634us; 0us; 16635us; 2us; 17359us; 20us; 1696us; 83us; 1697us; 14us; 16496us; 10us; 16637us; 13us; 16637us; 14us; 16637us; 15us; 16637us; 16us; 16637us; 18us; 16637us; 19us; 16637us; 20us; 16637us; 58us; 16637us; 59us; 16637us; 60us; 16637us; 72us; 199us; 110us; 16637us; 140us; 16637us; 0us; 16636us; 3us; 32768us; 46us; 504us; 49us; 505us; 192us; 501us; 4us; 17365us; 46us; 504us; 49us; 505us; 109us; 1711us; 192us; 501us; 3us; 17365us; 108us; 441us; 109us; 1711us; 192us; 500us; 1us; 17353us; 18us; 1706us; 0us; 16638us; 1us; 17353us; 18us; 1706us; 0us; 16639us; 0us; 16640us; 1us; 17365us; 109us; 1711us; 1us; 17353us; 18us; 1706us; 0us; 16641us; 0us; 16642us; 0us; 16643us; 3us; 16616us; 41us; 459us; 42us; 458us; 43us; 460us; 32us; 32768us; 44us; 1629us; 56us; 602us; 66us; 1523us; 73us; 518us; 87us; 1555us; 90us; 1622us; 91us; 515us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 2us; 17202us; 76us; 1631us; 152us; 509us; 1us; 32768us; 190us; 510us; 2us; 32768us; 10us; 926us; 192us; 913us; 0us; 16644us; 0us; 16645us; 0us; 16646us; 0us; 16647us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 524us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1569us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 16648us; 2us; 16496us; 72us; 199us; 192us; 522us; 5us; 32768us; 10us; 926us; 58us; 1740us; 59us; 1737us; 60us; 1739us; 192us; 913us; 0us; 16649us; 0us; 16650us; 3us; 32768us; 58us; 1740us; 59us; 1737us; 60us; 1739us; 0us; 16651us; 29us; 32768us; 44us; 1629us; 66us; 1558us; 87us; 1555us; 90us; 1622us; 91us; 1559us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 16785us; 87us; 1723us; 0us; 16652us; 0us; 16653us; 0us; 16654us; 0us; 16655us; 0us; 16656us; 0us; 16657us; 5us; 32768us; 44us; 1629us; 90us; 1622us; 91us; 538us; 185us; 1625us; 188us; 1628us; 3us; 16658us; 32us; 1726us; 76us; 1631us; 157us; 17383us; 2us; 32768us; 44us; 1629us; 188us; 1628us; 1us; 16659us; 76us; 1631us; 0us; 16660us; 0us; 16661us; 1us; 16496us; 72us; 199us; 4us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 96us; 543us; 0us; 16662us; 2us; 16675us; 84us; 561us; 96us; 543us; 1us; 16668us; 96us; 544us; 1us; 16496us; 72us; 199us; 2us; 16496us; 72us; 199us; 141us; 553us; 0us; 16663us; 0us; 16664us; 2us; 32768us; 90us; 1622us; 185us; 1625us; 0us; 16665us; 1us; 32768us; 157us; 550us; 1us; 16496us; 72us; 199us; 1us; 32768us; 158us; 552us; 0us; 16666us; 0us; 16667us; 1us; 32768us; 157us; 555us; 3us; 16496us; 72us; 199us; 84us; 16669us; 158us; 16669us; 1us; 16675us; 84us; 561us; 1us; 32768us; 158us; 558us; 0us; 16670us; 0us; 16671us; 27us; 16673us; 10us; 16811us; 15us; 16811us; 20us; 16811us; 25us; 16811us; 35us; 16811us; 37us; 16811us; 56us; 16811us; 57us; 16811us; 58us; 16811us; 59us; 16811us; 60us; 16811us; 64us; 16811us; 69us; 16811us; 77us; 16811us; 78us; 16811us; 83us; 16811us; 84us; 16811us; 86us; 16811us; 88us; 16811us; 92us; 16811us; 93us; 16811us; 94us; 16811us; 96us; 16811us; 97us; 16811us; 125us; 16811us; 130us; 16811us; 192us; 16811us; 4us; 32768us; 50us; 568us; 90us; 1622us; 91us; 583us; 185us; 1625us; 1us; 16676us; 129us; 565us; 1us; 17174us; 129us; 565us; 1us; 17176us; 129us; 565us; 4us; 32768us; 50us; 568us; 90us; 1622us; 91us; 583us; 185us; 1625us; 0us; 16677us; 0us; 16678us; 2us; 32768us; 90us; 1622us; 185us; 1625us; 1us; 32768us; 77us; 570us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16679us; 2us; 32768us; 77us; 575us; 79us; 573us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16680us; 5us; 32768us; 54us; 576us; 91us; 580us; 145us; 579us; 149us; 590us; 188us; 577us; 0us; 16681us; 3us; 16688us; 32us; 1578us; 54us; 578us; 157us; 1580us; 0us; 16682us; 0us; 16683us; 1us; 16496us; 72us; 199us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 16684us; 2us; 32768us; 90us; 1622us; 185us; 1625us; 4us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 101us; 593us; 1us; 32768us; 77us; 586us; 1us; 32768us; 91us; 587us; 1us; 16496us; 72us; 199us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 16685us; 2us; 32768us; 32us; 1578us; 157us; 1580us; 0us; 16686us; 0us; 16687us; 2us; 32768us; 90us; 1622us; 185us; 1625us; 0us; 16689us; 0us; 16690us; 1us; 16496us; 72us; 199us; 0us; 16691us; 1us; 32768us; 56us; 602us; 1us; 16496us; 72us; 199us; 0us; 16692us; 2us; 16693us; 20us; 1708us; 56us; 17357us; 0us; 16694us; 1us; 16696us; 56us; 602us; 1us; 16496us; 72us; 199us; 0us; 16695us; 3us; 16610us; 41us; 459us; 42us; 458us; 43us; 460us; 3us; 32768us; 91us; 620us; 99us; 1639us; 188us; 1628us; 4us; 17357us; 20us; 1708us; 69us; 616us; 77us; 613us; 118us; 610us; 0us; 16697us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 73us; 518us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 17357us; 20us; 1708us; 0us; 16698us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 72us; 199us; 74us; 1470us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 17357us; 20us; 1708us; 0us; 16699us; 18us; 32768us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 17357us; 20us; 1708us; 0us; 16700us; 0us; 16701us; 29us; 32768us; 56us; 1674us; 61us; 1656us; 62us; 1654us; 69us; 1658us; 70us; 623us; 74us; 1662us; 78us; 621us; 82us; 1666us; 88us; 1663us; 89us; 1664us; 95us; 1657us; 101us; 1659us; 141us; 1669us; 142us; 1665us; 152us; 1671us; 155us; 1668us; 157us; 1660us; 158us; 1661us; 178us; 1667us; 179us; 1655us; 180us; 1652us; 181us; 1651us; 182us; 1653us; 183us; 1646us; 184us; 1650us; 185us; 1649us; 186us; 1648us; 187us; 1647us; 192us; 1637us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 16702us; 1us; 32768us; 57us; 624us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 16703us; 4us; 17284us; 20us; 1708us; 56us; 17357us; 69us; 628us; 118us; 632us; 0us; 16704us; 18us; 32768us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 17357us; 20us; 1708us; 45us; 16705us; 10us; 16708us; 13us; 16708us; 14us; 16708us; 15us; 16708us; 16us; 16708us; 18us; 16708us; 19us; 16708us; 20us; 16708us; 29us; 16708us; 31us; 16708us; 35us; 16708us; 36us; 16708us; 37us; 16708us; 38us; 16708us; 39us; 16708us; 41us; 16708us; 42us; 16708us; 43us; 16708us; 45us; 16708us; 46us; 16708us; 48us; 16708us; 49us; 16708us; 50us; 16708us; 52us; 16708us; 67us; 16708us; 72us; 16708us; 83us; 16708us; 86us; 16708us; 87us; 16708us; 92us; 16708us; 93us; 16708us; 94us; 16708us; 100us; 16708us; 107us; 16708us; 108us; 16708us; 110us; 16708us; 117us; 16708us; 119us; 16708us; 129us; 16708us; 135us; 16708us; 140us; 16708us; 147us; 16708us; 148us; 16708us; 159us; 16708us; 192us; 16708us; 0us; 16706us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 73us; 518us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16707us; 0us; 16709us; 7us; 16711us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 90us; 1622us; 95us; 636us; 185us; 1625us; 188us; 1628us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16710us; 2us; 17359us; 20us; 1696us; 83us; 1697us; 6us; 16496us; 10us; 17358us; 58us; 17358us; 59us; 17358us; 60us; 17358us; 72us; 199us; 192us; 17358us; 0us; 16712us; 0us; 16713us; 1us; 17367us; 116us; 1712us; 0us; 16714us; 3us; 16610us; 41us; 459us; 42us; 458us; 43us; 460us; 1us; 32768us; 188us; 1628us; 1us; 32768us; 77us; 647us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16715us; 1us; 16620us; 86us; 465us; 0us; 16716us; 1us; 16622us; 86us; 468us; 0us; 16717us; 0us; 16718us; 1us; 16496us; 72us; 199us; 3us; 16610us; 41us; 459us; 42us; 458us; 43us; 460us; 1us; 32768us; 188us; 1628us; 1us; 16722us; 69us; 662us; 0us; 16719us; 1us; 16720us; 118us; 660us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 73us; 518us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16721us; 2us; 32768us; 44us; 1629us; 188us; 1628us; 1us; 16723us; 76us; 1631us; 2us; 32768us; 44us; 1629us; 188us; 1628us; 1us; 16724us; 76us; 1631us; 1us; 17361us; 102us; 1710us; 2us; 16496us; 72us; 199us; 192us; 720us; 0us; 16725us; 0us; 16726us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16727us; 1us; 17361us; 102us; 1710us; 2us; 16496us; 72us; 199us; 192us; 720us; 3us; 32768us; 10us; 926us; 18us; 683us; 192us; 913us; 0us; 16728us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 3us; 32768us; 10us; 926us; 18us; 683us; 192us; 913us; 0us; 16729us; 0us; 16730us; 0us; 16731us; 0us; 16732us; 0us; 16733us; 0us; 16734us; 0us; 16735us; 1us; 16496us; 72us; 199us; 3us; 16610us; 41us; 459us; 42us; 458us; 43us; 460us; 1us; 32768us; 188us; 1628us; 2us; 17381us; 33us; 1725us; 34us; 1724us; 1us; 32768us; 91us; 690us; 4us; 16496us; 72us; 199us; 92us; 16739us; 93us; 16739us; 94us; 16739us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 16736us; 1us; 16737us; 96us; 695us; 1us; 16738us; 96us; 697us; 1us; 16496us; 72us; 199us; 0us; 16740us; 1us; 16496us; 72us; 199us; 0us; 16741us; 3us; 32768us; 40us; 709us; 44us; 1629us; 188us; 1628us; 6us; 16742us; 33us; 1725us; 34us; 1724us; 70us; 17381us; 88us; 708us; 95us; 707us; 188us; 1628us; 0us; 16743us; 1us; 16744us; 76us; 1631us; 5us; 16749us; 33us; 1725us; 34us; 1724us; 70us; 17381us; 88us; 708us; 95us; 707us; 1us; 32768us; 70us; 705us; 1us; 32768us; 57us; 706us; 0us; 16745us; 0us; 16746us; 0us; 16747us; 1us; 32768us; 95us; 711us; 1us; 16750us; 95us; 711us; 0us; 16748us; 3us; 32768us; 40us; 710us; 44us; 1629us; 188us; 1628us; 1us; 16753us; 129us; 715us; 0us; 16751us; 2us; 16496us; 72us; 199us; 192us; 720us; 1us; 16753us; 129us; 715us; 0us; 16752us; 1us; 17365us; 109us; 1711us; 0us; 16754us; 0us; 16755us; 1us; 17367us; 116us; 1712us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 17177us; 77us; 1448us; 3us; 32768us; 10us; 926us; 69us; 725us; 192us; 913us; 68us; 32768us; 21us; 729us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 727us; 0us; 16756us; 0us; 16757us; 0us; 16758us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 0us; 16759us; 0us; 16760us; 0us; 16761us; 0us; 16764us; 1us; 16762us; 84us; 737us; 0us; 16763us; 2us; 32768us; 90us; 1622us; 185us; 1625us; 2us; 32768us; 69us; 739us; 129us; 741us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16765us; 2us; 32768us; 90us; 1622us; 185us; 1625us; 0us; 16766us; 0us; 16767us; 2us; 32768us; 54us; 747us; 77us; 745us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16768us; 0us; 16769us; 0us; 16770us; 0us; 16771us; 0us; 16772us; 0us; 16773us; 0us; 16774us; 0us; 16775us; 0us; 16776us; 0us; 16777us; 0us; 16778us; 0us; 16779us; 0us; 16780us; 0us; 16781us; 0us; 16782us; 1us; 16782us; 141us; 824us; 0us; 16783us; 0us; 16784us; 0us; 16785us; 0us; 16786us; 1us; 16787us; 32us; 767us; 1us; 32768us; 157us; 1597us; 0us; 16788us; 5us; 16789us; 56us; 798us; 78us; 799us; 88us; 806us; 96us; 804us; 130us; 796us; 0us; 16790us; 1us; 32768us; 188us; 1628us; 0us; 16791us; 1us; 16793us; 77us; 775us; 2us; 16794us; 77us; 775us; 96us; 778us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16792us; 3us; 32768us; 72us; 199us; 74us; 771us; 188us; 1628us; 3us; 32768us; 72us; 199us; 74us; 771us; 188us; 1628us; 0us; 16795us; 8us; 32768us; 10us; 926us; 72us; 199us; 74us; 771us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 188us; 1628us; 192us; 785us; 5us; 32768us; 10us; 926us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 192us; 913us; 0us; 16796us; 0us; 16797us; 0us; 16798us; 3us; 16873us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 16799us; 0us; 16800us; 3us; 16802us; 78us; 799us; 88us; 806us; 96us; 804us; 1us; 16803us; 78us; 799us; 2us; 16807us; 78us; 799us; 88us; 806us; 2us; 16808us; 78us; 799us; 88us; 806us; 1us; 16809us; 78us; 799us; 1us; 16810us; 78us; 799us; 6us; 32768us; 56us; 798us; 69us; 1002us; 78us; 799us; 88us; 806us; 96us; 804us; 130us; 796us; 6us; 32768us; 56us; 798us; 69us; 1008us; 78us; 799us; 88us; 806us; 96us; 804us; 130us; 796us; 1us; 32768us; 188us; 1628us; 0us; 16801us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 16804us; 96us; 803us; 0us; 16805us; 0us; 16806us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 29us; 16674us; 10us; 16828us; 15us; 16828us; 20us; 16828us; 25us; 16828us; 32us; 1726us; 35us; 16828us; 37us; 16828us; 56us; 16828us; 57us; 16828us; 58us; 16828us; 59us; 16828us; 60us; 16828us; 64us; 16828us; 69us; 16828us; 77us; 16828us; 78us; 16828us; 83us; 16828us; 84us; 16828us; 86us; 16828us; 88us; 16828us; 92us; 16828us; 93us; 16828us; 94us; 16828us; 96us; 16828us; 97us; 16828us; 125us; 16828us; 130us; 16828us; 157us; 17383us; 192us; 16828us; 36us; 32768us; 33us; 810us; 34us; 812us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16812us; 34us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16813us; 34us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16814us; 29us; 32768us; 44us; 1629us; 66us; 1558us; 87us; 1555us; 90us; 1622us; 91us; 1559us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 16815us; 76us; 1572us; 0us; 16816us; 36us; 16820us; 33us; 821us; 34us; 819us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16817us; 34us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16818us; 34us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16819us; 0us; 16821us; 1us; 32768us; 164us; 825us; 0us; 16822us; 2us; 32768us; 44us; 1629us; 188us; 1628us; 3us; 32768us; 58us; 1740us; 59us; 1737us; 60us; 1739us; 0us; 16823us; 36us; 16855us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 32768us; 57us; 831us; 0us; 16824us; 36us; 16855us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 32768us; 64us; 834us; 0us; 16825us; 0us; 16826us; 1us; 32768us; 188us; 1628us; 1us; 17308us; 188us; 1628us; 0us; 16827us; 0us; 16828us; 0us; 16829us; 0us; 16830us; 0us; 16831us; 0us; 16832us; 62us; 16838us; 10us; 926us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 56us; 1674us; 61us; 1656us; 62us; 1654us; 66us; 835us; 69us; 1658us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 837us; 81us; 814us; 82us; 1666us; 88us; 1663us; 89us; 1664us; 91us; 844us; 95us; 1657us; 99us; 1639us; 101us; 1659us; 105us; 842us; 120us; 841us; 141us; 1669us; 142us; 1665us; 145us; 843us; 152us; 1273us; 155us; 1668us; 157us; 1660us; 158us; 1661us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 178us; 1667us; 179us; 1655us; 180us; 1652us; 181us; 1651us; 182us; 1653us; 183us; 1646us; 184us; 1650us; 185us; 1649us; 186us; 1648us; 187us; 1647us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 848us; 5us; 32768us; 10us; 926us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 192us; 913us; 0us; 16833us; 0us; 16834us; 3us; 16873us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 2us; 16835us; 32us; 17288us; 157us; 17288us; 0us; 16836us; 6us; 16837us; 56us; 865us; 77us; 868us; 78us; 871us; 88us; 876us; 96us; 874us; 130us; 863us; 4us; 16840us; 77us; 868us; 78us; 871us; 88us; 876us; 96us; 874us; 3us; 16844us; 77us; 868us; 78us; 871us; 88us; 876us; 2us; 16845us; 77us; 868us; 78us; 871us; 3us; 16847us; 77us; 868us; 78us; 871us; 88us; 876us; 3us; 16848us; 77us; 868us; 78us; 871us; 88us; 876us; 2us; 16849us; 77us; 868us; 78us; 871us; 2us; 16850us; 77us; 868us; 78us; 871us; 6us; 16854us; 56us; 865us; 77us; 868us; 78us; 871us; 88us; 876us; 96us; 874us; 130us; 863us; 8us; 17359us; 20us; 1696us; 56us; 865us; 77us; 868us; 78us; 871us; 83us; 1697us; 88us; 876us; 96us; 874us; 130us; 863us; 15us; 32768us; 10us; 926us; 15us; 1758us; 35us; 1754us; 37us; 1755us; 56us; 865us; 59us; 1756us; 69us; 1335us; 77us; 868us; 78us; 871us; 88us; 876us; 93us; 1757us; 96us; 874us; 125us; 1331us; 130us; 863us; 192us; 918us; 7us; 16990us; 56us; 865us; 77us; 868us; 78us; 871us; 84us; 1135us; 88us; 876us; 96us; 874us; 130us; 863us; 1us; 32768us; 188us; 1628us; 0us; 16839us; 36us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 16841us; 96us; 873us; 1us; 16842us; 88us; 875us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16843us; 36us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 36us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16846us; 36us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 36us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 36us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 36us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16851us; 2us; 17359us; 20us; 1696us; 83us; 1697us; 0us; 16852us; 2us; 17358us; 44us; 1629us; 188us; 1628us; 0us; 16853us; 2us; 32768us; 69us; 883us; 76us; 1631us; 36us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16856us; 36us; 16855us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16857us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 0us; 16858us; 0us; 16859us; 0us; 16860us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 3us; 32768us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 0us; 16861us; 25us; 16862us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 1us; 16864us; 17us; 897us; 0us; 16863us; 1us; 16866us; 77us; 899us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16865us; 29us; 16869us; 20us; 1696us; 27us; 908us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 83us; 1697us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 103us; 906us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 30us; 16869us; 20us; 1696us; 27us; 908us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 83us; 1697us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 103us; 906us; 126us; 1072us; 141us; 1253us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 30us; 16869us; 20us; 1696us; 27us; 908us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 83us; 1697us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 103us; 906us; 126us; 1072us; 141us; 1326us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 66us; 16868us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16867us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16870us; 1us; 32768us; 21us; 909us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 3us; 32768us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 0us; 16871us; 69us; 16872us; 20us; 934us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 933us; 0us; 16873us; 2us; 16873us; 18us; 1716us; 136us; 1715us; 2us; 16873us; 18us; 1716us; 136us; 1715us; 2us; 16873us; 18us; 1716us; 136us; 1715us; 2us; 16873us; 29us; 1714us; 135us; 1713us; 2us; 16873us; 18us; 1716us; 136us; 1715us; 1us; 16873us; 57us; 1224us; 1us; 16873us; 57us; 1240us; 1us; 16873us; 153us; 1277us; 1us; 16873us; 64us; 1283us; 3us; 16873us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 3us; 16873us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 3us; 16873us; 58us; 1740us; 59us; 1737us; 60us; 1739us; 0us; 16874us; 1us; 32768us; 125us; 928us; 67us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 930us; 0us; 16875us; 0us; 16876us; 69us; 32768us; 20us; 934us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 933us; 0us; 16877us; 0us; 16878us; 68us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 936us; 0us; 16879us; 0us; 16880us; 0us; 16881us; 0us; 16882us; 0us; 16883us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 4us; 32768us; 10us; 926us; 25us; 1118us; 86us; 1116us; 192us; 913us; 0us; 16884us; 0us; 16885us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 5us; 32768us; 10us; 926us; 25us; 1118us; 86us; 1116us; 127us; 948us; 192us; 913us; 0us; 16886us; 0us; 16887us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16888us; 68us; 32768us; 10us; 926us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 913us; 29us; 32768us; 10us; 926us; 27us; 1141us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 103us; 1140us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 192us; 913us; 0us; 16889us; 0us; 16890us; 0us; 16891us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16892us; 58us; 16894us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 156us; 1001us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16893us; 67us; 32768us; 21us; 892us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16895us; 59us; 16897us; 21us; 892us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 156us; 1001us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16896us; 68us; 32768us; 10us; 926us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 914us; 29us; 32768us; 10us; 926us; 29us; 1714us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 135us; 1713us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 192us; 913us; 68us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 969us; 4us; 32768us; 10us; 926us; 18us; 1716us; 136us; 1715us; 192us; 913us; 0us; 16898us; 0us; 16899us; 2us; 32768us; 18us; 1716us; 136us; 1715us; 0us; 16900us; 0us; 16901us; 0us; 16902us; 0us; 16903us; 43us; 32768us; 10us; 926us; 15us; 1758us; 35us; 1754us; 37us; 1755us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 59us; 1756us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 93us; 1757us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 917us; 10us; 17357us; 10us; 926us; 15us; 1758us; 20us; 1708us; 29us; 1714us; 35us; 1754us; 37us; 1755us; 59us; 1756us; 93us; 1757us; 135us; 1713us; 192us; 913us; 74us; 32768us; 10us; 926us; 15us; 1758us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 35us; 1754us; 37us; 1755us; 39us; 685us; 44us; 1218us; 59us; 1756us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 93us; 1757us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 915us; 9us; 32768us; 10us; 926us; 15us; 1758us; 18us; 1716us; 35us; 1754us; 37us; 1755us; 59us; 1756us; 93us; 1757us; 136us; 1715us; 192us; 913us; 0us; 16904us; 0us; 16905us; 0us; 16906us; 0us; 16907us; 0us; 16908us; 4us; 32768us; 10us; 926us; 29us; 1714us; 135us; 1713us; 192us; 913us; 69us; 32768us; 10us; 926us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 916us; 4us; 32768us; 10us; 926us; 18us; 1716us; 136us; 1715us; 192us; 913us; 0us; 16909us; 0us; 16910us; 0us; 16911us; 0us; 16912us; 0us; 16913us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 2us; 32768us; 18us; 1716us; 136us; 1715us; 0us; 16914us; 0us; 16915us; 0us; 16916us; 0us; 16917us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 25us; 16918us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 25us; 16919us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 32768us; 125us; 1004us; 1us; 17357us; 20us; 1708us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16920us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 3us; 32768us; 10us; 926us; 18us; 683us; 192us; 913us; 1us; 17357us; 20us; 1708us; 68us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1013us; 0us; 16921us; 0us; 16922us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 32768us; 125us; 1016us; 1us; 17357us; 20us; 1708us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16923us; 67us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 3us; 32768us; 10us; 926us; 18us; 683us; 192us; 913us; 0us; 16924us; 1us; 32768us; 97us; 1329us; 0us; 16925us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16926us; 25us; 16930us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 20us; 16933us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 20us; 16934us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 9us; 16935us; 61us; 1088us; 78us; 1086us; 81us; 1061us; 95us; 1089us; 155us; 1085us; 180us; 1087us; 182us; 1090us; 185us; 1084us; 187us; 1091us; 20us; 16936us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 18us; 16937us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 95us; 1089us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 18us; 16938us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 95us; 1089us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 9us; 16939us; 61us; 1088us; 78us; 1086us; 81us; 1061us; 95us; 1089us; 155us; 1085us; 180us; 1087us; 182us; 1090us; 185us; 1084us; 187us; 1091us; 9us; 16940us; 61us; 1088us; 78us; 1086us; 81us; 1061us; 95us; 1089us; 155us; 1085us; 180us; 1087us; 182us; 1090us; 185us; 1084us; 187us; 1091us; 9us; 16941us; 61us; 1088us; 78us; 1086us; 81us; 1061us; 95us; 1089us; 155us; 1085us; 180us; 1087us; 182us; 1090us; 185us; 1084us; 187us; 1091us; 9us; 16942us; 61us; 1088us; 78us; 1086us; 81us; 1061us; 95us; 1089us; 155us; 1085us; 180us; 1087us; 182us; 1090us; 185us; 1084us; 187us; 1091us; 9us; 16943us; 61us; 1088us; 78us; 1086us; 81us; 1061us; 95us; 1089us; 155us; 1085us; 180us; 1087us; 182us; 1090us; 185us; 1084us; 187us; 1091us; 9us; 16944us; 61us; 1088us; 78us; 1086us; 81us; 1061us; 95us; 1089us; 155us; 1085us; 180us; 1087us; 182us; 1090us; 185us; 1084us; 187us; 1091us; 9us; 16945us; 61us; 1088us; 78us; 1086us; 81us; 1061us; 95us; 1089us; 155us; 1085us; 180us; 1087us; 182us; 1090us; 185us; 1084us; 187us; 1091us; 1us; 16946us; 187us; 1091us; 8us; 16947us; 61us; 1088us; 78us; 1086us; 81us; 1061us; 95us; 1089us; 155us; 1085us; 180us; 1087us; 182us; 1090us; 187us; 1091us; 4us; 16948us; 95us; 1089us; 155us; 1085us; 182us; 1090us; 187us; 1091us; 4us; 16949us; 95us; 1089us; 155us; 1085us; 182us; 1090us; 187us; 1091us; 1us; 16950us; 187us; 1091us; 1us; 16951us; 187us; 1091us; 1us; 16952us; 187us; 1091us; 25us; 16989us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 25us; 16993us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 25us; 16997us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 29us; 32768us; 10us; 926us; 27us; 1141us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 103us; 1140us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 192us; 913us; 23us; 17002us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 23us; 17005us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 26us; 32768us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 141us; 1253us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 24us; 17050us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 24us; 17052us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 26us; 17107us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 141us; 1326us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 26us; 17103us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 141us; 1327us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 25us; 17104us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 27us; 32768us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 104us; 1419us; 126us; 1072us; 137us; 1420us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 25us; 17111us; 61us; 1088us; 62us; 1081us; 69us; 1079us; 78us; 1086us; 79us; 1063us; 80us; 1065us; 81us; 1061us; 82us; 1067us; 88us; 1076us; 89us; 1077us; 95us; 1089us; 96us; 1157us; 101us; 1075us; 126us; 1072us; 142us; 1073us; 155us; 1085us; 157us; 1082us; 158us; 1083us; 180us; 1087us; 181us; 1078us; 182us; 1090us; 184us; 1074us; 185us; 1084us; 186us; 1080us; 187us; 1091us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16927us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16928us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16929us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 16973us; 68us; 1069us; 67us; 32768us; 21us; 892us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16931us; 1us; 16932us; 96us; 1155us; 67us; 32768us; 15us; 1092us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1093us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1094us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1095us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1096us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1097us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1098us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1099us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1100us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1101us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1102us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1103us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1104us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1105us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1106us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1107us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1108us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1109us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1110us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 67us; 32768us; 15us; 1111us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16953us; 0us; 16954us; 0us; 16955us; 0us; 16956us; 0us; 16957us; 0us; 16958us; 0us; 16959us; 0us; 16960us; 0us; 16961us; 0us; 16962us; 0us; 16963us; 0us; 16964us; 0us; 16965us; 0us; 16966us; 0us; 16967us; 0us; 16968us; 0us; 16969us; 0us; 16970us; 0us; 16971us; 0us; 16972us; 0us; 16974us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 16975us; 38us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 56us; 1123us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1126us; 0us; 16976us; 38us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 56us; 1123us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1126us; 3us; 32768us; 10us; 926us; 19us; 1120us; 192us; 913us; 0us; 16977us; 0us; 16978us; 0us; 16979us; 37us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1125us; 0us; 16980us; 0us; 16981us; 0us; 16982us; 0us; 16983us; 2us; 32768us; 97us; 1136us; 192us; 1134us; 2us; 16984us; 56us; 1130us; 192us; 1133us; 37us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1132us; 0us; 16985us; 0us; 16986us; 0us; 16987us; 0us; 16988us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 16991us; 3us; 16996us; 26us; 1147us; 138us; 1146us; 139us; 1152us; 0us; 16992us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 32768us; 21us; 1142us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 0us; 16994us; 0us; 16995us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 32768us; 21us; 1148us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 5us; 32768us; 10us; 926us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 192us; 913us; 0us; 16998us; 0us; 16999us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17000us; 0us; 17001us; 73us; 32768us; 10us; 926us; 15us; 1758us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 35us; 1754us; 37us; 1755us; 39us; 685us; 44us; 1218us; 59us; 1756us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 93us; 1757us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 913us; 0us; 17003us; 73us; 32768us; 10us; 926us; 15us; 1758us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 35us; 1754us; 37us; 1755us; 39us; 685us; 44us; 1218us; 59us; 1756us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 93us; 1757us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 913us; 0us; 17004us; 42us; 32768us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 42us; 17302us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17006us; 42us; 32768us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 42us; 17298us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17007us; 42us; 32768us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 42us; 17301us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17008us; 42us; 32768us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 42us; 17314us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17009us; 42us; 32768us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 42us; 17309us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17010us; 42us; 32768us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 42us; 17310us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17011us; 30us; 32768us; 44us; 1629us; 66us; 1522us; 87us; 1555us; 90us; 1622us; 91us; 1509us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1186us; 30us; 32768us; 44us; 1629us; 66us; 1522us; 87us; 1555us; 90us; 1622us; 91us; 1509us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1186us; 2us; 17381us; 33us; 1725us; 34us; 1724us; 33us; 17147us; 13us; 17150us; 20us; 17150us; 25us; 17150us; 33us; 1725us; 34us; 1724us; 71us; 17381us; 73us; 17381us; 86us; 17150us; 91us; 17381us; 105us; 17381us; 110us; 17150us; 120us; 17381us; 134us; 17381us; 145us; 17381us; 152us; 17381us; 162us; 17381us; 163us; 17381us; 164us; 17381us; 165us; 17381us; 166us; 17381us; 167us; 17381us; 168us; 17381us; 169us; 17381us; 170us; 17381us; 171us; 17381us; 172us; 17381us; 173us; 17381us; 174us; 17381us; 176us; 17381us; 177us; 17381us; 189us; 17381us; 190us; 17381us; 191us; 17381us; 27us; 32768us; 71us; 1279us; 73us; 1313us; 91us; 1285us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1185us; 27us; 32768us; 71us; 1279us; 73us; 1313us; 91us; 1285us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1185us; 0us; 17012us; 5us; 17012us; 13us; 17149us; 25us; 17149us; 86us; 17149us; 110us; 17149us; 130us; 482us; 0us; 17013us; 0us; 17014us; 42us; 32768us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17015us; 42us; 32768us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 117us; 1177us; 120us; 1260us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17016us; 34us; 17017us; 44us; 1218us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1195us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 37us; 17017us; 25us; 1372us; 44us; 1218us; 69us; 1359us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 86us; 1368us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1195us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17018us; 5us; 17019us; 32us; 1204us; 33us; 1203us; 34us; 1202us; 74us; 1216us; 76us; 1208us; 33us; 32768us; 44us; 1218us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 5us; 17020us; 32us; 1204us; 33us; 1203us; 34us; 1202us; 74us; 1216us; 76us; 1208us; 5us; 17021us; 32us; 1204us; 33us; 1203us; 34us; 1202us; 74us; 1216us; 76us; 1208us; 2us; 17022us; 32us; 1204us; 33us; 1203us; 1us; 17023us; 32us; 1204us; 5us; 17025us; 32us; 1204us; 33us; 1203us; 34us; 1202us; 74us; 1216us; 76us; 1208us; 5us; 17241us; 32us; 1204us; 33us; 1203us; 34us; 1202us; 74us; 1216us; 76us; 1208us; 33us; 32768us; 44us; 1218us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 33us; 32768us; 44us; 1218us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 32768us; 157us; 1580us; 0us; 17024us; 33us; 32768us; 44us; 1218us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 33us; 17292us; 44us; 1218us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 6us; 17038us; 10us; 926us; 70us; 1236us; 91us; 1229us; 99us; 1639us; 188us; 1628us; 192us; 913us; 0us; 17026us; 1us; 32768us; 76us; 1211us; 6us; 17038us; 10us; 926us; 70us; 1236us; 91us; 1229us; 99us; 1639us; 188us; 1628us; 192us; 913us; 0us; 17027us; 3us; 32768us; 91us; 1634us; 99us; 1639us; 188us; 1628us; 3us; 17308us; 91us; 1634us; 99us; 1639us; 188us; 1628us; 0us; 17028us; 2us; 32768us; 91us; 1113us; 188us; 1112us; 0us; 17029us; 0us; 17030us; 0us; 17031us; 68us; 17100us; 10us; 926us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 919us; 3us; 32768us; 10us; 926us; 57us; 1222us; 192us; 913us; 0us; 17032us; 0us; 17033us; 0us; 17034us; 0us; 17035us; 0us; 17036us; 0us; 17037us; 0us; 17039us; 85us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 56us; 1674us; 61us; 1160us; 62us; 1654us; 69us; 1658us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1214us; 78us; 1230us; 82us; 1666us; 85us; 963us; 88us; 1172us; 89us; 1175us; 91us; 1287us; 95us; 1657us; 97us; 1024us; 99us; 1639us; 101us; 1659us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 141us; 1669us; 142us; 1665us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1273us; 155us; 1169us; 156us; 1001us; 157us; 1660us; 158us; 1661us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 178us; 1667us; 179us; 1166us; 180us; 1163us; 181us; 1651us; 182us; 1653us; 183us; 1207us; 184us; 1650us; 185us; 1649us; 186us; 1648us; 187us; 1647us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1637us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 1us; 32768us; 76us; 1232us; 1us; 32768us; 174us; 1233us; 0us; 17040us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 17041us; 70us; 32768us; 10us; 926us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 95us; 1255us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 141us; 1254us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 920us; 3us; 32768us; 10us; 926us; 57us; 1238us; 192us; 913us; 0us; 17042us; 0us; 17043us; 0us; 17044us; 0us; 17045us; 2us; 32768us; 57us; 1243us; 96us; 1244us; 0us; 17046us; 68us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 95us; 1255us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 141us; 1254us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 2us; 32768us; 57us; 1246us; 96us; 1247us; 0us; 17047us; 68us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 95us; 1255us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 141us; 1254us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 2us; 32768us; 57us; 1249us; 96us; 1250us; 0us; 17048us; 68us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 95us; 1255us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 141us; 1254us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 32768us; 57us; 1252us; 0us; 17049us; 66us; 17051us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17053us; 0us; 17054us; 0us; 17055us; 0us; 17056us; 0us; 17057us; 0us; 17058us; 0us; 17059us; 0us; 17060us; 0us; 17061us; 0us; 17062us; 68us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 140us; 1271us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1269us; 3us; 32768us; 10us; 926us; 140us; 1267us; 192us; 913us; 0us; 17063us; 0us; 17064us; 1us; 32768us; 140us; 1270us; 0us; 17065us; 0us; 17066us; 68us; 32768us; 10us; 926us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 921us; 69us; 32768us; 10us; 926us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 153us; 1672us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 921us; 3us; 32768us; 10us; 926us; 153us; 1275us; 192us; 913us; 0us; 17067us; 0us; 17068us; 0us; 17069us; 0us; 17070us; 68us; 17100us; 10us; 926us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 922us; 3us; 32768us; 10us; 926us; 64us; 1281us; 192us; 913us; 0us; 17071us; 0us; 17072us; 0us; 17073us; 0us; 17074us; 77us; 32768us; 10us; 926us; 15us; 1297us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 35us; 1294us; 37us; 1295us; 39us; 685us; 44us; 1218us; 59us; 1296us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 87us; 1337us; 88us; 1171us; 89us; 1174us; 91us; 1286us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 923us; 93us; 32768us; 10us; 926us; 15us; 1297us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 35us; 1294us; 37us; 1295us; 39us; 685us; 44us; 1218us; 56us; 1674us; 59us; 1296us; 61us; 1160us; 62us; 1654us; 69us; 1658us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1214us; 82us; 1666us; 85us; 963us; 87us; 1337us; 88us; 1172us; 89us; 1175us; 91us; 1286us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 95us; 1657us; 97us; 1024us; 99us; 1639us; 101us; 1659us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 141us; 1669us; 142us; 1665us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1273us; 155us; 1169us; 156us; 1001us; 157us; 1660us; 158us; 1661us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 178us; 1667us; 179us; 1166us; 180us; 1163us; 181us; 1651us; 182us; 1653us; 183us; 1207us; 184us; 1650us; 185us; 1626us; 186us; 1648us; 187us; 1647us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 924us; 93us; 32768us; 10us; 926us; 15us; 1297us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 35us; 1294us; 37us; 1295us; 39us; 685us; 44us; 1218us; 56us; 1674us; 59us; 1296us; 61us; 1160us; 62us; 1654us; 69us; 1658us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1214us; 82us; 1666us; 85us; 963us; 87us; 1337us; 88us; 1172us; 89us; 1175us; 91us; 1286us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 95us; 1657us; 97us; 1024us; 99us; 1639us; 101us; 1659us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 141us; 1669us; 142us; 1665us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1273us; 155us; 1169us; 156us; 1001us; 157us; 1660us; 158us; 1661us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 178us; 1667us; 179us; 1166us; 180us; 1163us; 181us; 1651us; 182us; 1653us; 183us; 1207us; 184us; 1650us; 185us; 1626us; 186us; 1648us; 187us; 1647us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 924us; 0us; 17075us; 9us; 32768us; 10us; 926us; 15us; 1752us; 35us; 1749us; 37us; 1750us; 59us; 1751us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 192us; 913us; 0us; 17076us; 0us; 17077us; 0us; 17078us; 0us; 17078us; 0us; 17079us; 0us; 17080us; 0us; 17081us; 0us; 17082us; 0us; 17083us; 1us; 32768us; 77us; 1300us; 1us; 32768us; 91us; 1301us; 1us; 16496us; 72us; 199us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17084us; 0us; 17085us; 0us; 17086us; 0us; 17087us; 4us; 17087us; 92us; 17090us; 93us; 17090us; 94us; 17090us; 101us; 17090us; 4us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 101us; 1311us; 0us; 17088us; 1us; 32768us; 185us; 1625us; 0us; 17089us; 73us; 32768us; 10us; 926us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 52us; 1353us; 58us; 1740us; 59us; 1737us; 60us; 1739us; 61us; 1159us; 66us; 1363us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1178us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 925us; 5us; 32768us; 10us; 926us; 58us; 1740us; 59us; 1737us; 60us; 1739us; 192us; 913us; 0us; 17091us; 0us; 17092us; 0us; 17093us; 0us; 17094us; 0us; 17095us; 0us; 17096us; 0us; 17097us; 0us; 17098us; 0us; 17099us; 0us; 17101us; 0us; 17102us; 68us; 32768us; 10us; 926us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 913us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17105us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17106us; 73us; 32768us; 10us; 926us; 15us; 1758us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 35us; 1754us; 37us; 1755us; 39us; 685us; 44us; 1218us; 59us; 1756us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 93us; 1757us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 913us; 0us; 17108us; 0us; 17109us; 0us; 17110us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 66us; 32768us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 2us; 32768us; 189us; 13us; 190us; 12us; 3us; 17117us; 35us; 1727us; 36us; 1730us; 107us; 1731us; 0us; 17114us; 35us; 17119us; 44us; 1218us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 77us; 1349us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1195us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 32768us; 87us; 1723us; 0us; 17112us; 0us; 17113us; 0us; 17116us; 1us; 32768us; 91us; 1346us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 17118us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1351us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17120us; 34us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1569us; 0us; 17121us; 29us; 32768us; 44us; 1629us; 66us; 1522us; 87us; 1555us; 90us; 1622us; 91us; 1509us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 2us; 17381us; 33us; 1725us; 34us; 1724us; 26us; 17115us; 71us; 1279us; 73us; 1313us; 91us; 1285us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17139us; 2us; 17131us; 20us; 1381us; 83us; 1382us; 0us; 17122us; 67us; 32768us; 21us; 892us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17139us; 2us; 17131us; 20us; 1381us; 83us; 1382us; 0us; 17123us; 1us; 17124us; 69us; 1364us; 67us; 17125us; 21us; 892us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17139us; 2us; 17131us; 20us; 1381us; 83us; 1382us; 0us; 17126us; 3us; 32768us; 44us; 1629us; 66us; 1386us; 188us; 1628us; 0us; 17139us; 2us; 17131us; 20us; 1381us; 83us; 1382us; 0us; 17127us; 5us; 17131us; 20us; 1381us; 44us; 1629us; 66us; 1386us; 83us; 1382us; 188us; 1628us; 1us; 32768us; 19us; 1374us; 0us; 17128us; 0us; 17139us; 2us; 17131us; 20us; 1381us; 83us; 1382us; 1us; 32768us; 19us; 1378us; 0us; 17129us; 0us; 17130us; 3us; 17130us; 44us; 1629us; 66us; 1386us; 188us; 1628us; 1us; 17132us; 83us; 1384us; 1us; 17133us; 20us; 1383us; 0us; 17134us; 0us; 17135us; 1us; 17136us; 76us; 1631us; 0us; 17137us; 0us; 17138us; 8us; 17143us; 10us; 926us; 15us; 1758us; 35us; 1754us; 37us; 1755us; 59us; 1756us; 69us; 1389us; 93us; 1757us; 192us; 913us; 74us; 17141us; 10us; 926us; 15us; 1758us; 21us; 892us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 35us; 1754us; 37us; 1755us; 39us; 685us; 44us; 1218us; 59us; 1756us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 93us; 1757us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 913us; 0us; 17140us; 0us; 17142us; 0us; 17144us; 3us; 17357us; 20us; 1708us; 25us; 1403us; 86us; 1401us; 1us; 17357us; 20us; 1708us; 3us; 17157us; 13us; 531us; 110us; 530us; 192us; 1412us; 0us; 17145us; 2us; 32768us; 13us; 531us; 110us; 530us; 0us; 17146us; 0us; 17148us; 0us; 17151us; 3us; 16496us; 21us; 485us; 72us; 199us; 192us; 720us; 0us; 17153us; 2us; 16496us; 72us; 199us; 192us; 720us; 1us; 32768us; 19us; 1405us; 0us; 17154us; 3us; 17351us; 18us; 1703us; 19us; 1704us; 140us; 1705us; 0us; 17155us; 3us; 17157us; 13us; 531us; 110us; 530us; 192us; 1412us; 0us; 17156us; 3us; 17157us; 13us; 531us; 110us; 530us; 192us; 1412us; 0us; 17158us; 3us; 17157us; 13us; 531us; 110us; 530us; 192us; 1412us; 0us; 17159us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 8us; 17152us; 25us; 1403us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 86us; 1401us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 3us; 17351us; 18us; 1703us; 19us; 1704us; 140us; 1705us; 1us; 17357us; 20us; 1708us; 0us; 17160us; 0us; 17161us; 0us; 17162us; 34us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 32768us; 97us; 1423us; 68us; 32768us; 21us; 887us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1425us; 0us; 17163us; 0us; 17164us; 35us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 66us; 835us; 70us; 829us; 71us; 832us; 73us; 826us; 74us; 836us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1437us; 2us; 32768us; 97us; 1428us; 192us; 1435us; 69us; 32768us; 10us; 926us; 17us; 1432us; 23us; 1426us; 24us; 1441us; 28us; 1019us; 29us; 676us; 30us; 1007us; 31us; 672us; 39us; 685us; 44us; 1218us; 61us; 1159us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 85us; 963us; 88us; 1171us; 89us; 1174us; 91us; 1287us; 97us; 1024us; 99us; 1639us; 105us; 1261us; 106us; 944us; 113us; 955us; 114us; 959us; 115us; 940us; 117us; 1177us; 120us; 1260us; 121us; 974us; 122us; 1421us; 123us; 1439us; 124us; 950us; 128us; 1014us; 131us; 957us; 132us; 961us; 134us; 1265us; 143us; 1187us; 144us; 1189us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 155us; 1168us; 156us; 1001us; 159us; 666us; 160us; 997us; 161us; 999us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 179us; 1165us; 180us; 1162us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 913us; 3us; 32768us; 10us; 926us; 19us; 1430us; 192us; 913us; 0us; 17165us; 0us; 17166us; 1us; 32768us; 19us; 1433us; 0us; 17167us; 0us; 17168us; 1us; 32768us; 19us; 1436us; 0us; 17169us; 1us; 32768us; 19us; 1438us; 0us; 17170us; 38us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 56us; 1123us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1126us; 0us; 17171us; 38us; 32768us; 41us; 459us; 42us; 458us; 43us; 460us; 44us; 451us; 56us; 1123us; 66us; 835us; 70us; 829us; 71us; 832us; 72us; 199us; 73us; 826us; 74us; 836us; 81us; 814us; 91us; 844us; 99us; 1639us; 105us; 842us; 120us; 841us; 145us; 843us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 761us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1126us; 1us; 32768us; 19us; 1443us; 0us; 17172us; 1us; 17173us; 84us; 1445us; 4us; 32768us; 50us; 568us; 90us; 1622us; 91us; 583us; 185us; 1625us; 1us; 17175us; 84us; 1447us; 4us; 32768us; 50us; 568us; 90us; 1622us; 91us; 583us; 185us; 1625us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 72us; 199us; 74us; 1470us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17178us; 1us; 17180us; 97us; 1451us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 72us; 199us; 74us; 1470us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17179us; 1us; 17182us; 95us; 1454us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 72us; 199us; 74us; 1470us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17181us; 1us; 17184us; 95us; 1457us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 72us; 199us; 74us; 1470us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17183us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 74us; 1463us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 7us; 17187us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 77us; 1461us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 6us; 17185us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 1us; 32768us; 188us; 1628us; 1us; 32768us; 77us; 1465us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 6us; 17186us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 7us; 17190us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 77us; 1468us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 6us; 17188us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 1us; 32768us; 188us; 1628us; 1us; 32768us; 77us; 1472us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 6us; 17189us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 1us; 17192us; 97us; 1475us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17191us; 8us; 17196us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 90us; 1622us; 95us; 1478us; 182us; 1482us; 185us; 1625us; 188us; 1628us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17193us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17194us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17195us; 8us; 17199us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 90us; 1622us; 95us; 1485us; 182us; 1487us; 185us; 1625us; 188us; 1628us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17197us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17198us; 7us; 17201us; 34us; 1503us; 44us; 1629us; 70us; 1528us; 90us; 1622us; 95us; 1490us; 185us; 1625us; 188us; 1628us; 29us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17200us; 1us; 17202us; 76us; 1631us; 0us; 17203us; 1us; 17203us; 79us; 1518us; 1us; 17203us; 79us; 1519us; 1us; 17205us; 185us; 1498us; 4us; 17205us; 32us; 1578us; 76us; 1575us; 157us; 1580us; 185us; 1498us; 1us; 32768us; 174us; 1499us; 0us; 17204us; 6us; 32768us; 34us; 1504us; 44us; 1629us; 70us; 1528us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 0us; 17206us; 62us; 17206us; 10us; 17224us; 13us; 17224us; 14us; 17224us; 15us; 17224us; 16us; 17224us; 18us; 17224us; 19us; 17224us; 20us; 17224us; 25us; 17224us; 29us; 17224us; 31us; 17224us; 33us; 17224us; 39us; 17224us; 41us; 17224us; 42us; 17224us; 43us; 17224us; 45us; 17224us; 46us; 17224us; 48us; 17224us; 49us; 17224us; 50us; 17224us; 52us; 17224us; 58us; 17224us; 59us; 17224us; 60us; 17224us; 71us; 17224us; 72us; 17224us; 73us; 17224us; 83us; 17224us; 86us; 17224us; 91us; 17224us; 105us; 17224us; 108us; 17224us; 110us; 17224us; 117us; 17224us; 120us; 17224us; 130us; 17224us; 134us; 17224us; 135us; 17224us; 140us; 17224us; 145us; 17224us; 152us; 17224us; 159us; 17224us; 162us; 17224us; 163us; 17224us; 164us; 17224us; 165us; 17224us; 166us; 17224us; 167us; 17224us; 168us; 17224us; 169us; 17224us; 170us; 17224us; 171us; 17224us; 172us; 17224us; 173us; 17224us; 174us; 17224us; 176us; 17224us; 177us; 17224us; 189us; 17224us; 190us; 17224us; 191us; 17224us; 192us; 17224us; 1us; 32768us; 70us; 1528us; 1us; 32768us; 70us; 1528us; 0us; 17207us; 62us; 17207us; 10us; 17225us; 13us; 17225us; 14us; 17225us; 15us; 17225us; 16us; 17225us; 18us; 17225us; 19us; 17225us; 20us; 17225us; 25us; 17225us; 29us; 17225us; 31us; 17225us; 33us; 17225us; 39us; 17225us; 41us; 17225us; 42us; 17225us; 43us; 17225us; 45us; 17225us; 46us; 17225us; 48us; 17225us; 49us; 17225us; 50us; 17225us; 52us; 17225us; 58us; 17225us; 59us; 17225us; 60us; 17225us; 71us; 17225us; 72us; 17225us; 73us; 17225us; 83us; 17225us; 86us; 17225us; 91us; 17225us; 105us; 17225us; 108us; 17225us; 110us; 17225us; 117us; 17225us; 120us; 17225us; 130us; 17225us; 134us; 17225us; 135us; 17225us; 140us; 17225us; 145us; 17225us; 152us; 17225us; 159us; 17225us; 162us; 17225us; 163us; 17225us; 164us; 17225us; 165us; 17225us; 166us; 17225us; 167us; 17225us; 168us; 17225us; 169us; 17225us; 170us; 17225us; 171us; 17225us; 172us; 17225us; 173us; 17225us; 174us; 17225us; 176us; 17225us; 177us; 17225us; 189us; 17225us; 190us; 17225us; 191us; 17225us; 192us; 17225us; 0us; 17208us; 62us; 17208us; 10us; 17226us; 13us; 17226us; 14us; 17226us; 15us; 17226us; 16us; 17226us; 18us; 17226us; 19us; 17226us; 20us; 17226us; 25us; 17226us; 29us; 17226us; 31us; 17226us; 33us; 17226us; 39us; 17226us; 41us; 17226us; 42us; 17226us; 43us; 17226us; 45us; 17226us; 46us; 17226us; 48us; 17226us; 49us; 17226us; 50us; 17226us; 52us; 17226us; 58us; 17226us; 59us; 17226us; 60us; 17226us; 71us; 17226us; 72us; 17226us; 73us; 17226us; 83us; 17226us; 86us; 17226us; 91us; 17226us; 105us; 17226us; 108us; 17226us; 110us; 17226us; 117us; 17226us; 120us; 17226us; 130us; 17226us; 134us; 17226us; 135us; 17226us; 140us; 17226us; 145us; 17226us; 152us; 17226us; 159us; 17226us; 162us; 17226us; 163us; 17226us; 164us; 17226us; 165us; 17226us; 166us; 17226us; 167us; 17226us; 168us; 17226us; 169us; 17226us; 170us; 17226us; 171us; 17226us; 172us; 17226us; 173us; 17226us; 174us; 17226us; 176us; 17226us; 177us; 17226us; 189us; 17226us; 190us; 17226us; 191us; 17226us; 192us; 17226us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1569us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1569us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 4us; 32768us; 44us; 1629us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 4us; 32768us; 44us; 1629us; 90us; 1622us; 185us; 1625us; 188us; 1628us; 0us; 17209us; 62us; 17209us; 10us; 17227us; 13us; 17227us; 14us; 17227us; 15us; 17227us; 16us; 17227us; 18us; 17227us; 19us; 17227us; 20us; 17227us; 25us; 17227us; 29us; 17227us; 31us; 17227us; 33us; 17227us; 39us; 17227us; 41us; 17227us; 42us; 17227us; 43us; 17227us; 45us; 17227us; 46us; 17227us; 48us; 17227us; 49us; 17227us; 50us; 17227us; 52us; 17227us; 58us; 17227us; 59us; 17227us; 60us; 17227us; 71us; 17227us; 72us; 17227us; 73us; 17227us; 83us; 17227us; 86us; 17227us; 91us; 17227us; 105us; 17227us; 108us; 17227us; 110us; 17227us; 117us; 17227us; 120us; 17227us; 130us; 17227us; 134us; 17227us; 135us; 17227us; 140us; 17227us; 145us; 17227us; 152us; 17227us; 159us; 17227us; 162us; 17227us; 163us; 17227us; 164us; 17227us; 165us; 17227us; 166us; 17227us; 167us; 17227us; 168us; 17227us; 169us; 17227us; 170us; 17227us; 171us; 17227us; 172us; 17227us; 173us; 17227us; 174us; 17227us; 176us; 17227us; 177us; 17227us; 189us; 17227us; 190us; 17227us; 191us; 17227us; 192us; 17227us; 0us; 17210us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17211us; 62us; 17211us; 10us; 17229us; 13us; 17229us; 14us; 17229us; 15us; 17229us; 16us; 17229us; 18us; 17229us; 19us; 17229us; 20us; 17229us; 25us; 17229us; 29us; 17229us; 31us; 17229us; 33us; 17229us; 39us; 17229us; 41us; 17229us; 42us; 17229us; 43us; 17229us; 45us; 17229us; 46us; 17229us; 48us; 17229us; 49us; 17229us; 50us; 17229us; 52us; 17229us; 58us; 17229us; 59us; 17229us; 60us; 17229us; 71us; 17229us; 72us; 17229us; 73us; 17229us; 83us; 17229us; 86us; 17229us; 91us; 17229us; 105us; 17229us; 108us; 17229us; 110us; 17229us; 117us; 17229us; 120us; 17229us; 130us; 17229us; 134us; 17229us; 135us; 17229us; 140us; 17229us; 145us; 17229us; 152us; 17229us; 159us; 17229us; 162us; 17229us; 163us; 17229us; 164us; 17229us; 165us; 17229us; 166us; 17229us; 167us; 17229us; 168us; 17229us; 169us; 17229us; 170us; 17229us; 171us; 17229us; 172us; 17229us; 173us; 17229us; 174us; 17229us; 176us; 17229us; 177us; 17229us; 189us; 17229us; 190us; 17229us; 191us; 17229us; 192us; 17229us; 1us; 17236us; 79us; 1525us; 1us; 17236us; 79us; 1524us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17212us; 62us; 17212us; 10us; 17230us; 13us; 17230us; 14us; 17230us; 15us; 17230us; 16us; 17230us; 18us; 17230us; 19us; 17230us; 20us; 17230us; 25us; 17230us; 29us; 17230us; 31us; 17230us; 33us; 17230us; 39us; 17230us; 41us; 17230us; 42us; 17230us; 43us; 17230us; 45us; 17230us; 46us; 17230us; 48us; 17230us; 49us; 17230us; 50us; 17230us; 52us; 17230us; 58us; 17230us; 59us; 17230us; 60us; 17230us; 71us; 17230us; 72us; 17230us; 73us; 17230us; 83us; 17230us; 86us; 17230us; 91us; 17230us; 105us; 17230us; 108us; 17230us; 110us; 17230us; 117us; 17230us; 120us; 17230us; 130us; 17230us; 134us; 17230us; 135us; 17230us; 140us; 17230us; 145us; 17230us; 152us; 17230us; 159us; 17230us; 162us; 17230us; 163us; 17230us; 164us; 17230us; 165us; 17230us; 166us; 17230us; 167us; 17230us; 168us; 17230us; 169us; 17230us; 170us; 17230us; 171us; 17230us; 172us; 17230us; 173us; 17230us; 174us; 17230us; 176us; 17230us; 177us; 17230us; 189us; 17230us; 190us; 17230us; 191us; 17230us; 192us; 17230us; 2us; 32768us; 57us; 1529us; 96us; 1530us; 0us; 17213us; 2us; 32768us; 57us; 1531us; 96us; 1532us; 0us; 17214us; 2us; 32768us; 57us; 1533us; 96us; 1534us; 0us; 17215us; 1us; 32768us; 57us; 1535us; 0us; 17216us; 1us; 32768us; 96us; 1537us; 30us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17220us; 1us; 17217us; 96us; 1541us; 4us; 32768us; 10us; 926us; 96us; 1541us; 158us; 1584us; 192us; 913us; 30us; 17263us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17218us; 0us; 17219us; 64us; 17221us; 10us; 17231us; 13us; 17231us; 14us; 17231us; 15us; 17231us; 16us; 17231us; 18us; 17231us; 19us; 17231us; 20us; 17231us; 25us; 17231us; 29us; 17231us; 31us; 17231us; 33us; 17231us; 39us; 17231us; 41us; 17231us; 42us; 17231us; 43us; 17231us; 45us; 17231us; 46us; 17231us; 48us; 17231us; 49us; 17231us; 50us; 17231us; 52us; 17231us; 58us; 17231us; 59us; 17231us; 60us; 17231us; 71us; 17231us; 72us; 17231us; 73us; 17231us; 76us; 1572us; 83us; 17231us; 86us; 17231us; 91us; 17231us; 105us; 17231us; 108us; 17231us; 110us; 17231us; 117us; 17231us; 120us; 17231us; 130us; 17231us; 134us; 17231us; 135us; 17231us; 140us; 17231us; 145us; 17231us; 152us; 17231us; 159us; 17231us; 162us; 17231us; 163us; 17231us; 164us; 17231us; 165us; 17231us; 166us; 17231us; 167us; 17231us; 168us; 17231us; 169us; 17231us; 170us; 17231us; 171us; 17231us; 172us; 17231us; 173us; 17231us; 174us; 17231us; 176us; 17231us; 177us; 17231us; 185us; 1547us; 189us; 17231us; 190us; 17231us; 191us; 17231us; 192us; 17231us; 2us; 17221us; 76us; 1572us; 185us; 1546us; 2us; 32768us; 61us; 1550us; 174us; 1548us; 2us; 32768us; 61us; 1551us; 174us; 1549us; 0us; 17222us; 62us; 17222us; 10us; 17232us; 13us; 17232us; 14us; 17232us; 15us; 17232us; 16us; 17232us; 18us; 17232us; 19us; 17232us; 20us; 17232us; 25us; 17232us; 29us; 17232us; 31us; 17232us; 33us; 17232us; 39us; 17232us; 41us; 17232us; 42us; 17232us; 43us; 17232us; 45us; 17232us; 46us; 17232us; 48us; 17232us; 49us; 17232us; 50us; 17232us; 52us; 17232us; 58us; 17232us; 59us; 17232us; 60us; 17232us; 71us; 17232us; 72us; 17232us; 73us; 17232us; 83us; 17232us; 86us; 17232us; 91us; 17232us; 105us; 17232us; 108us; 17232us; 110us; 17232us; 117us; 17232us; 120us; 17232us; 130us; 17232us; 134us; 17232us; 135us; 17232us; 140us; 17232us; 145us; 17232us; 152us; 17232us; 159us; 17232us; 162us; 17232us; 163us; 17232us; 164us; 17232us; 165us; 17232us; 166us; 17232us; 167us; 17232us; 168us; 17232us; 169us; 17232us; 170us; 17232us; 171us; 17232us; 172us; 17232us; 173us; 17232us; 174us; 17232us; 176us; 17232us; 177us; 17232us; 189us; 17232us; 190us; 17232us; 191us; 17232us; 192us; 17232us; 1us; 32768us; 174us; 1552us; 1us; 32768us; 174us; 1553us; 0us; 17223us; 62us; 17223us; 10us; 17233us; 13us; 17233us; 14us; 17233us; 15us; 17233us; 16us; 17233us; 18us; 17233us; 19us; 17233us; 20us; 17233us; 25us; 17233us; 29us; 17233us; 31us; 17233us; 33us; 17233us; 39us; 17233us; 41us; 17233us; 42us; 17233us; 43us; 17233us; 45us; 17233us; 46us; 17233us; 48us; 17233us; 49us; 17233us; 50us; 17233us; 52us; 17233us; 58us; 17233us; 59us; 17233us; 60us; 17233us; 71us; 17233us; 72us; 17233us; 73us; 17233us; 83us; 17233us; 86us; 17233us; 91us; 17233us; 105us; 17233us; 108us; 17233us; 110us; 17233us; 117us; 17233us; 120us; 17233us; 130us; 17233us; 134us; 17233us; 135us; 17233us; 140us; 17233us; 145us; 17233us; 152us; 17233us; 159us; 17233us; 162us; 17233us; 163us; 17233us; 164us; 17233us; 165us; 17233us; 166us; 17233us; 167us; 17233us; 168us; 17233us; 169us; 17233us; 170us; 17233us; 171us; 17233us; 172us; 17233us; 173us; 17233us; 174us; 17233us; 176us; 17233us; 177us; 17233us; 189us; 17233us; 190us; 17233us; 191us; 17233us; 192us; 17233us; 0us; 17228us; 29us; 32768us; 44us; 1629us; 66us; 1558us; 87us; 1555us; 90us; 1622us; 91us; 1559us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 1us; 17234us; 76us; 1572us; 0us; 17235us; 0us; 17236us; 31us; 32768us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 1569us; 5us; 32768us; 10us; 926us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 192us; 913us; 6us; 17258us; 10us; 926us; 69us; 1593us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 192us; 913us; 0us; 17237us; 0us; 17238us; 0us; 17239us; 0us; 17240us; 33us; 32768us; 44us; 1218us; 70us; 1220us; 71us; 1279us; 73us; 1313us; 74us; 1213us; 91us; 1287us; 99us; 1639us; 105us; 1261us; 120us; 1260us; 134us; 1265us; 145us; 1259us; 151us; 1210us; 152us; 1272us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 183us; 1206us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17242us; 0us; 17243us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 17244us; 0us; 17245us; 2us; 32768us; 44us; 1629us; 188us; 1628us; 3us; 17246us; 32us; 1578us; 76us; 1631us; 157us; 1580us; 0us; 17247us; 7us; 32768us; 10us; 926us; 15us; 1758us; 35us; 1754us; 37us; 1755us; 59us; 1756us; 93us; 1757us; 192us; 913us; 0us; 17248us; 0us; 17249us; 1us; 32768us; 157us; 1580us; 0us; 17250us; 33us; 17263us; 10us; 926us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 158us; 1590us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 913us; 1us; 32768us; 96us; 1582us; 37us; 17263us; 10us; 926us; 15us; 1758us; 35us; 1754us; 37us; 1755us; 44us; 1629us; 59us; 1756us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 93us; 1757us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 192us; 913us; 0us; 17220us; 0us; 17251us; 0us; 17252us; 0us; 17253us; 3us; 17261us; 10us; 926us; 158us; 1588us; 192us; 913us; 0us; 17254us; 0us; 17255us; 0us; 17256us; 0us; 17257us; 1us; 17258us; 69us; 1593us; 30us; 17260us; 44us; 1629us; 66us; 1523us; 87us; 1555us; 90us; 1622us; 91us; 1510us; 105us; 1568us; 112us; 1566us; 120us; 1567us; 145us; 1565us; 162us; 763us; 163us; 762us; 164us; 760us; 165us; 759us; 166us; 758us; 167us; 756us; 168us; 757us; 169us; 755us; 170us; 753us; 171us; 751us; 172us; 749us; 173us; 754us; 174us; 752us; 176us; 750us; 177us; 748us; 182us; 1480us; 185us; 1625us; 188us; 1628us; 189us; 13us; 190us; 12us; 191us; 765us; 0us; 17259us; 0us; 17261us; 0us; 17262us; 8us; 32768us; 44us; 1629us; 66us; 1600us; 90us; 1622us; 91us; 1604us; 174us; 1612us; 182us; 1621us; 185us; 1625us; 188us; 1628us; 3us; 32768us; 95us; 1619us; 158us; 1599us; 182us; 1620us; 0us; 17264us; 1us; 32768us; 158us; 1601us; 0us; 17265us; 1us; 17266us; 76us; 1631us; 0us; 17267us; 7us; 32768us; 44us; 1629us; 90us; 1622us; 91us; 1604us; 174us; 1612us; 182us; 1621us; 185us; 1625us; 188us; 1628us; 5us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 95us; 1619us; 182us; 1620us; 0us; 17268us; 1us; 17269us; 185us; 1608us; 2us; 32768us; 61us; 1610us; 174us; 1609us; 0us; 17270us; 1us; 32768us; 174us; 1611us; 0us; 17271us; 0us; 17272us; 6us; 17273us; 44us; 1629us; 90us; 1622us; 91us; 1604us; 174us; 1612us; 185us; 1625us; 188us; 1628us; 0us; 17274us; 0us; 17275us; 0us; 17276us; 0us; 17277us; 0us; 17278us; 7us; 32768us; 44us; 1629us; 90us; 1622us; 91us; 1604us; 174us; 1612us; 182us; 1621us; 185us; 1625us; 188us; 1628us; 7us; 32768us; 44us; 1629us; 90us; 1622us; 91us; 1604us; 174us; 1612us; 182us; 1621us; 185us; 1625us; 188us; 1628us; 7us; 32768us; 44us; 1629us; 90us; 1622us; 91us; 1604us; 174us; 1612us; 182us; 1621us; 185us; 1625us; 188us; 1628us; 1us; 32768us; 188us; 1628us; 0us; 17279us; 0us; 17280us; 1us; 32768us; 188us; 1628us; 1us; 17295us; 188us; 1628us; 0us; 17281us; 0us; 17282us; 0us; 17283us; 0us; 17284us; 8us; 32768us; 10us; 926us; 15us; 1758us; 35us; 1754us; 37us; 1755us; 59us; 1756us; 93us; 1757us; 188us; 1628us; 192us; 913us; 0us; 17285us; 0us; 17286us; 27us; 32768us; 56us; 1674us; 61us; 1656us; 62us; 1654us; 69us; 1658us; 74us; 1662us; 82us; 1666us; 88us; 1663us; 89us; 1664us; 95us; 1657us; 101us; 1659us; 141us; 1669us; 142us; 1665us; 152us; 1671us; 155us; 1668us; 157us; 1660us; 158us; 1661us; 178us; 1667us; 179us; 1655us; 180us; 1652us; 181us; 1651us; 182us; 1653us; 183us; 1646us; 184us; 1650us; 185us; 1649us; 186us; 1648us; 187us; 1647us; 192us; 1637us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 17287us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 17288us; 0us; 17289us; 1us; 32768us; 56us; 1641us; 5us; 32768us; 66us; 1643us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 188us; 1673us; 0us; 17290us; 1us; 32768us; 56us; 1644us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 17291us; 0us; 17292us; 0us; 17293us; 0us; 17294us; 0us; 17295us; 0us; 17296us; 0us; 17297us; 0us; 17298us; 0us; 17299us; 0us; 17300us; 0us; 17301us; 0us; 17302us; 0us; 17303us; 0us; 17304us; 0us; 17305us; 0us; 17306us; 0us; 17307us; 0us; 17308us; 0us; 17309us; 0us; 17310us; 0us; 17311us; 0us; 17312us; 0us; 17313us; 0us; 17314us; 1us; 17315us; 141us; 1670us; 0us; 17316us; 1us; 32768us; 153us; 1672us; 0us; 17317us; 0us; 17318us; 1us; 32768us; 188us; 1673us; 0us; 17319us; 0us; 17320us; 0us; 17321us; 0us; 17322us; 1us; 17323us; 76us; 1681us; 0us; 17324us; 4us; 32768us; 91us; 1634us; 99us; 1639us; 188us; 1628us; 192us; 1683us; 0us; 17325us; 0us; 17326us; 0us; 17327us; 0us; 17328us; 0us; 17329us; 0us; 17330us; 3us; 17331us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 0us; 17332us; 0us; 17333us; 0us; 17334us; 2us; 17335us; 20us; 1691us; 83us; 1690us; 0us; 17336us; 3us; 17340us; 20us; 1687us; 67us; 1686us; 83us; 1685us; 0us; 17339us; 1us; 17341us; 83us; 1698us; 1us; 17342us; 20us; 1699us; 0us; 17343us; 0us; 17344us; 0us; 17345us; 0us; 17346us; 0us; 17347us; 0us; 17348us; 0us; 17349us; 0us; 17350us; 0us; 17352us; 0us; 17354us; 0us; 17356us; 0us; 17358us; 0us; 17360us; 0us; 17364us; 0us; 17366us; 0us; 17368us; 0us; 17369us; 0us; 17370us; 0us; 17371us; 0us; 17372us; 0us; 17373us; 0us; 17374us; 0us; 17375us; 0us; 17376us; 0us; 17377us; 0us; 17378us; 0us; 17379us; 0us; 17380us; 0us; 17382us; 3us; 32768us; 35us; 1727us; 36us; 1730us; 107us; 1731us; 3us; 17404us; 35us; 1727us; 36us; 1730us; 107us; 1731us; 0us; 17384us; 0us; 17385us; 0us; 17386us; 3us; 32768us; 37us; 1732us; 38us; 1735us; 147us; 1736us; 3us; 17405us; 37us; 1732us; 38us; 1735us; 147us; 1736us; 0us; 17387us; 0us; 17388us; 0us; 17389us; 3us; 32768us; 58us; 1740us; 59us; 1737us; 60us; 1739us; 0us; 17390us; 0us; 17391us; 0us; 17392us; 3us; 32768us; 92us; 1744us; 93us; 1741us; 94us; 1743us; 0us; 17393us; 0us; 17394us; 0us; 17395us; 3us; 32768us; 14us; 1748us; 15us; 1745us; 16us; 1747us; 0us; 17396us; 0us; 17397us; 0us; 17398us; 0us; 17399us; 0us; 17400us; 0us; 17401us; 0us; 17402us; 0us; 17403us; 0us; 17404us; 0us; 17405us; 0us; 17406us; 0us; 17407us; 0us; 17408us; 0us; 17409us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 17us; 18us; 101us; 102us; 110us; 111us; 112us; 113us; 114us; 116us; 117us; 120us; 121us; 122us; 123us; 124us; 125us; 126us; 127us; 132us; 133us; 138us; 139us; 144us; 145us; 151us; 152us; 158us; 159us; 165us; 166us; 183us; 184us; 188us; 263us; 289us; 290us; 293us; 294us; 296us; 297us; 302us; 303us; 306us; 307us; 309us; 310us; 315us; 316us; 320us; 323us; 325us; 328us; 330us; 332us; 333us; 335us; 336us; 338us; 355us; 356us; 358us; 359us; 361us; 362us; 364us; 447us; 448us; 452us; 461us; 480us; 481us; 482us; 487us; 562us; 646us; 647us; 648us; 649us; 665us; 671us; 673us; 674us; 675us; 682us; 683us; 684us; 688us; 692us; 708us; 709us; 713us; 718us; 719us; 801us; 807us; 809us; 810us; 811us; 818us; 819us; 820us; 821us; 826us; 901us; 930us; 1012us; 1013us; 1014us; 1015us; 1037us; 1038us; 1120us; 1121us; 1125us; 1132us; 1137us; 1142us; 1143us; 1144us; 1145us; 1149us; 1161us; 1162us; 1164us; 1165us; 1233us; 1234us; 1236us; 1238us; 1239us; 1240us; 1242us; 1248us; 1249us; 1252us; 1253us; 1254us; 1263us; 1268us; 1269us; 1271us; 1278us; 1284us; 1285us; 1286us; 1292us; 1293us; 1294us; 1295us; 1296us; 1298us; 1380us; 1384us; 1385us; 1386us; 1387us; 1394us; 1398us; 1399us; 1400us; 1401us; 1405us; 1414us; 1417us; 1423us; 1424us; 1425us; 1426us; 1427us; 1430us; 1432us; 1434us; 1436us; 1438us; 1442us; 1446us; 1449us; 1451us; 1483us; 1485us; 1486us; 1554us; 1580us; 1647us; 1676us; 1677us; 1681us; 1682us; 1698us; 1700us; 1704us; 1705us; 1721us; 1723us; 1724us; 1725us; 1727us; 1728us; 1743us; 1746us; 1755us; 1757us; 1758us; 1760us; 1762us; 1763us; 1764us; 1765us; 1766us; 1776us; 1777us; 1781us; 1808us; 1809us; 1813us; 1817us; 1844us; 1845us; 1848us; 1853us; 1856us; 1883us; 1884us; 1886us; 1887us; 1889us; 1890us; 1892us; 1893us; 1895us; 1896us; 1898us; 1899us; 1901us; 1903us; 1904us; 1907us; 1915us; 1916us; 1917us; 1930us; 1932us; 1938us; 1940us; 1944us; 1946us; 1947us; 1949us; 1950us; 1951us; 1952us; 1954us; 1986us; 1987us; 1988us; 1994us; 1998us; 1999us; 2000us; 2002us; 2003us; 2010us; 2016us; 2017us; 2018us; 2024us; 2028us; 2029us; 2030us; 2037us; 2043us; 2044us; 2045us; 2046us; 2047us; 2050us; 2061us; 2062us; 2068us; 2079us; 2080us; 2081us; 2082us; 2083us; 2084us; 2086us; 2087us; 2091us; 2092us; 2096us; 2099us; 2100us; 2101us; 2103us; 2107us; 2108us; 2112us; 2116us; 2127us; 2170us; 2172us; 2176us; 2180us; 2183us; 2185us; 2217us; 2220us; 2222us; 2223us; 2253us; 2260us; 2290us; 2297us; 2299us; 2300us; 2302us; 2303us; 2305us; 2306us; 2308us; 2340us; 2341us; 2345us; 2347us; 2348us; 2350us; 2352us; 2353us; 2394us; 2401us; 2402us; 2403us; 2407us; 2410us; 2412us; 2414us; 2416us; 2423us; 2424us; 2436us; 2438us; 2446us; 2448us; 2454us; 2456us; 2457us; 2458us; 2460us; 2461us; 2462us; 2463us; 2465us; 2497us; 2498us; 2499us; 2505us; 2509us; 2510us; 2511us; 2516us; 2517us; 2524us; 2530us; 2531us; 2532us; 2539us; 2545us; 2546us; 2547us; 2548us; 2549us; 2560us; 2561us; 2564us; 2575us; 2576us; 2578us; 2579us; 2581us; 2584us; 2585us; 2586us; 2588us; 2590us; 2591us; 2593us; 2629us; 2631us; 2633us; 2701us; 2702us; 2738us; 2740us; 2744us; 2812us; 2813us; 2814us; 2816us; 2817us; 2821us; 2825us; 2841us; 2889us; 2890us; 2891us; 2894us; 2896us; 2897us; 2927us; 2935us; 2936us; 2938us; 2942us; 2945us; 2947us; 2979us; 2982us; 2984us; 2985us; 2986us; 2988us; 2989us; 2991us; 2992us; 2994us; 2995us; 3030us; 3032us; 3034us; 3102us; 3104us; 3105us; 3107us; 3108us; 3110us; 3114us; 3116us; 3118us; 3149us; 3150us; 3152us; 3156us; 3158us; 3160us; 3162us; 3230us; 3233us; 3234us; 3265us; 3266us; 3268us; 3272us; 3273us; 3274us; 3278us; 3279us; 3280us; 3281us; 3282us; 3283us; 3284us; 3287us; 3291us; 3292us; 3299us; 3303us; 3304us; 3310us; 3314us; 3315us; 3352us; 3382us; 3383us; 3410us; 3412us; 3413us; 3414us; 3415us; 3417us; 3418us; 3419us; 3422us; 3423us; 3424us; 3426us; 3432us; 3433us; 3434us; 3435us; 3438us; 3453us; 3454us; 3458us; 3463us; 3467us; 3469us; 3470us; 3472us; 3473us; 3474us; 3476us; 3478us; 3479us; 3480us; 3481us; 3485us; 3518us; 3521us; 3523us; 3526us; 3527us; 3528us; 3529us; 3530us; 3562us; 3566us; 3567us; 3570us; 3576us; 3577us; 3578us; 3582us; 3583us; 3613us; 3615us; 3616us; 3617us; 3618us; 3619us; 3620us; 3621us; 3627us; 3631us; 3634us; 3636us; 3637us; 3638us; 3640us; 3645us; 3646us; 3649us; 3651us; 3653us; 3656us; 3657us; 3658us; 3661us; 3662us; 3664us; 3666us; 3668us; 3669us; 3670us; 3672us; 3676us; 3678us; 3680us; 3681us; 3682us; 3710us; 3715us; 3717us; 3719us; 3721us; 3726us; 3727us; 3728us; 3731us; 3733us; 3764us; 3765us; 3768us; 3799us; 3800us; 3806us; 3807us; 3811us; 3812us; 3813us; 3815us; 3819us; 3820us; 3823us; 3828us; 3830us; 3832us; 3834us; 3838us; 3839us; 3842us; 3843us; 3844us; 3847us; 3848us; 3849us; 3851us; 3852us; 3854us; 3856us; 3857us; 3860us; 3861us; 3863us; 3865us; 3866us; 3870us; 3874us; 3879us; 3880us; 3911us; 3913us; 3914us; 3946us; 3948us; 3949us; 3968us; 3970us; 3971us; 3972us; 4002us; 4006us; 4007us; 4009us; 4013us; 4014us; 4019us; 4020us; 4039us; 4041us; 4087us; 4088us; 4119us; 4120us; 4121us; 4129us; 4159us; 4160us; 4163us; 4170us; 4171us; 4172us; 4174us; 4175us; 4179us; 4181us; 4183us; 4214us; 4215us; 4217us; 4218us; 4220us; 4221us; 4222us; 4224us; 4228us; 4230us; 4232us; 4233us; 4235us; 4266us; 4267us; 4270us; 4272us; 4275us; 4277us; 4279us; 4282us; 4283us; 4284us; 4352us; 4353us; 4355us; 4358us; 4362us; 4363us; 4431us; 4435us; 4436us; 4437us; 4438us; 4439us; 4440us; 4441us; 4442us; 4444us; 4448us; 4450us; 4453us; 4455us; 4460us; 4464us; 4465us; 4467us; 4469us; 4471us; 4472us; 4474us; 4475us; 4479us; 4486us; 4487us; 4489us; 4495us; 4497us; 4499us; 4500us; 4501us; 4502us; 4504us; 4506us; 4507us; 4511us; 4513us; 4514us; 4517us; 4519us; 4520us; 4522us; 4523us; 4524us; 4526us; 4562us; 4564us; 4568us; 4637us; 4638us; 4639us; 4640us; 4707us; 4713us; 4714us; 4715us; 4716us; 4717us; 4719us; 4720us; 4723us; 4726us; 4794us; 4795us; 4798us; 4799us; 4800us; 4803us; 4834us; 4835us; 4836us; 4837us; 4838us; 4839us; 4840us; 4841us; 4842us; 4843us; 4844us; 4845us; 4846us; 4847us; 4848us; 4849us; 4851us; 4852us; 4853us; 4854us; 4855us; 4857us; 4859us; 4860us; 4866us; 4867us; 4869us; 4870us; 4872us; 4875us; 4906us; 4907us; 4911us; 4915us; 4916us; 4925us; 4931us; 4932us; 4933us; 4934us; 4938us; 4939us; 4940us; 4944us; 4946us; 4949us; 4952us; 4954us; 4956us; 4963us; 4970us; 4972us; 4973us; 5009us; 5045us; 5047us; 5048us; 5049us; 5085us; 5121us; 5157us; 5193us; 5223us; 5260us; 5261us; 5296us; 5297us; 5332us; 5333us; 5363us; 5365us; 5366us; 5403us; 5404us; 5439us; 5440us; 5475us; 5476us; 5477us; 5479us; 5480us; 5483us; 5487us; 5488us; 5525us; 5527us; 5528us; 5565us; 5567us; 5568us; 5569us; 5571us; 5573us; 5574us; 5575us; 5576us; 5577us; 5578us; 5579us; 5642us; 5648us; 5649us; 5650us; 5654us; 5657us; 5658us; 5665us; 5670us; 5674us; 5677us; 5681us; 5685us; 5688us; 5691us; 5698us; 5707us; 5723us; 5731us; 5733us; 5734us; 5771us; 5773us; 5775us; 5806us; 5807us; 5844us; 5881us; 5882us; 5919us; 5956us; 5993us; 6030us; 6031us; 6034us; 6035us; 6038us; 6039us; 6042us; 6079us; 6080us; 6117us; 6118us; 6185us; 6191us; 6192us; 6193us; 6194us; 6261us; 6265us; 6266us; 6292us; 6294us; 6295us; 6297us; 6328us; 6329us; 6359us; 6390us; 6421us; 6488us; 6489us; 6556us; 6557us; 6559us; 6626us; 6630us; 6631us; 6701us; 6702us; 6705us; 6708us; 6711us; 6714us; 6717us; 6719us; 6721us; 6723us; 6725us; 6729us; 6733us; 6737us; 6738us; 6740us; 6808us; 6809us; 6810us; 6880us; 6881us; 6882us; 6951us; 6952us; 6953us; 6954us; 6955us; 6956us; 7023us; 7028us; 7029us; 7030us; 7097us; 7103us; 7104us; 7105us; 7173us; 7174us; 7243us; 7273us; 7274us; 7275us; 7276us; 7343us; 7344us; 7403us; 7404us; 7472us; 7473us; 7533us; 7534us; 7603us; 7633us; 7702us; 7707us; 7708us; 7709us; 7712us; 7713us; 7714us; 7715us; 7716us; 7760us; 7771us; 7846us; 7856us; 7857us; 7858us; 7859us; 7860us; 7861us; 7866us; 7936us; 7941us; 7942us; 7943us; 7944us; 7945us; 7946us; 8014us; 8017us; 8018us; 8019us; 8020us; 8021us; 8088us; 8114us; 8181us; 8207us; 8243us; 8311us; 8313us; 8315us; 8383us; 8384us; 8420us; 8488us; 8492us; 8494us; 8563us; 8564us; 8565us; 8632us; 8634us; 8636us; 8704us; 8705us; 8773us; 8777us; 8778us; 8780us; 8781us; 8848us; 8849us; 8875us; 8896us; 8917us; 8927us; 8948us; 8967us; 8986us; 8996us; 9006us; 9016us; 9026us; 9036us; 9046us; 9056us; 9058us; 9067us; 9072us; 9077us; 9079us; 9081us; 9083us; 9109us; 9135us; 9161us; 9191us; 9215us; 9239us; 9266us; 9291us; 9316us; 9343us; 9370us; 9396us; 9424us; 9450us; 9481us; 9482us; 9513us; 9514us; 9545us; 9546us; 9613us; 9615us; 9683us; 9684us; 9686us; 9754us; 9822us; 9890us; 9958us; 10026us; 10094us; 10162us; 10230us; 10298us; 10366us; 10434us; 10502us; 10570us; 10638us; 10706us; 10774us; 10842us; 10910us; 10978us; 11046us; 11047us; 11048us; 11049us; 11050us; 11051us; 11052us; 11053us; 11054us; 11055us; 11056us; 11057us; 11058us; 11059us; 11060us; 11061us; 11062us; 11063us; 11064us; 11065us; 11066us; 11067us; 11134us; 11138us; 11139us; 11178us; 11179us; 11218us; 11222us; 11223us; 11224us; 11225us; 11263us; 11264us; 11265us; 11266us; 11267us; 11270us; 11273us; 11311us; 11312us; 11313us; 11314us; 11315us; 11382us; 11449us; 11450us; 11454us; 11455us; 11522us; 11524us; 11591us; 11597us; 11598us; 11599us; 11666us; 11668us; 11735us; 11741us; 11742us; 11743us; 11810us; 11811us; 11812us; 11886us; 11887us; 11961us; 11962us; 12005us; 12048us; 12049us; 12092us; 12135us; 12136us; 12179us; 12222us; 12223us; 12266us; 12309us; 12310us; 12353us; 12396us; 12397us; 12440us; 12483us; 12484us; 12515us; 12546us; 12549us; 12583us; 12611us; 12639us; 12640us; 12646us; 12647us; 12648us; 12691us; 12692us; 12735us; 12736us; 12771us; 12809us; 12810us; 12816us; 12850us; 12856us; 12862us; 12865us; 12867us; 12873us; 12879us; 12913us; 12947us; 12949us; 12950us; 12984us; 13018us; 13025us; 13026us; 13028us; 13035us; 13036us; 13040us; 13044us; 13045us; 13048us; 13049us; 13050us; 13051us; 13120us; 13124us; 13125us; 13126us; 13127us; 13128us; 13129us; 13130us; 13131us; 13217us; 13221us; 13223us; 13225us; 13226us; 13230us; 13231us; 13302us; 13306us; 13307us; 13308us; 13309us; 13310us; 13313us; 13314us; 13383us; 13386us; 13387us; 13456us; 13459us; 13460us; 13529us; 13531us; 13532us; 13599us; 13666us; 13667us; 13668us; 13669us; 13670us; 13671us; 13672us; 13673us; 13674us; 13675us; 13676us; 13745us; 13749us; 13750us; 13751us; 13753us; 13754us; 13755us; 13824us; 13894us; 13898us; 13899us; 13900us; 13901us; 13902us; 13971us; 13975us; 13976us; 13977us; 13978us; 13979us; 14057us; 14151us; 14245us; 14246us; 14256us; 14257us; 14258us; 14259us; 14260us; 14261us; 14262us; 14263us; 14264us; 14265us; 14267us; 14269us; 14271us; 14275us; 14342us; 14343us; 14344us; 14345us; 14346us; 14351us; 14356us; 14357us; 14359us; 14360us; 14434us; 14440us; 14441us; 14442us; 14443us; 14444us; 14445us; 14446us; 14447us; 14448us; 14449us; 14450us; 14451us; 14520us; 14587us; 14588us; 14655us; 14656us; 14730us; 14731us; 14732us; 14733us; 14800us; 14867us; 14870us; 14874us; 14875us; 14911us; 14913us; 14914us; 14915us; 14916us; 14918us; 14949us; 14953us; 14954us; 14985us; 14986us; 15021us; 15022us; 15052us; 15055us; 15082us; 15083us; 15086us; 15087us; 15155us; 15156us; 15159us; 15160us; 15162us; 15230us; 15231us; 15234us; 15235us; 15239us; 15240us; 15243us; 15244us; 15250us; 15252us; 15253us; 15254us; 15257us; 15259us; 15260us; 15261us; 15265us; 15267us; 15269us; 15270us; 15271us; 15273us; 15274us; 15275us; 15284us; 15359us; 15360us; 15361us; 15362us; 15366us; 15368us; 15372us; 15373us; 15376us; 15377us; 15378us; 15379us; 15383us; 15384us; 15387us; 15389us; 15390us; 15394us; 15395us; 15399us; 15400us; 15404us; 15405us; 15409us; 15410us; 15440us; 15449us; 15453us; 15455us; 15456us; 15457us; 15458us; 15493us; 15495us; 15564us; 15565us; 15566us; 15602us; 15605us; 15675us; 15679us; 15680us; 15681us; 15683us; 15684us; 15685us; 15687us; 15688us; 15690us; 15691us; 15730us; 15731us; 15770us; 15772us; 15773us; 15775us; 15780us; 15782us; 15787us; 15819us; 15820us; 15822us; 15854us; 15855us; 15857us; 15889us; 15890us; 15892us; 15924us; 15925us; 15956us; 15964us; 15994us; 16001us; 16003us; 16005us; 16035us; 16042us; 16050us; 16080us; 16087us; 16089us; 16091us; 16121us; 16128us; 16130us; 16161us; 16162us; 16171us; 16201us; 16202us; 16232us; 16233us; 16263us; 16264us; 16273us; 16303us; 16304us; 16334us; 16335us; 16343us; 16373us; 16374us; 16376us; 16377us; 16379us; 16381us; 16383us; 16388us; 16390us; 16391us; 16398us; 16399us; 16462us; 16464us; 16466us; 16467us; 16530us; 16531us; 16594us; 16626us; 16658us; 16662us; 16666us; 16671us; 16676us; 16677us; 16740us; 16741us; 16772us; 16803us; 16804us; 16867us; 16869us; 16871us; 16902us; 16933us; 16934us; 16997us; 17000us; 17001us; 17004us; 17005us; 17008us; 17009us; 17011us; 17012us; 17014us; 17045us; 17046us; 17048us; 17053us; 17084us; 17085us; 17086us; 17151us; 17154us; 17157us; 17160us; 17161us; 17224us; 17226us; 17228us; 17229us; 17292us; 17293us; 17323us; 17325us; 17326us; 17327us; 17359us; 17365us; 17372us; 17373us; 17374us; 17375us; 17376us; 17410us; 17411us; 17412us; 17416us; 17417us; 17418us; 17421us; 17425us; 17426us; 17434us; 17435us; 17436us; 17438us; 17439us; 17473us; 17475us; 17513us; 17514us; 17515us; 17516us; 17517us; 17521us; 17522us; 17523us; 17524us; 17525us; 17527us; 17558us; 17559us; 17560us; 17561us; 17570us; 17574us; 17575us; 17577us; 17578us; 17580us; 17581us; 17589us; 17595us; 17596us; 17598us; 17601us; 17602us; 17604us; 17605us; 17606us; 17613us; 17614us; 17615us; 17616us; 17617us; 17618us; 17626us; 17634us; 17642us; 17644us; 17645us; 17646us; 17648us; 17650us; 17651us; 17652us; 17653us; 17654us; 17663us; 17664us; 17665us; 17693us; 17697us; 17698us; 17702us; 17703us; 17704us; 17706us; 17712us; 17713us; 17715us; 17719us; 17720us; 17721us; 17722us; 17723us; 17724us; 17725us; 17726us; 17727us; 17728us; 17729us; 17730us; 17731us; 17732us; 17733us; 17734us; 17735us; 17736us; 17737us; 17738us; 17739us; 17740us; 17741us; 17742us; 17743us; 17745us; 17746us; 17748us; 17749us; 17750us; 17752us; 17753us; 17754us; 17755us; 17756us; 17758us; 17759us; 17764us; 17765us; 17766us; 17767us; 17768us; 17769us; 17770us; 17774us; 17775us; 17776us; 17777us; 17780us; 17781us; 17785us; 17786us; 17788us; 17790us; 17791us; 17792us; 17793us; 17794us; 17795us; 17796us; 17797us; 17798us; 17799us; 17800us; 17801us; 17802us; 17803us; 17804us; 17805us; 17806us; 17807us; 17808us; 17809us; 17810us; 17811us; 17812us; 17813us; 17814us; 17815us; 17816us; 17817us; 17818us; 17819us; 17823us; 17827us; 17828us; 17829us; 17830us; 17834us; 17838us; 17839us; 17840us; 17841us; 17845us; 17846us; 17847us; 17848us; 17852us; 17853us; 17854us; 17855us; 17859us; 17860us; 17861us; 17862us; 17863us; 17864us; 17865us; 17866us; 17867us; 17868us; 17869us; 17870us; 17871us; 17872us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 0us; 2us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 2us; 3us; 2us; 2us; 3us; 2us; 3us; 2us; 1us; 2us; 2us; 1us; 3us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 4us; 1us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 3us; 3us; 2us; 4us; 3us; 3us; 1us; 1us; 0us; 5us; 4us; 3us; 1us; 2us; 2us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 5us; 3us; 5us; 2us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 0us; 3us; 1us; 1us; 5us; 5us; 3us; 3us; 2us; 12us; 0us; 2us; 4us; 3us; 5us; 3us; 1us; 0us; 1us; 2us; 5us; 4us; 4us; 2us; 1us; 3us; 3us; 4us; 6us; 2us; 2us; 2us; 2us; 2us; 3us; 1us; 3us; 2us; 7us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 0us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 0us; 2us; 3us; 3us; 1us; 3us; 11us; 4us; 4us; 4us; 5us; 5us; 5us; 3us; 3us; 0us; 1us; 3us; 2us; 8us; 7us; 6us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 2us; 0us; 3us; 2us; 3us; 3us; 1us; 3us; 6us; 5us; 4us; 1us; 2us; 3us; 4us; 5us; 5us; 10us; 3us; 4us; 5us; 5us; 8us; 5us; 6us; 8us; 0us; 2us; 3us; 1us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 0us; 3us; 0us; 3us; 0us; 3us; 0us; 3us; 5us; 2us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 4us; 3us; 4us; 1us; 1us; 6us; 3us; 3us; 3us; 5us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 1us; 2us; 5us; 3us; 1us; 0us; 5us; 1us; 0us; 1us; 0us; 0us; 2us; 3us; 1us; 4us; 3us; 3us; 4us; 3us; 5us; 7us; 4us; 4us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 1us; 4us; 6us; 6us; 6us; 1us; 3us; 4us; 2us; 4us; 2us; 3us; 4us; 1us; 3us; 1us; 3us; 2us; 2us; 5us; 2us; 2us; 1us; 5us; 1us; 3us; 0us; 2us; 2us; 3us; 1us; 2us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 8us; 1us; 1us; 0us; 3us; 3us; 2us; 3us; 1us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 0us; 2us; 1us; 6us; 6us; 5us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 2us; 3us; 2us; 1us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 4us; 4us; 2us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 3us; 3us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 4us; 3us; 3us; 2us; 2us; 2us; 1us; 2us; 2us; 1us; 5us; 5us; 5us; 3us; 2us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 2us; 4us; 3us; 2us; 2us; 7us; 7us; 7us; 5us; 3us; 4us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 3us; 2us; 2us; 0us; 2us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 2us; 4us; 4us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 1us; 0us; 1us; 5us; 3us; 3us; 3us; 3us; 2us; 3us; 5us; 7us; 9us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 6us; 1us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 0us; 1us; 1us; 3us; 5us; 3us; 2us; 3us; 3us; 3us; 2us; 5us; 6us; 2us; 0us; 0us; 1us; 0us; 4us; 0us; 2us; 3us; 6us; 5us; 1us; 2us; 5us; 5us; 4us; 6us; 1us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 3us; 1us; 2us; 4us; 3us; 2us; 5us; 4us; 2us; 1us; 0us; 2us; 3us; 3us; 2us; 0us; 2us; 2us; 5us; 1us; 1us; 4us; 4us; 5us; 5us; 5us; 4us; 4us; 3us; 2us; 3us; 1us; 3us; 1us; 3us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 4us; 5us; 2us; 3us; 4us; 1us; 3us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 2us; 3us; 4us; 5us; 4us; 3us; 3us; 0us; 1us; 3us; 4us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 1us; 3us; 4us; 2us; 1us; 1us; 3us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 2us; 3us; 4us; 3us; 1us; 2us; 6us; 6us; 4us; 3us; 3us; 2us; 2us; 1us; 3us; 2us; 1us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 1us; 3us; 4us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 2us; 2us; 0us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 3us; 4us; 5us; 5us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 10us; 10us; 11us; 12us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 16us; 17us; 17us; 18us; 18us; 19us; 20us; 20us; 21us; 21us; 22us; 23us; 23us; 24us; 24us; 25us; 25us; 25us; 25us; 26us; 26us; 26us; 27us; 27us; 27us; 28us; 28us; 28us; 28us; 29us; 29us; 30us; 30us; 30us; 30us; 30us; 31us; 31us; 31us; 31us; 31us; 32us; 32us; 33us; 33us; 33us; 33us; 33us; 33us; 33us; 33us; 34us; 34us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 36us; 36us; 36us; 37us; 38us; 39us; 39us; 39us; 39us; 39us; 39us; 39us; 40us; 41us; 41us; 41us; 42us; 42us; 42us; 43us; 43us; 44us; 44us; 45us; 45us; 45us; 45us; 46us; 46us; 47us; 47us; 47us; 48us; 48us; 48us; 48us; 49us; 50us; 50us; 51us; 51us; 52us; 52us; 53us; 53us; 53us; 54us; 54us; 54us; 54us; 55us; 55us; 55us; 55us; 56us; 56us; 56us; 57us; 57us; 58us; 59us; 59us; 59us; 59us; 60us; 60us; 60us; 61us; 61us; 61us; 61us; 62us; 62us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 64us; 65us; 65us; 66us; 66us; 66us; 66us; 67us; 67us; 67us; 68us; 68us; 68us; 69us; 69us; 69us; 69us; 70us; 70us; 71us; 71us; 71us; 72us; 72us; 72us; 73us; 74us; 74us; 74us; 75us; 75us; 76us; 77us; 77us; 78us; 78us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 80us; 81us; 82us; 82us; 83us; 83us; 83us; 84us; 84us; 85us; 85us; 85us; 86us; 86us; 87us; 87us; 88us; 88us; 89us; 89us; 90us; 90us; 90us; 91us; 91us; 92us; 93us; 93us; 94us; 94us; 95us; 95us; 95us; 96us; 96us; 97us; 97us; 97us; 97us; 98us; 98us; 99us; 99us; 99us; 99us; 99us; 100us; 100us; 100us; 101us; 102us; 102us; 102us; 103us; 103us; 104us; 104us; 104us; 105us; 105us; 106us; 106us; 107us; 108us; 109us; 109us; 109us; 110us; 111us; 111us; 112us; 112us; 113us; 113us; 114us; 114us; 115us; 115us; 115us; 115us; 115us; 115us; 115us; 115us; 115us; 115us; 116us; 116us; 117us; 117us; 117us; 118us; 119us; 119us; 120us; 120us; 120us; 120us; 121us; 121us; 121us; 122us; 122us; 122us; 123us; 123us; 124us; 124us; 124us; 125us; 125us; 126us; 127us; 128us; 129us; 130us; 131us; 132us; 132us; 133us; 133us; 134us; 135us; 135us; 136us; 137us; 138us; 139us; 139us; 139us; 139us; 140us; 140us; 141us; 142us; 142us; 142us; 143us; 143us; 144us; 144us; 145us; 145us; 145us; 145us; 145us; 146us; 146us; 147us; 148us; 148us; 149us; 149us; 150us; 150us; 150us; 151us; 151us; 151us; 152us; 153us; 153us; 154us; 155us; 155us; 156us; 156us; 157us; 157us; 157us; 157us; 157us; 157us; 157us; 157us; 157us; 157us; 157us; 157us; 157us; 157us; 157us; 157us; 157us; 158us; 158us; 159us; 160us; 160us; 160us; 160us; 161us; 161us; 162us; 162us; 162us; 162us; 162us; 163us; 163us; 163us; 163us; 163us; 163us; 164us; 164us; 165us; 165us; 166us; 166us; 166us; 166us; 166us; 166us; 167us; 167us; 167us; 167us; 168us; 168us; 168us; 168us; 168us; 168us; 168us; 168us; 168us; 168us; 168us; 168us; 168us; 168us; 168us; 168us; 169us; 169us; 170us; 170us; 170us; 170us; 170us; 170us; 170us; 170us; 171us; 171us; 172us; 172us; 173us; 174us; 174us; 175us; 176us; 176us; 176us; 177us; 177us; 177us; 178us; 178us; 179us; 179us; 180us; 180us; 181us; 181us; 181us; 181us; 181us; 181us; 182us; 182us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 183us; 184us; 184us; 185us; 185us; 185us; 186us; 186us; 186us; 186us; 187us; 188us; 188us; 188us; 188us; 188us; 189us; 189us; 190us; 191us; 192us; 192us; 192us; 193us; 193us; 193us; 193us; 193us; 193us; 194us; 194us; 194us; 194us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 196us; 196us; 197us; 197us; 198us; 198us; 198us; 198us; 198us; 198us; 198us; 198us; 198us; 198us; 198us; 198us; 198us; 198us; 198us; 199us; 199us; 199us; 199us; 199us; 199us; 199us; 199us; 199us; 199us; 199us; 199us; 199us; 200us; 200us; 200us; 200us; 201us; 201us; 201us; 201us; 201us; 201us; 201us; 201us; 201us; 202us; 202us; 202us; 202us; 203us; 203us; 203us; 203us; 204us; 204us; 204us; 204us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 206us; 206us; 206us; 207us; 207us; 208us; 208us; 209us; 209us; 209us; 209us; 209us; 210us; 210us; 210us; 211us; 211us; 212us; 212us; 213us; 213us; 213us; 214us; 215us; 215us; 215us; 215us; 216us; 217us; 218us; 218us; 219us; 219us; 220us; 220us; 221us; 221us; 221us; 222us; 222us; 222us; 222us; 222us; 222us; 222us; 222us; 223us; 223us; 224us; 224us; 224us; 224us; 225us; 225us; 226us; 226us; 227us; 227us; 227us; 227us; 227us; 228us; 228us; 228us; 229us; 229us; 229us; 230us; 230us; 231us; 231us; 231us; 232us; 233us; 233us; 233us; 234us; 235us; 235us; 236us; 236us; 236us; 236us; 236us; 236us; 236us; 236us; 237us; 237us; 238us; 238us; 239us; 239us; 240us; 240us; 241us; 241us; 242us; 242us; 243us; 243us; 244us; 244us; 244us; 244us; 244us; 244us; 245us; 245us; 246us; 246us; 246us; 246us; 247us; 247us; 247us; 248us; 248us; 249us; 249us; 250us; 250us; 251us; 251us; 251us; 251us; 251us; 251us; 251us; 252us; 252us; 252us; 252us; 253us; 254us; 254us; 254us; 255us; 255us; 255us; 256us; 256us; 256us; 256us; 256us; 256us; 256us; 257us; 257us; 257us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 259us; 259us; 260us; 260us; 260us; 260us; 260us; 260us; 260us; 261us; 261us; 261us; 262us; 262us; 263us; 264us; 264us; 265us; 265us; 265us; 266us; 266us; 266us; 266us; 267us; 267us; 268us; 268us; 268us; 268us; 269us; 269us; 270us; 271us; 272us; 272us; 272us; 272us; 273us; 273us; 273us; 273us; 273us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 274us; 275us; 276us; 276us; 277us; 277us; 278us; 278us; 278us; 278us; 279us; 280us; 280us; 280us; 281us; 281us; 282us; 282us; 283us; 283us; 284us; 284us; 285us; 285us; 286us; 286us; 286us; 286us; 287us; 287us; 287us; 288us; 288us; 288us; 288us; 289us; 289us; 290us; 290us; 291us; 291us; 292us; 292us; 293us; 293us; 294us; 294us; 295us; 295us; 296us; 296us; 297us; 297us; 298us; 298us; 299us; 299us; 300us; 300us; 301us; 301us; 302us; 303us; 303us; 303us; 304us; 304us; 305us; 305us; 305us; 306us; 306us; 306us; 307us; 307us; 307us; 308us; 308us; 308us; 309us; 309us; 309us; 310us; 310us; 310us; 310us; 310us; 311us; 311us; 311us; 311us; 311us; 311us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 16387us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 16392us; 16393us; 16395us; 16396us; 16397us; 16398us; 65535us; 16399us; 65535us; 16400us; 65535us; 16401us; 65535us; 16402us; 65535us; 16403us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 16419us; 65535us; 65535us; 16421us; 65535us; 16423us; 65535us; 16424us; 65535us; 65535us; 16426us; 65535us; 65535us; 65535us; 16427us; 16428us; 65535us; 65535us; 65535us; 16429us; 16430us; 16431us; 65535us; 65535us; 65535us; 16432us; 16433us; 65535us; 16434us; 16435us; 65535us; 65535us; 65535us; 16438us; 65535us; 65535us; 16439us; 65535us; 65535us; 65535us; 16441us; 16442us; 65535us; 16443us; 16444us; 16445us; 65535us; 65535us; 65535us; 65535us; 16447us; 16450us; 16451us; 65535us; 16452us; 65535us; 16453us; 65535us; 65535us; 65535us; 65535us; 16456us; 16457us; 16458us; 65535us; 65535us; 16459us; 65535us; 16460us; 65535us; 16461us; 65535us; 65535us; 16462us; 16463us; 65535us; 65535us; 16464us; 65535us; 16465us; 16466us; 65535us; 65535us; 16467us; 65535us; 65535us; 65535us; 16469us; 16470us; 65535us; 16471us; 16472us; 16473us; 16474us; 65535us; 65535us; 65535us; 16476us; 16477us; 16478us; 65535us; 65535us; 16480us; 16481us; 16482us; 65535us; 65535us; 65535us; 65535us; 16483us; 16484us; 16485us; 16486us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16488us; 65535us; 65535us; 65535us; 65535us; 16491us; 65535us; 16492us; 65535us; 65535us; 65535us; 16493us; 65535us; 65535us; 16494us; 16495us; 65535us; 16498us; 65535us; 65535us; 65535us; 65535us; 16499us; 65535us; 65535us; 16500us; 16501us; 16502us; 16503us; 65535us; 16504us; 65535us; 65535us; 16505us; 65535us; 65535us; 65535us; 16506us; 65535us; 65535us; 65535us; 65535us; 16507us; 65535us; 16508us; 65535us; 16509us; 65535us; 16510us; 65535us; 16511us; 65535us; 16512us; 65535us; 65535us; 16513us; 65535us; 65535us; 16515us; 16516us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16517us; 65535us; 16518us; 16519us; 16520us; 65535us; 65535us; 16521us; 16522us; 65535us; 65535us; 16523us; 16524us; 65535us; 16525us; 65535us; 65535us; 16526us; 16527us; 65535us; 65535us; 16528us; 16529us; 65535us; 65535us; 16530us; 16531us; 16532us; 16533us; 65535us; 65535us; 16535us; 65535us; 65535us; 16536us; 16537us; 16538us; 16539us; 16540us; 65535us; 16542us; 65535us; 16544us; 65535us; 65535us; 16545us; 16546us; 65535us; 65535us; 16548us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16549us; 65535us; 65535us; 65535us; 65535us; 65535us; 16552us; 65535us; 16553us; 65535us; 16554us; 65535us; 65535us; 16555us; 65535us; 65535us; 16556us; 65535us; 65535us; 16557us; 65535us; 65535us; 16560us; 16561us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16562us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16563us; 16564us; 65535us; 16565us; 16566us; 16567us; 65535us; 65535us; 16568us; 16569us; 65535us; 65535us; 16570us; 16571us; 65535us; 16572us; 65535us; 65535us; 16573us; 16574us; 65535us; 65535us; 16575us; 16576us; 16577us; 16578us; 65535us; 16579us; 65535us; 65535us; 16581us; 65535us; 16582us; 65535us; 65535us; 16583us; 16584us; 65535us; 65535us; 16586us; 65535us; 65535us; 65535us; 65535us; 65535us; 16587us; 65535us; 65535us; 65535us; 65535us; 16588us; 16589us; 65535us; 16591us; 65535us; 65535us; 65535us; 65535us; 16592us; 16593us; 65535us; 65535us; 16594us; 65535us; 65535us; 16595us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16596us; 16597us; 65535us; 16598us; 65535us; 16599us; 65535us; 16600us; 65535us; 65535us; 65535us; 65535us; 65535us; 16601us; 65535us; 16602us; 65535us; 65535us; 65535us; 65535us; 65535us; 16603us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16604us; 65535us; 16606us; 65535us; 65535us; 16607us; 16608us; 65535us; 16609us; 16611us; 16612us; 16613us; 16614us; 16615us; 65535us; 65535us; 16617us; 65535us; 65535us; 16619us; 65535us; 65535us; 16621us; 65535us; 65535us; 16623us; 65535us; 65535us; 16624us; 16625us; 16626us; 65535us; 16628us; 16629us; 65535us; 16631us; 16632us; 65535us; 65535us; 16633us; 16634us; 16635us; 65535us; 65535us; 16636us; 65535us; 65535us; 65535us; 65535us; 16638us; 65535us; 16639us; 16640us; 65535us; 65535us; 16641us; 16642us; 16643us; 65535us; 65535us; 65535us; 65535us; 65535us; 16644us; 16645us; 16646us; 16647us; 65535us; 65535us; 16648us; 65535us; 65535us; 16649us; 16650us; 65535us; 16651us; 65535us; 65535us; 16652us; 16653us; 16654us; 16655us; 16656us; 16657us; 65535us; 65535us; 65535us; 65535us; 16660us; 16661us; 65535us; 65535us; 16662us; 65535us; 65535us; 65535us; 65535us; 16663us; 16664us; 65535us; 16665us; 65535us; 65535us; 65535us; 16666us; 16667us; 65535us; 65535us; 65535us; 65535us; 16670us; 16671us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16677us; 16678us; 65535us; 65535us; 65535us; 16679us; 65535us; 65535us; 16680us; 65535us; 16681us; 65535us; 16682us; 16683us; 65535us; 65535us; 16684us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16685us; 65535us; 16686us; 16687us; 65535us; 16689us; 16690us; 65535us; 16691us; 65535us; 65535us; 16692us; 65535us; 16694us; 65535us; 65535us; 16695us; 65535us; 65535us; 65535us; 16697us; 65535us; 65535us; 16698us; 65535us; 65535us; 16699us; 65535us; 65535us; 16700us; 16701us; 65535us; 65535us; 16702us; 65535us; 65535us; 16703us; 65535us; 16704us; 65535us; 65535us; 65535us; 16706us; 65535us; 16707us; 16709us; 65535us; 65535us; 16710us; 65535us; 65535us; 16712us; 16713us; 65535us; 16714us; 65535us; 65535us; 65535us; 65535us; 16715us; 65535us; 16716us; 65535us; 16717us; 16718us; 65535us; 65535us; 65535us; 65535us; 16719us; 65535us; 65535us; 16721us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16725us; 16726us; 65535us; 16727us; 65535us; 65535us; 65535us; 16728us; 65535us; 65535us; 16729us; 16730us; 16731us; 16732us; 16733us; 16734us; 16735us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16736us; 65535us; 65535us; 65535us; 16740us; 65535us; 16741us; 65535us; 65535us; 16743us; 65535us; 65535us; 65535us; 65535us; 16745us; 16746us; 16747us; 65535us; 65535us; 16748us; 65535us; 65535us; 16751us; 65535us; 65535us; 16752us; 65535us; 16754us; 16755us; 65535us; 65535us; 65535us; 65535us; 65535us; 16756us; 16757us; 16758us; 65535us; 65535us; 16759us; 16760us; 16761us; 65535us; 65535us; 16763us; 65535us; 65535us; 65535us; 16765us; 65535us; 16766us; 16767us; 65535us; 65535us; 16768us; 16769us; 16770us; 16771us; 16772us; 16773us; 16774us; 16775us; 16776us; 16777us; 16778us; 16779us; 16780us; 16781us; 16782us; 65535us; 16783us; 16784us; 16785us; 16786us; 65535us; 65535us; 16788us; 65535us; 16790us; 65535us; 16791us; 65535us; 65535us; 65535us; 16792us; 65535us; 65535us; 16795us; 65535us; 65535us; 16796us; 16797us; 16798us; 65535us; 16799us; 16800us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16801us; 65535us; 65535us; 65535us; 65535us; 16806us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16812us; 65535us; 16813us; 65535us; 16814us; 65535us; 65535us; 16816us; 65535us; 16817us; 65535us; 16818us; 65535us; 16819us; 16821us; 65535us; 16822us; 65535us; 65535us; 16823us; 65535us; 65535us; 16824us; 65535us; 65535us; 16825us; 16826us; 65535us; 65535us; 16827us; 16828us; 16829us; 16830us; 16831us; 16832us; 65535us; 65535us; 16833us; 16834us; 65535us; 65535us; 16836us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16839us; 65535us; 65535us; 65535us; 65535us; 16843us; 65535us; 65535us; 16846us; 65535us; 65535us; 65535us; 65535us; 16851us; 65535us; 16852us; 65535us; 16853us; 65535us; 65535us; 16856us; 65535us; 16857us; 65535us; 65535us; 16858us; 16859us; 16860us; 65535us; 65535us; 16861us; 65535us; 65535us; 16863us; 65535us; 65535us; 16865us; 65535us; 65535us; 65535us; 65535us; 16867us; 65535us; 16870us; 65535us; 65535us; 65535us; 16871us; 65535us; 16873us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16874us; 65535us; 65535us; 16875us; 16876us; 65535us; 16877us; 16878us; 65535us; 16879us; 16880us; 16881us; 16882us; 16883us; 65535us; 65535us; 16884us; 16885us; 65535us; 65535us; 16886us; 16887us; 65535us; 16888us; 65535us; 65535us; 16889us; 16890us; 16891us; 65535us; 65535us; 65535us; 65535us; 65535us; 16895us; 65535us; 16896us; 65535us; 65535us; 65535us; 65535us; 16898us; 16899us; 65535us; 16900us; 16901us; 16902us; 16903us; 65535us; 65535us; 65535us; 65535us; 16904us; 16905us; 16906us; 16907us; 16908us; 65535us; 65535us; 65535us; 16909us; 16910us; 16911us; 16912us; 16913us; 65535us; 65535us; 16914us; 16915us; 16916us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16920us; 65535us; 65535us; 65535us; 65535us; 65535us; 16921us; 16922us; 65535us; 65535us; 65535us; 65535us; 16923us; 65535us; 65535us; 16924us; 65535us; 16925us; 65535us; 16926us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16927us; 65535us; 16928us; 65535us; 16929us; 65535us; 65535us; 65535us; 16931us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16953us; 16954us; 16955us; 16956us; 16957us; 16958us; 16959us; 16960us; 16961us; 16962us; 16963us; 16964us; 16965us; 16966us; 16967us; 16968us; 16969us; 16970us; 16971us; 16972us; 16974us; 65535us; 65535us; 16975us; 65535us; 16976us; 65535us; 65535us; 16977us; 16978us; 16979us; 65535us; 16980us; 16981us; 16982us; 16983us; 65535us; 65535us; 65535us; 16985us; 16986us; 16987us; 16988us; 65535us; 65535us; 16991us; 65535us; 16992us; 65535us; 65535us; 65535us; 65535us; 16994us; 16995us; 65535us; 65535us; 65535us; 65535us; 16998us; 16999us; 65535us; 17000us; 17001us; 65535us; 17003us; 65535us; 17004us; 65535us; 65535us; 17006us; 65535us; 65535us; 17007us; 65535us; 65535us; 17008us; 65535us; 65535us; 17009us; 65535us; 65535us; 17010us; 65535us; 65535us; 17011us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17012us; 65535us; 17013us; 17014us; 65535us; 17015us; 65535us; 17016us; 65535us; 65535us; 17018us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17024us; 65535us; 65535us; 65535us; 17026us; 65535us; 65535us; 17027us; 65535us; 65535us; 17028us; 65535us; 17029us; 17030us; 17031us; 65535us; 65535us; 17032us; 17033us; 17034us; 17035us; 17036us; 17037us; 17039us; 65535us; 65535us; 65535us; 65535us; 17040us; 65535us; 17041us; 65535us; 65535us; 17042us; 17043us; 17044us; 17045us; 65535us; 17046us; 65535us; 65535us; 17047us; 65535us; 65535us; 17048us; 65535us; 65535us; 17049us; 65535us; 65535us; 17053us; 17054us; 17055us; 17056us; 17057us; 17058us; 17059us; 17060us; 17061us; 17062us; 65535us; 65535us; 17063us; 17064us; 65535us; 17065us; 17066us; 65535us; 65535us; 65535us; 17067us; 17068us; 17069us; 17070us; 65535us; 65535us; 17071us; 17072us; 17073us; 17074us; 65535us; 65535us; 65535us; 17075us; 65535us; 17076us; 17077us; 17078us; 65535us; 17079us; 17080us; 17081us; 17082us; 17083us; 65535us; 65535us; 65535us; 65535us; 65535us; 17084us; 17085us; 17086us; 17087us; 65535us; 65535us; 17088us; 65535us; 17089us; 65535us; 65535us; 17091us; 17092us; 17093us; 17094us; 17095us; 17096us; 17097us; 17098us; 17099us; 17101us; 17102us; 65535us; 65535us; 17105us; 65535us; 17106us; 65535us; 17108us; 17109us; 17110us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17112us; 17113us; 17116us; 65535us; 65535us; 65535us; 17118us; 65535us; 17120us; 65535us; 17121us; 65535us; 65535us; 65535us; 65535us; 65535us; 17122us; 65535us; 65535us; 65535us; 17123us; 65535us; 65535us; 65535us; 65535us; 17126us; 65535us; 65535us; 65535us; 17127us; 65535us; 65535us; 17128us; 65535us; 65535us; 65535us; 17129us; 17130us; 65535us; 65535us; 65535us; 17134us; 17135us; 65535us; 17137us; 17138us; 65535us; 65535us; 17140us; 17142us; 17144us; 65535us; 65535us; 65535us; 17145us; 65535us; 17146us; 17148us; 17151us; 65535us; 17153us; 65535us; 65535us; 17154us; 65535us; 17155us; 65535us; 17156us; 65535us; 17158us; 65535us; 17159us; 65535us; 65535us; 65535us; 65535us; 17160us; 17161us; 17162us; 65535us; 65535us; 65535us; 17163us; 17164us; 65535us; 65535us; 65535us; 65535us; 17165us; 17166us; 65535us; 17167us; 17168us; 65535us; 17169us; 65535us; 17170us; 65535us; 17171us; 65535us; 65535us; 17172us; 65535us; 65535us; 65535us; 65535us; 65535us; 17178us; 65535us; 65535us; 17179us; 65535us; 65535us; 17181us; 65535us; 65535us; 17183us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17191us; 65535us; 65535us; 17193us; 65535us; 17194us; 65535us; 17195us; 65535us; 65535us; 17197us; 65535us; 17198us; 65535us; 65535us; 17200us; 65535us; 17203us; 65535us; 65535us; 65535us; 65535us; 65535us; 17204us; 65535us; 17206us; 65535us; 65535us; 65535us; 17207us; 65535us; 17208us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17209us; 65535us; 17210us; 65535us; 65535us; 17211us; 65535us; 65535us; 65535us; 65535us; 65535us; 17212us; 65535us; 65535us; 17213us; 65535us; 17214us; 65535us; 17215us; 65535us; 17216us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17218us; 17219us; 65535us; 65535us; 65535us; 65535us; 17222us; 65535us; 65535us; 65535us; 17223us; 65535us; 17228us; 65535us; 65535us; 17235us; 17236us; 65535us; 65535us; 65535us; 17237us; 17238us; 17239us; 17240us; 65535us; 17242us; 17243us; 65535us; 17244us; 17245us; 65535us; 65535us; 17247us; 65535us; 17248us; 17249us; 65535us; 17250us; 65535us; 65535us; 65535us; 65535us; 17251us; 17252us; 17253us; 65535us; 17254us; 17255us; 17256us; 17257us; 65535us; 65535us; 17259us; 17261us; 17262us; 65535us; 65535us; 17264us; 65535us; 17265us; 65535us; 17267us; 65535us; 65535us; 17268us; 65535us; 65535us; 17270us; 65535us; 17271us; 17272us; 65535us; 17274us; 17275us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17279us; 17280us; 65535us; 65535us; 17281us; 17282us; 17283us; 17284us; 65535us; 17285us; 17286us; 65535us; 65535us; 17287us; 65535us; 17288us; 17289us; 65535us; 65535us; 17290us; 65535us; 65535us; 17291us; 17292us; 17293us; 17294us; 17295us; 17296us; 17297us; 17298us; 17299us; 17300us; 17301us; 17302us; 17303us; 17304us; 17305us; 17306us; 17307us; 17308us; 17309us; 17310us; 17311us; 17312us; 17313us; 17314us; 65535us; 17316us; 65535us; 17317us; 17318us; 65535us; 17319us; 17320us; 17321us; 17322us; 65535us; 17324us; 65535us; 17325us; 17326us; 17327us; 17328us; 17329us; 17330us; 65535us; 17332us; 17333us; 17334us; 65535us; 17336us; 65535us; 17339us; 65535us; 65535us; 17343us; 17344us; 17345us; 17346us; 17347us; 17348us; 17349us; 17350us; 17352us; 17354us; 17356us; 17358us; 17360us; 17364us; 17366us; 17368us; 17369us; 17370us; 17371us; 17372us; 17373us; 17374us; 17375us; 17376us; 17377us; 17378us; 17379us; 17380us; 17382us; 65535us; 65535us; 17384us; 17385us; 17386us; 65535us; 65535us; 17387us; 17388us; 17389us; 65535us; 17390us; 17391us; 17392us; 65535us; 17393us; 17394us; 17395us; 65535us; 17396us; 17397us; 17398us; 17399us; 17400us; 17401us; 17402us; 17403us; 17404us; 17405us; 17406us; 17407us; 17408us; 17409us; |]
let _fsyacc_reductions ()  =    [| 
# 2706 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedSigFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startsignatureFile));
# 2715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedImplFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startimplementationFile));
# 2724 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedFsiInteraction)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startinteraction));
# 2733 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 494 "..\pars.fsy"
                            IDefns (_1,lhs parseState) 
                   )
# 494 "..\pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2744 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 496 "..\pars.fsy"
                            warning(Error(FSComp.SR.parsUnexpectedSemicolon(),rhs parseState 1));
                            IDefns ([],lhs parseState) 
                   )
# 496 "..\pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2755 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 499 "..\pars.fsy"
                            IDefns ([],lhs parseState) 
                   )
# 499 "..\pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2765 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 503 "..\pars.fsy"
                            ParsedHashDirective (_2,_3,lhs parseState) 
                   )
# 503 "..\pars.fsy"
                 : 'hashDirective));
# 2777 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 506 "..\pars.fsy"
                                  _1 
                   )
# 506 "..\pars.fsy"
                 : 'stringOrKeywordString));
# 2788 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 507 "..\pars.fsy"
                                          _1 
                   )
# 507 "..\pars.fsy"
                 : 'stringOrKeywordString));
# 2799 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 510 "..\pars.fsy"
                                                 _1 
                   )
# 510 "..\pars.fsy"
                 : 'hashDirectiveArg));
# 2810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 514 "..\pars.fsy"
                            [] 
                   )
# 514 "..\pars.fsy"
                 : 'hashDirectiveArgs));
# 2820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 516 "..\pars.fsy"
                            _1 @ [_2] 
                   )
# 516 "..\pars.fsy"
                 : 'hashDirectiveArgs));
# 2832 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 519 "..\pars.fsy"
                                              
                   )
# 519 "..\pars.fsy"
                 : 'interactiveTerminator));
# 2842 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 520 "..\pars.fsy"
                                  
                   )
# 520 "..\pars.fsy"
                 : 'interactiveTerminator));
# 2853 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 532 "..\pars.fsy"
                                                  [] 
                   )
# 532 "..\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2864 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveModuleDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 533 "..\pars.fsy"
                                                                        _1 
                   )
# 533 "..\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2876 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 534 "..\pars.fsy"
                                                                        _1 
                   )
# 534 "..\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2888 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 535 "..\pars.fsy"
                                                                        _1 
                   )
# 535 "..\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveModuleDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 536 "..\pars.fsy"
                                                                                                   _1 @ _3 
                   )
# 536 "..\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2913 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 537 "..\pars.fsy"
                                                                                                   _1 @ _3 
                   )
# 537 "..\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2926 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 538 "..\pars.fsy"
                                                                                                   _1 @ _3 
                   )
# 538 "..\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2939 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 542 "..\pars.fsy"
                                                             _1 
                   )
# 542 "..\pars.fsy"
                 : 'interactiveModuleDefns));
# 2950 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveModuleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 543 "..\pars.fsy"
                                                             _1 @ _2 
                   )
# 543 "..\pars.fsy"
                 : 'interactiveModuleDefns));
# 2962 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 547 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] in 
                             attrDecls @ [ mkSynDoDecl(_3)] 
                   )
# 547 "..\pars.fsy"
                 : 'interactiveExpr));
# 2977 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 552 "..\pars.fsy"
                                         [SynModuleDecl.HashDirective(_1,rhs parseState 1)] 
                   )
# 552 "..\pars.fsy"
                 : 'interactiveHash));
# 2988 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 558 "..\pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 558 "..\pars.fsy"
                 : Ast.ParsedSigFile));
# 3000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 560 "..\pars.fsy"
                            _1 
                   )
# 560 "..\pars.fsy"
                 : Ast.ParsedSigFile));
# 3012 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 566 "..\pars.fsy"
                            let emptySigFileFrag = ParsedSigFileFragment.AnonModule([],rhs parseState 1) in 
                            ParsedSigFile([],[emptySigFileFrag]) 
                   )
# 566 "..\pars.fsy"
                 : Ast.ParsedSigFile));
# 3024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 571 "..\pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 571 "..\pars.fsy"
                 : Ast.ParsedImplFile));
# 3036 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 "..\pars.fsy"
                            _1 
                   )
# 573 "..\pars.fsy"
                 : Ast.ParsedImplFile));
# 3048 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 579 "..\pars.fsy"
                            let emptyImplFileFrag = ParsedImplFileFragment.AnonModule([],rhs parseState 1) in 
                            ParsedImplFile([],[emptyImplFileFrag]) 
                   )
# 579 "..\pars.fsy"
                 : Ast.ParsedImplFile));
# 3060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 583 "..\pars.fsy"
                                                          _3.Lid,grabXmlDoc(parseState,1),_2 
                   )
# 583 "..\pars.fsy"
                 : 'moduleIntro));
# 3073 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 586 "..\pars.fsy"
                                          _2.Lid,grabXmlDoc(parseState,1)  
                   )
# 586 "..\pars.fsy"
                 : 'namespaceIntro));
# 3084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 590 "..\pars.fsy"
                             ParsedSigFile([],[ (_1 ([],PreXmlDoc.Empty)) ]) 
                   )
# 590 "..\pars.fsy"
                 : 'fileNamespaceSpecs));
# 3095 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 592 "..\pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 ([],PreXmlDoc.Empty)) with 
                                 | ParsedSigFileFragment.AnonModule(decls,m) -> decls  
                                 | ParsedSigFileFragment.NamespaceFragment(_,_, decls, _,_,_) -> decls 
                                 | ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(_,_,_,_,_,_,m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleSigDecl.HashDirective (hd,_)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed());
                                          [])
                             ParsedSigFile(decls, _2) 
                   )
# 592 "..\pars.fsy"
                 : 'fileNamespaceSpecs));
# 3120 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 608 "..\pars.fsy"
                                                                   _1 :: _2 
                   )
# 608 "..\pars.fsy"
                 : 'fileNamespaceSpecList));
# 3132 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 609 "..\pars.fsy"
                                             [_1] 
                   )
# 609 "..\pars.fsy"
                 : 'fileNamespaceSpecList));
# 3143 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 613 "..\pars.fsy"
                            let path,xml = _1 in (_3 (path,xml)) 
                   )
# 613 "..\pars.fsy"
                 : 'fileNamespaceSpec));
# 3156 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 617 "..\pars.fsy"
                             ParsedImplFile([], [ (_1 ([],PreXmlDoc.Empty)) ]) 
                   )
# 617 "..\pars.fsy"
                 : 'fileNamespaceImpls));
# 3167 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 619 "..\pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 ([],PreXmlDoc.Empty)) with 
                                 | ParsedImplFileFragment.AnonModule(decls,m) -> decls  
                                 | ParsedImplFileFragment.NamespaceFragment(_,_, decls, _,_,_) -> decls 
                                 | ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(_,_,_,_,_,_,m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleDecl.HashDirective (hd,_)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed());
                                          [])
                             ParsedImplFile(decls, _2) 
                   )
# 619 "..\pars.fsy"
                 : 'fileNamespaceImpls));
# 3192 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 636 "..\pars.fsy"
                                                                   _1 :: _2 
                   )
# 636 "..\pars.fsy"
                 : 'fileNamespaceImplList));
# 3204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 637 "..\pars.fsy"
                                             [_1] 
                   )
# 637 "..\pars.fsy"
                 : 'fileNamespaceImplList));
# 3215 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 641 "..\pars.fsy"
                            let path,xml = _1 in (_3 (path,xml)) 
                   )
# 641 "..\pars.fsy"
                 : 'fileNamespaceImpl));
# 3228 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 645 "..\pars.fsy"
                           if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                           let m2 = rhs parseState 3
                           let m = (rhs2 parseState 3 4)
                           (fun (path,_) -> 
                             if nonNil path then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(),m2));
                             let path2,xml,vis = _3 
                             let lid = path@path2 
                             ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(lid,true, _4, xml,_1,vis,m)))  
                   )
# 645 "..\pars.fsy"
                 : 'fileModuleSpec));
# 3249 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 654 "..\pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (path,xml) -> 
                             match path with 
                             | [] -> ParsedSigFileFragment.AnonModule(_1, m)  
                             | _ -> ParsedSigFileFragment.NamespaceFragment(path,false, _1, xml,[],m))  
                   )
# 654 "..\pars.fsy"
                 : 'fileModuleSpec));
# 3264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 662 "..\pars.fsy"
                           if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                           let m2 = rhs parseState 3
                           let m = (m2, _4) ||> unionRangeWithListBy (fun modu -> modu.Range)
                           (fun (path,_) -> 
                             if nonNil path then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(),m2));
                             let path2,xml,vis = _3 
                             let lid = path@path2 
                             ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(lid,true, _4, xml,_1,vis,m))) 
                   )
# 662 "..\pars.fsy"
                 : 'fileModuleImpl));
# 3285 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 671 "..\pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (path,xml) -> 
                             match path with 
                             | [] -> ParsedImplFileFragment.AnonModule(_1,m)  
                             | _ -> ParsedImplFileFragment.NamespaceFragment(path,false, _1, xml,[],m)) 
                   )
# 671 "..\pars.fsy"
                 : 'fileModuleImpl));
# 3300 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 679 "..\pars.fsy"
                             _1 
                   )
# 679 "..\pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3311 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 681 "..\pars.fsy"
                             _2 
                   )
# 681 "..\pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 683 "..\pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              _2 
                            
                   )
# 683 "..\pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3339 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 688 "..\pars.fsy"
                              
                              [] 
                            
                   )
# 688 "..\pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3352 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 694 "..\pars.fsy"
                             _1 
                   )
# 694 "..\pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3363 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 696 "..\pars.fsy"
                             [] 
                   )
# 696 "..\pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3373 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 698 "..\pars.fsy"
                             [] 
                   )
# 698 "..\pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3383 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 702 "..\pars.fsy"
                             _1 :: _3 
                   )
# 702 "..\pars.fsy"
                 : 'moduleSpfns));
# 3396 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 704 "..\pars.fsy"
                             (* silent recovery *) _3 
                   )
# 704 "..\pars.fsy"
                 : 'moduleSpfns));
# 3408 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 706 "..\pars.fsy"
                             [_1] 
                   )
# 706 "..\pars.fsy"
                 : 'moduleSpfns));
# 3420 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 711 "..\pars.fsy"
                            _2 
                   )
# 711 "..\pars.fsy"
                 : Ast.SynModuleDecl list));
# 3433 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 713 "..\pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              _2 
                            
                   )
# 713 "..\pars.fsy"
                 : Ast.SynModuleDecl list));
# 3448 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 718 "..\pars.fsy"
                              
                              [] 
                            
                   )
# 718 "..\pars.fsy"
                 : Ast.SynModuleDecl list));
# 3461 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 722 "..\pars.fsy"
                            _1 
                   )
# 722 "..\pars.fsy"
                 : Ast.SynModuleDecl list));
# 3472 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 726 "..\pars.fsy"
                            _1 
                   )
# 726 "..\pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 3483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 728 "..\pars.fsy"
                            [] 
                   )
# 728 "..\pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 3493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 733 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ mkSynDoDecl (_3) :: _5 
                   )
# 733 "..\pars.fsy"
                 : 'moduleDefnsOrExpr));
# 3510 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 737 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
# 737 "..\pars.fsy"
                 : 'moduleDefnsOrExpr));
# 3526 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 741 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
# 741 "..\pars.fsy"
                 : 'moduleDefnsOrExpr));
# 3541 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 745 "..\pars.fsy"
                             _1 
                   )
# 745 "..\pars.fsy"
                 : 'moduleDefnsOrExpr));
# 3552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 747 "..\pars.fsy"
                            if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                   )
# 747 "..\pars.fsy"
                 : 'moduleDefnsOrExpr));
# 3563 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 751 "..\pars.fsy"
                             _1 @ _2 
                   )
# 751 "..\pars.fsy"
                 : 'moduleDefns));
# 3575 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 753 "..\pars.fsy"
                              _1 @ _3 
                   )
# 753 "..\pars.fsy"
                 : 'moduleDefns));
# 3588 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 755 "..\pars.fsy"
                             _1 
                   )
# 755 "..\pars.fsy"
                 : 'moduleDefns));
# 3599 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 757 "..\pars.fsy"
                             _1 
                   )
# 757 "..\pars.fsy"
                 : 'moduleDefns));
# 3611 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 759 "..\pars.fsy"
                             _3 
                   )
# 759 "..\pars.fsy"
                 : 'moduleDefns));
# 3623 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 763 "..\pars.fsy"
                             _1  
                   )
# 763 "..\pars.fsy"
                 : 'moduleDefnOrDirective));
# 3634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 765 "..\pars.fsy"
                             [ SynModuleDecl.HashDirective (_1,rhs2 parseState 1 1) ] 
                   )
# 765 "..\pars.fsy"
                 : 'moduleDefnOrDirective));
# 3645 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 774 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             parseState.ResetSynArgNameGenerator();
                             let (BindingSetPreAttrs(_,_,_,_,mWhole)) = _3 
                             mkDefnBindings (mWhole,_3,_1,_2,mWhole)  
                   )
# 774 "..\pars.fsy"
                 : 'moduleDefn));
# 3661 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 780 "..\pars.fsy"
                             let hwlb,m = _3
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             parseState.ResetSynArgNameGenerator();
                             mkDefnBindings (m,hwlb,_1,_2,m)  
                   )
# 780 "..\pars.fsy"
                 : 'moduleDefn));
# 3677 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 786 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let mWhole = rhs parseState 3 
                             mkDefnBindings (mWhole,_3,_1,_2,mWhole) 
                   )
# 786 "..\pars.fsy"
                 : 'moduleDefn));
# 3692 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 791 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let      (TypeDefn(ComponentInfo(cas   ,a,cs,b,c,d,d2,d3),e,f,g)) = _4
                             let tc = (TypeDefn(ComponentInfo(_1@cas,a,cs,b,c,d,d2,d3),e,f,g))
                             let types = tc :: _5
                             [ SynModuleDecl.Types(types, (rhs parseState 3, types) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
# 791 "..\pars.fsy"
                 : 'moduleDefn));
# 3711 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 798 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (ExceptionDefn(ExceptionDefnRepr(cas,a,b,c,d,d2),e,f)) = _3 
                             let f = (f, _1) ||> unionRangeWithListBy (fun a -> a.Range)
                             let ec = (ExceptionDefn(ExceptionDefnRepr(_1@cas,a,b,c,d,d2),e,f)) 
                             [ SynModuleDecl.Exception(ec, f) ] 
                   )
# 798 "..\pars.fsy"
                 : 'moduleDefn));
# 3728 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 806 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let attribs,(path,xml,vis) = _1,_3 
                             match _5 with 
                             | Choice1Of2 eqn -> 
                                 if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                                 if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                                 if List.length _1 <> 0   then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation());
                                 if isSome vis            then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviationAlwaysPrivate());
                                 [ SynModuleDecl.ModuleAbbrev(List.head path,eqn,(rhs parseState 3, eqn) ||> unionRangeWithListBy (fun id -> id.idRange) ) ]
                             | Choice2Of2 def -> 
                                 if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                                 let info = ComponentInfo(attribs,[],[],path,xml,false,vis,rhs parseState 3)
                                 [ SynModuleDecl.NestedModule(info,def,false,(rhs2 parseState 3 4, def) ||> unionRangeWithListBy (fun d -> d.Range) ) ] 
                   )
# 806 "..\pars.fsy"
                 : 'moduleDefn));
# 3754 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 821 "..\pars.fsy"
                             errorR(Error(FSComp.SR.parsAttributeOnIncompleteCode(),rhs parseState 1))
                             [] 
                   )
# 821 "..\pars.fsy"
                 : 'moduleDefn));
# 3767 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 825 "..\pars.fsy"
                             [SynModuleDecl.Open(_1, _1.Range)] 
                   )
# 825 "..\pars.fsy"
                 : 'moduleDefn));
# 3778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 831 "..\pars.fsy"
                              _2.Lid 
                   )
# 831 "..\pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 3790 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 833 "..\pars.fsy"
                              _1.Lid  
                   )
# 833 "..\pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 3801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 837 "..\pars.fsy"
                              
                              Choice2Of2 _2 
                            
                   )
# 837 "..\pars.fsy"
                 : 'namedModuleDefnBlock));
# 3815 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 841 "..\pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              Choice2Of2 _2 
                            
                   )
# 841 "..\pars.fsy"
                 : 'namedModuleDefnBlock));
# 3829 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 845 "..\pars.fsy"
                              // BUG 2644 FSharp 1.0: 
                              // There is an ambiguity here 
                              // In particular, consider the following two:
                              // module M2 = 
                              //    System.DateTime.Now
                              // module M2 = 
                              //    Microsoft.FSharp.Core.List
                              // The second is a module abbreviation , the first a module containing a single expression.
                              // This is a bit unfortunate. For F# v1 the resolution is in favour of 
                              // the module abbreviation, i.e. anything of the form 
                              //    module M2 = ID.ID.ID.ID
                              // will be taken as a module abbreviation, regardles of the identifiers themselves.
                              // In a later version (Dev11) we could actually try resolving the names 
                              // to both expressions and module identifiers and base the resolution of that semantic lookup
                              //
                              // This is similar to the ambiguitty between 
                              //    type X = int
                              // and 
                              //    type X = OneValue
                              // However in that case we do use type name lookup to make the resolution.
                              match _2 with 
                              | [ SynModuleDecl.DoExpr (_,LongOrSingleIdent(false,LongIdentWithDots(path,_),None,_),_) ] -> 
                                  Choice1Of2  path
                              | _ -> 
                                  Choice2Of2 _2 
                            
                   )
# 845 "..\pars.fsy"
                 : 'namedModuleDefnBlock));
# 3866 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 874 "..\pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              Choice2Of2 _2 
                            
                   )
# 874 "..\pars.fsy"
                 : 'namedModuleDefnBlock));
# 3881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 879 "..\pars.fsy"
                              
                              Choice2Of2 [] 
                            
                   )
# 879 "..\pars.fsy"
                 : 'namedModuleDefnBlock));
# 3894 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 883 "..\pars.fsy"
                             
                              Choice2Of2 _1 
                             
                   )
# 883 "..\pars.fsy"
                 : 'namedModuleDefnBlock));
# 3907 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 887 "..\pars.fsy"
                              
                              Choice1Of2 _1.Lid
                             
                   )
# 887 "..\pars.fsy"
                 : 'namedModuleDefnBlock));
# 3920 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 893 "..\pars.fsy"
                              _2 
                   )
# 893 "..\pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 3932 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 895 "..\pars.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct());  
                              _2 
                   )
# 895 "..\pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 3946 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 898 "..\pars.fsy"
                              [] 
                   )
# 898 "..\pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 3957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 902 "..\pars.fsy"
                              None 
                   )
# 902 "..\pars.fsy"
                 : 'opt_signature));
# 3967 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 906 "..\pars.fsy"
                            _2 
                   )
# 906 "..\pars.fsy"
                 : Ast.SynMemberDefns));
# 3979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 911 "..\pars.fsy"
                             SynModuleSigDecl.HashDirective (_1,rhs2 parseState 1 1)  
                   )
# 911 "..\pars.fsy"
                 : 'moduleSpfn));
# 3990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 913 "..\pars.fsy"
                             _1 
                   )
# 913 "..\pars.fsy"
                 : 'moduleSpfn));
# 4001 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleAbbrevBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 916 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let path,xml,vis = _3 
                             if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                             if List.length _1 <> 0   then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation());
                             if isSome(vis)           then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreVisibilityOnModuleAbbreviationAlwaysPrivate());
                             SynModuleSigDecl.ModuleAbbrev(List.head path,_5,rhs2 parseState 3 5) 
                   )
# 916 "..\pars.fsy"
                 : 'moduleSpfn));
# 4021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpecBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 924 "..\pars.fsy"
                             let path,xml,vis = _3 
                             if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleDefnMustBeSimpleName());
                             let info = ComponentInfo(_1,[],[],path,xml,false,vis,rhs parseState 3)
                             if isSome(_2) then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             SynModuleSigDecl.NestedModule(info,_5,rhs2 parseState 3 5) 
                   )
# 924 "..\pars.fsy"
                 : 'moduleSpfn));
# 4040 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSig list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 931 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (TypeDefnSig(ComponentInfo(cas,a,cs,b,c,d,d2,d3),e,f,g)),rest = 
                                match _3 with
                                | [] -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEmptyModuleDefn()) 
                                | h::t -> h,t 
                             let tc = (TypeDefnSig(ComponentInfo(_1@cas,a,cs,b,c,d,d2,d3),e,f,g))in 
                             SynModuleSigDecl.Types (tc::rest,rhs parseState 3) 
                   )
# 931 "..\pars.fsy"
                 : 'moduleSpfn));
# 4059 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 940 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (ExceptionSig(ExceptionDefnRepr(cas,a,b,c,d,d2),e,f)) = _3 
                             let ec = (ExceptionSig(ExceptionDefnRepr(_1@cas,a,b,c,d,d2),e,f)) 
                             SynModuleSigDecl.Exception(ec, rhs parseState 3) 
                   )
# 940 "..\pars.fsy"
                 : 'moduleSpfn));
# 4075 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 945 "..\pars.fsy"
                                     SynModuleSigDecl.Open (_2.Lid, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 945 "..\pars.fsy"
                 : 'moduleSpfn));
# 4086 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_literalValue)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 949 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let attr1,attr2,isInline,isMutable,vis2,id,doc,explicitValTyparDecls,(ty,arity),konst = (_1),(_4),(_5),(_6),(_7),(_8),grabXmlDoc(parseState,3),(_9),(_11),(_12) 
                             if nonNil attr2 then errorR(Deprecated(FSComp.SR.parsAttributesMustComeBeforeVal(),rhs parseState 4));
                             let m = rhs2 parseState 3 11 
                             let valSpfn = ValSpfn((attr1@attr2),id,explicitValTyparDecls,ty,arity,isInline,isMutable,doc, vis2,konst,m) 
                             SynModuleSigDecl.Val(valSpfn,m)
                           
                   )
# 949 "..\pars.fsy"
                 : 'valSpfn));
# 4112 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 958 "..\pars.fsy"
                           None 
                   )
# 958 "..\pars.fsy"
                 : 'opt_literalValue));
# 4122 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 959 "..\pars.fsy"
                                           Some(_2) 
                   )
# 959 "..\pars.fsy"
                 : 'opt_literalValue));
# 4133 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 960 "..\pars.fsy"
                                                                 Some(_3) 
                   )
# 960 "..\pars.fsy"
                 : 'opt_literalValue));
# 4145 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 963 "..\pars.fsy"
                                                                            _2 
                   )
# 963 "..\pars.fsy"
                 : 'moduleSpecBlock));
# 4157 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 964 "..\pars.fsy"
                                                                                         _3 
                   )
# 964 "..\pars.fsy"
                 : 'moduleSpecBlock));
# 4170 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 965 "..\pars.fsy"
                                                                               _2 
                   )
# 965 "..\pars.fsy"
                 : 'moduleSpecBlock));
# 4182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 968 "..\pars.fsy"
                                                                     _1 
                   )
# 968 "..\pars.fsy"
                 : 'opt_attributes));
# 4193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 969 "..\pars.fsy"
                                                                     [] 
                   )
# 969 "..\pars.fsy"
                 : 'opt_attributes));
# 4203 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 973 "..\pars.fsy"
                            _1 
                   )
# 973 "..\pars.fsy"
                 : 'attributes));
# 4214 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 975 "..\pars.fsy"
                            _1 @ _2 
                   )
# 975 "..\pars.fsy"
                 : 'attributes));
# 4226 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 978 "..\pars.fsy"
                                                                                                     _2 
                   )
# 978 "..\pars.fsy"
                 : 'attributeList));
# 4239 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 979 "..\pars.fsy"
                                                                            [] 
                   )
# 979 "..\pars.fsy"
                 : 'attributeList));
# 4250 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 981 "..\pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             _2 
                   )
# 981 "..\pars.fsy"
                 : 'attributeList));
# 4264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 984 "..\pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             [] 
                   )
# 984 "..\pars.fsy"
                 : 'attributeList));
# 4276 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 989 "..\pars.fsy"
                            [_1] 
                   )
# 989 "..\pars.fsy"
                 : 'attributeListElements));
# 4287 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 991 "..\pars.fsy"
                            _1 @ [_3] 
                   )
# 991 "..\pars.fsy"
                 : 'attributeListElements));
# 4300 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 995 "..\pars.fsy"
                            let arg = match _3 with None -> mkSynUnit _1.Range | Some e -> e 
                            ({ TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=_1.Range } : SynAttribute) 
                   )
# 995 "..\pars.fsy"
                 : 'attribute));
# 4314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 998 "..\pars.fsy"
                            let arg = match _4 with None -> mkSynUnit _2.Range | Some e -> e 
                            ({ TypeName=_2; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_2.Range } : SynAttribute) 
                   )
# 998 "..\pars.fsy"
                 : 'attribute));
# 4329 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1001 "..\pars.fsy"
                            let arg = match _6 with None -> mkSynUnit _3.Range | Some e -> e 
                            ({ TypeName=_3; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_3.Range } : SynAttribute) 
                   )
# 1001 "..\pars.fsy"
                 : 'attribute));
# 4345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1005 "..\pars.fsy"
                                                Some(ident("module",(rhs parseState 1))) 
                   )
# 1005 "..\pars.fsy"
                 : 'attributeTarget));
# 4356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1006 "..\pars.fsy"
                                              Some(ident("type",(rhs parseState 1))) 
                   )
# 1006 "..\pars.fsy"
                 : 'attributeTarget));
# 4367 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1007 "..\pars.fsy"
                                       Some(_1) 
                   )
# 1007 "..\pars.fsy"
                 : 'attributeTarget));
# 4378 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1009 "..\pars.fsy"
                                       if _1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxError());
                                       Some(ident("return",(rhs parseState 1))) 
                   )
# 1009 "..\pars.fsy"
                 : 'attributeTarget));
# 4390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1014 "..\pars.fsy"
                            _2 
                   )
# 1014 "..\pars.fsy"
                 : Ast.SynTypeDefnSig list));
# 4402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1018 "..\pars.fsy"
                            _1 :: _3 
                   )
# 1018 "..\pars.fsy"
                 : 'tyconSpfnList));
# 4414 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1020 "..\pars.fsy"
                            [_1] 
                   )
# 1020 "..\pars.fsy"
                 : 'tyconSpfnList));
# 4425 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1024 "..\pars.fsy"
                             let lhsm = rhs parseState 1 
                             _3 lhsm _1 
                   )
# 1024 "..\pars.fsy"
                 : 'tyconSpfn));
# 4438 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1027 "..\pars.fsy"
                             TypeDefnSig(_1,SynTypeDefnSigRepr.Simple (SynTypeDefnSimpleRepr.None (lhs parseState),lhs parseState),_2,lhs parseState) 
                   )
# 1027 "..\pars.fsy"
                 : 'tyconSpfn));
# 4450 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1039 "..\pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _2 lhsm nameInfo (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 1039 "..\pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 4468 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1043 "..\pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _1 lhsm nameInfo _2) 
                   )
# 1043 "..\pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 4482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1049 "..\pars.fsy"
                            let m = _1.Range 
                            (fun lhsm nameInfo augmentation -> 
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.Simple (_1,m),augmentation,m)) 
                   )
# 1049 "..\pars.fsy"
                 : 'tyconSpfnRhs));
# 4495 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1053 "..\pars.fsy"
                            let m = lhs parseState 
                            let needsCheck,(kind,decls) = _1
                            (fun nameRange nameInfo augmentation -> 
                                if needsCheck && isNil decls then 
                                   reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition());
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.ObjectModel (kind,decls,m),augmentation,m)) 
                   )
# 1053 "..\pars.fsy"
                 : 'tyconSpfnRhs));
# 4511 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1060 "..\pars.fsy"
                            let m = lhs parseState 
                            let ty,arity = _3
                            let invoke = SynMemberSig.Member(ValSpfn([],mkSynId m "Invoke",inferredTyparDecls,ty,arity,false,false,PreXmlDoc.Empty,None,None,m),AbstractMemberFlags MemberKind.Member,m) 
                            (fun nameRange nameInfo augmentation -> 
                                if nonNil augmentation then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType());
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.ObjectModel (TyconDelegate (ty,arity),[invoke],m),[],m)) 
                   )
# 1060 "..\pars.fsy"
                 : 'tyconSpfnRhs));
# 4527 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1069 "..\pars.fsy"
                            let needsCheck,decls = _1 
                            needsCheck,(TyconUnspecified, decls) 
                   )
# 1069 "..\pars.fsy"
                 : 'tyconClassSpfn));
# 4539 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1072 "..\pars.fsy"
                            false,(_1,_2) 
                   )
# 1072 "..\pars.fsy"
                 : 'tyconClassSpfn));
# 4551 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1074 "..\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct());
                            false,(_1,_2) 
                   )
# 1074 "..\pars.fsy"
                 : 'tyconClassSpfn));
# 4565 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1077 "..\pars.fsy"
                            // silent recovery 
                            false,(_1,[]) 
                   )
# 1077 "..\pars.fsy"
                 : 'tyconClassSpfn));
# 4577 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1082 "..\pars.fsy"
                            true, _2 
                   )
# 1082 "..\pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 4589 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1084 "..\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature());
                            false, _2 
                   )
# 1084 "..\pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 4602 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1088 "..\pars.fsy"
                            false, _2 
                   )
# 1088 "..\pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 4613 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1090 "..\pars.fsy"
                            false, _2 
                   )
# 1090 "..\pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 4625 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1095 "..\pars.fsy"
                             _2 
                   )
# 1095 "..\pars.fsy"
                 : 'classSpfnBlock));
# 4637 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1097 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature());
                             _2 
                   )
# 1097 "..\pars.fsy"
                 : 'classSpfnBlock));
# 4650 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1100 "..\pars.fsy"
                             _1 
                   )
# 1100 "..\pars.fsy"
                 : 'classSpfnBlock));
# 4661 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1115 "..\pars.fsy"
                            _1 
                   )
# 1115 "..\pars.fsy"
                 : 'classSpfnMembers));
# 4672 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1117 "..\pars.fsy"
                            [] 
                   )
# 1117 "..\pars.fsy"
                 : 'classSpfnMembers));
# 4682 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1121 "..\pars.fsy"
                            _1 :: _3 
                   )
# 1121 "..\pars.fsy"
                 : 'classSpfnMembersAtLeastOne));
# 4695 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1124 "..\pars.fsy"
                                           (true,StaticMemberFlags) 
                   )
# 1124 "..\pars.fsy"
                 : 'memberFlags));
# 4705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1125 "..\pars.fsy"
                                           (false,NonVirtualMemberFlags) 
                   )
# 1125 "..\pars.fsy"
                 : 'memberFlags));
# 4715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1126 "..\pars.fsy"
                                           (false,OverrideMemberFlags) 
                   )
# 1126 "..\pars.fsy"
                 : 'memberFlags));
# 4725 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1127 "..\pars.fsy"
                                          (false,OverrideMemberFlags) 
                   )
# 1127 "..\pars.fsy"
                 : 'memberFlags));
# 4735 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1130 "..\pars.fsy"
                                       _1 
                   )
# 1130 "..\pars.fsy"
                 : 'memberSpecFlags));
# 4746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1131 "..\pars.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 1131 "..\pars.fsy"
                 : 'memberSpecFlags));
# 4756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1132 "..\pars.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 1132 "..\pars.fsy"
                 : 'memberSpecFlags));
# 4766 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1136 "..\pars.fsy"
                           None, MemberKind.Member 
                   )
# 1136 "..\pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4776 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1138 "..\pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 1138 "..\pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4787 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1140 "..\pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 1140 "..\pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1142 "..\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith());
                            Some (rhs2 parseState 1 2), _2 
                   )
# 1142 "..\pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1148 "..\pars.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then MemberKind.PropertyGet 
                            else if id.idText = "set" then MemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
# 1148 "..\pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 4824 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1153 "..\pars.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired());
                           MemberKind.PropertyGetSet 
                   )
# 1153 "..\pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 4840 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberSpecFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_literalValue)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1161 "..\pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            let isInline,doc,vis2,id,explicitValTyparDecls,(ty,arity),optLiteralValue = _4,grabXmlDoc(parseState,3),_5,_6,_7,_9,_11
                            let getSetRangeOpt, getSet = _10 
                            let getSetAdjuster arity = match arity,getSet with SynValInfo([],_),MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3 
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            let valSpfn = ValSpfn(_1,id,explicitValTyparDecls,ty,arity, isInline,false,doc, vis2,optLiteralValue,wholeRange)
                            let _,flags = _3 
                            SynMemberSig.Member(valSpfn, flags (getSetAdjuster arity),wholeRange) 
                   )
# 1161 "..\pars.fsy"
                 : 'classMemberSpfn));
# 4871 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1175 "..\pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.Interface (_4,unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 1175 "..\pars.fsy"
                 : 'classMemberSpfn));
# 4886 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1178 "..\pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.Inherit (_4,unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 1178 "..\pars.fsy"
                 : 'classMemberSpfn));
# 4900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1181 "..\pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            let fld = _4 _1 false 
                            SynMemberSig.ValField(fld,rhs2 parseState 3 4) 
                   )
# 1181 "..\pars.fsy"
                 : 'classMemberSpfn));
# 4915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1185 "..\pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.ValField(_5 _1 true,rhs2 parseState 3 5) 
                   )
# 1185 "..\pars.fsy"
                 : 'classMemberSpfn));
# 4929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1188 "..\pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.NestedType(_5,rhs2 parseState 3 5) 
                   )
# 1188 "..\pars.fsy"
                 : 'classMemberSpfn));
# 4944 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1191 "..\pars.fsy"
                            let vis,doc,(ty,valSynInfo) = _2,grabXmlDoc(parseState,3),_5 
                            let m = unionRanges (rhs parseState 3) ty.Range 
                            let isInline = false 
                            let valSpfn = ValSpfn (_1, mkSynId (rhs parseState 3) "new", noInferredTypars, ty, valSynInfo, isInline, false, doc, vis, None, m)
                            SynMemberSig.Member(valSpfn, CtorMemberFlags,m) 
                   )
# 1191 "..\pars.fsy"
                 : 'classMemberSpfn));
# 4961 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1199 "..\pars.fsy"
                            let typars,lid,fixity,tpcs1,vis,xmlDoc = _2 
                            let tpcs2 = _3 
                            ComponentInfo(_1,typars,(tpcs1 @ tpcs2),lid,xmlDoc,fixity,vis,rangeOfLid lid)  
                   )
# 1199 "..\pars.fsy"
                 : 'typeNameInfo));
# 4976 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1205 "..\pars.fsy"
                            _2 :: _3 
                   )
# 1205 "..\pars.fsy"
                 : 'tyconDefnList));
# 4988 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1207 "..\pars.fsy"
                            [] 
                   )
# 1207 "..\pars.fsy"
                 : 'tyconDefnList));
# 4998 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1211 "..\pars.fsy"
                            TypeDefn(_1,SynTypeDefnRepr.Simple(SynTypeDefnSimpleRepr.None(_1.Range),_1.Range),[],_1.Range) 
                   )
# 1211 "..\pars.fsy"
                 : 'tyconDefn));
# 5009 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1213 "..\pars.fsy"
                            let nameRange = rhs parseState 1
                            let (tcDefRepr:SynTypeDefnRepr),members = _3 nameRange
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)    
                            TypeDefn(_1, tcDefRepr, members, mWhole) 
                   )
# 1213 "..\pars.fsy"
                 : 'tyconDefn));
# 5025 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynMemberDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1219 "..\pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun mem -> mem.Range)
                            TypeDefn(_1,SynTypeDefnRepr.ObjectModel(TyconAugmentation,[],m),_2,m) 
                   )
# 1219 "..\pars.fsy"
                 : 'tyconDefn));
# 5038 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatterns)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1223 "..\pars.fsy"
                            let vis,spats, az = _3,_5,_6
                            let nameRange = rhs parseState 1
                            let (tcDefRepr,members) = _8 nameRange
                            let (ComponentInfo(_,_,_,lid,_,_,_,_)) = _1 
                            let memberCtorPattern = SynMemberDefn.ImplicitCtor (vis,_2,spats,az,rangeOfLid lid)
                            let tcDefRepr = 
                              match tcDefRepr with
                              | SynTypeDefnRepr.ObjectModel (k,cspec,m) -> SynTypeDefnRepr.ObjectModel (k,memberCtorPattern::cspec,m)
                              | _ -> reportParseErrorAt (rhs2 parseState 1 5) (FSComp.SR.parsOnlyClassCanTakeValueArguments()); tcDefRepr
                           
                            TypeDefn(_1,tcDefRepr,members, unionRanges (rhs parseState 1) tcDefRepr.Range)  
                   )
# 1223 "..\pars.fsy"
                 : 'tyconDefn));
# 5065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1245 "..\pars.fsy"
                            let m = unionRanges (rhs parseState 1) (match _7 with [] -> (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5)) | _ -> (rhs parseState 7))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 1245 "..\pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5082 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1248 "..\pars.fsy"
                            if not _6 then reportParseErrorAt (rhs parseState 6) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let m = unionRanges (rhs parseState 1) (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) [])) 
                   )
# 1248 "..\pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5099 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1252 "..\pars.fsy"
                            let m = rhs parseState 1
                            (fun nameRange -> _1 nameRange _2) 
                   )
# 1252 "..\pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5112 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1257 "..\pars.fsy"
                            let m = _1.Range
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1,m),augmentation) 
                   )
# 1257 "..\pars.fsy"
                 : 'tyconDefnRhs));
# 5124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1260 "..\pars.fsy"
                            let needsCheck,(kind,decls),mopt = _1 
                            let m = match mopt with 
                                    | None -> (lhs parseState).StartRange // create a zero-width range
                                    | Some m -> m
                            (fun nameRange augmentation -> 
                                if needsCheck && isNil decls then 
                                    reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition());
                                SynTypeDefnRepr.ObjectModel (kind,decls,m),augmentation) 
                   )
# 1260 "..\pars.fsy"
                 : 'tyconDefnRhs));
# 5142 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1269 "..\pars.fsy"
                            let m = lhs parseState 
                            let ty,arity = _3
                            (fun nameRange augmentation -> 
                                let valSpfn = ValSpfn([],mkSynId m "Invoke",inferredTyparDecls,ty,arity,false,false,PreXmlDoc.Empty,None,None,m) 
                                let invoke = SynMemberDefn.AbstractSlot(valSpfn,AbstractMemberFlags MemberKind.Member,m) 
                                if nonNil augmentation then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType());
                                SynTypeDefnRepr.ObjectModel (TyconDelegate (ty,arity),[invoke],m),[]) 
                   )
# 1269 "..\pars.fsy"
                 : 'tyconDefnRhs));
# 5159 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1279 "..\pars.fsy"
                            let needsCheck,decls,mopt = _1 
                            needsCheck,(TyconUnspecified, decls),mopt 
                   )
# 1279 "..\pars.fsy"
                 : 'tyconClassDefn));
# 5171 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1282 "..\pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false,(_1,_2),Some(m) 
                   )
# 1282 "..\pars.fsy"
                 : 'tyconClassDefn));
# 5184 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1285 "..\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false,(_1,_2),Some(m) 
                   )
# 1285 "..\pars.fsy"
                 : 'tyconClassDefn));
# 5199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1289 "..\pars.fsy"
                            // silent recovery 
                            false,(_1,[]),Some(rhs parseState 1) 
                   )
# 1289 "..\pars.fsy"
                 : 'tyconClassDefn));
# 5211 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1294 "..\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition());
                            let mopt =
                                match _2 with
                                | _::_ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            false,_2,mopt 
                   )
# 1294 "..\pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 5228 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1301 "..\pars.fsy"
                            let mopt =
                                match _2 with
                                | _::_ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            true, _2, mopt 
                   )
# 1301 "..\pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 5244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1309 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition());
                             _2 
                   )
# 1309 "..\pars.fsy"
                 : 'classDefnBlock));
# 5257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1312 "..\pars.fsy"
                             _2 
                   )
# 1312 "..\pars.fsy"
                 : 'classDefnBlock));
# 5269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1314 "..\pars.fsy"
                             _1 
                   )
# 1314 "..\pars.fsy"
                 : 'classDefnBlock));
# 5280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1329 "..\pars.fsy"
                            _1 
                   )
# 1329 "..\pars.fsy"
                 : 'classDefnMembers));
# 5291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1332 "..\pars.fsy"
                            _2 
                   )
# 1332 "..\pars.fsy"
                 : 'classDefnMembers));
# 5302 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1334 "..\pars.fsy"
                            [] 
                   )
# 1334 "..\pars.fsy"
                 : 'classDefnMembers));
# 5312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1338 "..\pars.fsy"
                            _1 @  _3 
                   )
# 1338 "..\pars.fsy"
                 : 'classDefnMembersAtLeastOne));
# 5325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1342 "..\pars.fsy"
                            _2  
                   )
# 1342 "..\pars.fsy"
                 : 'classDefnMemberGetSet));
# 5336 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1344 "..\pars.fsy"
                            _2  
                   )
# 1344 "..\pars.fsy"
                 : 'classDefnMemberGetSet));
# 5347 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1346 "..\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith());
                            _2  
                   )
# 1346 "..\pars.fsy"
                 : 'classDefnMemberGetSet));
# 5359 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1351 "..\pars.fsy"
                            [_1]  
                   )
# 1351 "..\pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 5370 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1353 "..\pars.fsy"
                            [_1;_3] 
                   )
# 1353 "..\pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 5382 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1357 "..\pars.fsy"
                            let mRhs = (_6 : SynExpr).Range 
                            (_1,_2,_3,_4,_6,mRhs) 
                   )
# 1357 "..\pars.fsy"
                 : 'classDefnMemberGetSetElement));
# 5398 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1363 "..\pars.fsy"
                             let mRhs = _5.Range 
                             let mWhole = unionRanges (rhs2 parseState 3 4) mRhs 
                             let optReturnType = _3 
                             let bindingBuilder,mBindLhs = _2 
                             (fun vis memFlagsBuilder attrs -> 
                                  [ SynMemberDefn.Member (bindingBuilder (vis,_1,false,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,_5,mRhs,[],attrs,Some(memFlagsBuilder MemberKind.Member)),unionRanges mWhole mBindLhs) ]) 
                   )
# 1363 "..\pars.fsy"
                 : 'memberCore));
# 5417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1372 "..\pars.fsy"
                            let mWhole = (rhs parseState 2, _4) ||> unionRangeWithListBy (fun (_,_,_,_,_,m2) -> m2) 
                            let propertyNameBindingBuilder,_ = _2 
                            let optPropertyType = _3 
                            let isMutable = false
                            (fun visNoLongerUsed memFlagsBuilder attrs -> 
                                  let hasGet = ref false
                                  let hasSet = ref false
                                  // Iterate over 1 or 2 'get'/'set' entries
                                  _4 |> List.choose (fun (optInline,optAttrs,(bindingBuilder,mBindLhs),optReturnType,expr,exprm) ->
                                        let optInline = _1 || optInline 
                                        // optional attributes are only applied to getters and setters
                                        // the "top level" attrs will be applied to both
                                        let optAttrs = optAttrs |> List.map (fun (a:SynAttribute) -> { a with AppliesToGetterAndSetter=true })
                                        let attrs = attrs @ optAttrs
                                        
                                        let binding = bindingBuilder (visNoLongerUsed,optInline,isMutable,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,expr,exprm,[],attrs,Some (memFlagsBuilder MemberKind.Member))
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, _, _, mBindLhs, spBind)) = binding 
                                        let memberKind = 
                                              let getset = 
                                                    let rec go p = 
                                                        match p with 
                                                        | SynPat.LongIdent (LongIdentWithDots([id],_),_,_,_,_,_) ->  id.idText
                                                        | SynPat.Named (_,nm,_,_,_) ->  nm.idText
                                                        | SynPat.Typed (p,_,_) ->  go p
                                                        | SynPat.Attrib (p,_,_) ->  go p
                                                        | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                                    go pv 
                                              if getset = "get" then (
                                                  if !hasGet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasGet := true
                                                      Some MemberKind.PropertyGet
                                              ) else if getset = "set" then (
                                                  if !hasSet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasSet := true
                                                      Some MemberKind.PropertySet
                                              ) else 
                                                  raiseParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                        match memberKind with
                                        | None -> None
                                        | Some memberKind ->
                                        // REVIEW: It's hard not to ignore the optPropertyType type annotation for 'set' properties. To apply it, 
                                        // we should apply it to the last argument, but at this point we've already pushed the patterns that 
                                        // make up the arguments onto the RHS. So we just always give a warning. 
                                        begin match optPropertyType with 
                                        | Some _ -> errorR(Error(FSComp.SR.parsTypeAnnotationsOnGetSet(),mBindLhs))
                                        | None -> ()
                                        end;
                                        
                                        let optReturnType = 
                                            match (memberKind, optReturnType) with 
                                            | MemberKind.PropertySet,_ -> optReturnType
                                            | _, None -> optPropertyType
                                            | _ -> optReturnType 
                                        // REDO with the correct member kind 
                                        let binding = bindingBuilder(vis,isInline,isMutable,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,expr,exprm,[],attrs,Some(memFlagsBuilder memberKind)) 
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, rhsRetInfo, rhsExpr, mBindLhs, spBind)) = binding 
                                     
                                        let (SynValData(_,valSynInfo,_)) = valSynData 
                                        // Setters have all arguments tupled in their internal TAST form, though they don't appear to be 
                                        // tupled from the syntax
                                        let memFlags = memFlagsBuilder memberKind
                                        let valSynInfo = 
                                            let adjustValueArg valueArg = if List.length valueArg = 1 then valueArg else SynInfo.unnamedTopArg
                                            match memberKind, valSynInfo, memFlags.IsInstance with 
                                            | MemberKind.PropertyGet,SynValInfo ([],_ret),         false
                                            | MemberKind.PropertyGet,SynValInfo ([_],_ret), true  -> 
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsGetterMustHaveAtLeastOneArgument()) 
                                            | MemberKind.PropertyGet,SynValInfo (thisArg::indexOrUnitArgs::rest,ret), true  -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument())
                                                SynValInfo ([thisArg; indexOrUnitArgs],ret)
                                            | MemberKind.PropertyGet,SynValInfo (indexOrUnitArgs::rest,ret),          false ->
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument())
                                                SynValInfo ([indexOrUnitArgs],ret)
                                            | MemberKind.PropertySet,SynValInfo ([thisArg;valueArg],ret),                 true  -> 
                                                SynValInfo ([thisArg; adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo (thisArg::indexArgs::valueArg::rest,ret), true  -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments())
                                                SynValInfo ([thisArg; indexArgs @ adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo ([valueArg],ret),                         false -> 
                                                SynValInfo ([adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo (indexArgs::valueArg::rest,ret),          _     -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments())
                                                SynValInfo ([indexArgs @ adjustValueArg valueArg],ret)
                                            | _ -> 
                                                // should be unreachable, cover just in case
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidProperty())
                                        let valSynData = SynValData(Some(memFlags), valSynInfo,None) 
                                        // Fold together the information from the first lambda pattern and the get/set binding
                                        // This uses the 'this' variable from the first and the patterns for the get/set binding, 
                                        // replacing the get/set identifier. A little gross. 
                                        let bindingPatAdjusted, xmlDocAdjusted = 
                                            let bindingOuter = propertyNameBindingBuilder(vis,optInline,isMutable,mBindLhs,spBind,optReturnType,expr,exprm,[],attrs,Some(memFlagsBuilder MemberKind.Member))
                                            let (Binding (_,_,_,_,_,doc2,_,bindingPatOuter,_,_,_,_)) = bindingOuter 
                                            
                                        
                                            let lidOuter,lidVisOuter = 
                                                match bindingPatOuter with 
                                                | SynPat.LongIdent (lid,None,None,[],lidVisOuter,m) ->  lid,lidVisOuter
                                                | SynPat.Named (_,id,_,visOuter,m) -> LongIdentWithDots([id],[]),visOuter
                                                | p -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            // Merge the visibility from the outer point with the inner point, e.g.
                                            //    member <VIS1>  this.Size with <VIS2> get ()      = m_size
                                            
                                            let mergeLidVisOuter lidVisInner =
                                                match lidVisInner,lidVisOuter with 
                                                | None,None -> None
                                                | Some lidVisInner,None | None,Some lidVisInner -> Some lidVisInner
                                                | Some _, Some _ ->  
                                                    errorR(Error(FSComp.SR.parsMultipleAccessibilitiesForGetSet(),mBindLhs));
                                                    lidVisInner
                                        
                                            // Replace the "get" or the "set" with the right name
                                            let rec go p = 
                                                match p with 
                                                | SynPat.LongIdent (LongIdentWithDots([id],_),_,tyargs,args,lidVisInner,m) ->  
                                                    // Setters have all arguments tupled in their internal form, though they don't 
                                                    // appear to be tupled from the syntax. Somewhat unfortunate
                                                    let args = 
                                                        if id.idText = "set" then 
                                                            match args with 
                                                            | [SynPat.Paren(SynPat.Tuple (indexPats,_),indexPatRange);valuePat] when id.idText = "set" -> 
                                                                [SynPat.Tuple(indexPats@[valuePat],unionRanges indexPatRange valuePat.Range)] 
                                                            | [indexPat;valuePat] -> 
                                                                [SynPat.Tuple(args,unionRanges indexPat.Range valuePat.Range)] 
                                                            | [valuePat] -> 
                                                                [valuePat] 
                                                            | _ -> 
                                                                raiseParseErrorAt m (FSComp.SR.parsSetSyntax())
                                                        else 
                                                            args
                     //                               let idTool : Ident list = lidOuter |> List.map (fun (li:Ident) -> ident(li.idText,id.idRange)) |> List.rev |> List.take 1
                                                    SynPat.LongIdent (lidOuter,Some(id),tyargs,args,mergeLidVisOuter lidVisInner,m)
                                                | SynPat.Named (_,nm,_,lidVisInner,m) ->  SynPat.LongIdent (lidOuter,None,None,[],mergeLidVisOuter lidVisInner,m)
                                                | SynPat.Typed (p,ty,m) ->  SynPat.Typed(go p,ty,m)
                                                | SynPat.Attrib (p,attribs,m) ->  SynPat.Attrib(go p,attribs,m)
                                                | SynPat.Wild(m) ->  SynPat.Wild(m)
                                                | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            go pv,PreXmlDoc.Merge doc2 doc
                                        Some <| SynMemberDefn.Member (Binding (vis, NormalBinding, isInline, isMutable, attrs, xmlDocAdjusted, valSynData, bindingPatAdjusted, rhsRetInfo, rhsExpr, mBindLhs, spBind),mWhole)))
                            
                   )
# 1372 "..\pars.fsy"
                 : 'memberCore));
# 5576 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1545 "..\pars.fsy"
                                   
                   )
# 1545 "..\pars.fsy"
                 : 'abstractMemberFlags));
# 5586 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1546 "..\pars.fsy"
                                          
                   )
# 1546 "..\pars.fsy"
                 : 'abstractMemberFlags));
# 5596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1550 "..\pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            [mkClassMemberLocalBindings(false,None,_1,_2,_3)] 
                   )
# 1550 "..\pars.fsy"
                 : 'classDefnMember));
# 5610 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1554 "..\pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            [mkClassMemberLocalBindings(true,Some (rhs parseState 3),_1,_2,_4)] 
                   )
# 1554 "..\pars.fsy"
                 : 'classDefnMember));
# 5624 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1558 "..\pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            let _,flags = _3
                            _4 _2 flags _1 
                   )
# 1558 "..\pars.fsy"
                 : 'classDefnMember));
# 5641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interfaceImplDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1563 "..\pars.fsy"
                             if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesAreNotPermittedOnInterfaceImplementations(),rhs parseState 1));
                             if isSome _2 then errorR(Error(FSComp.SR.parsInterfacesHaveSameVisibilityAsEnclosingType(),rhs parseState 3));
                             let mWhole = 
                                 match _5 with
                                 | None -> rhs2 parseState 3 4
                                 | Some(mems) -> (rhs2 parseState 3 4, mems) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                             [ SynMemberDefn.Interface (_4, _5, mWhole) ] 
                   )
# 1563 "..\pars.fsy"
                 : 'classDefnMember));
# 5662 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstractMemberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1572 "..\pars.fsy"
                            let ty,arity = _8
                            let isInline,doc,id,explicitValTyparDecls = _4,grabXmlDoc(parseState,3),_5,_6
                            let getSetRangeOpt, getSet = _9
                            let getSetAdjuster arity = match arity,getSet with SynValInfo([],_),MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            if isSome _2 then errorR(Error(FSComp.SR.parsAccessibilityModsIllegalForAbstract(),wholeRange));
                            let valSpfn = ValSpfn(_1,id,explicitValTyparDecls,ty,arity, isInline,false,doc, None,None,wholeRange)
                            [ SynMemberDefn.AbstractSlot(valSpfn,AbstractMemberFlags (getSetAdjuster arity), wholeRange) ] 
                   )
# 1572 "..\pars.fsy"
                 : 'classDefnMember));
# 5692 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inheritsDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1586 "..\pars.fsy"
                             if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalOnInherit(),rhs parseState 1));
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityIllegalOnInherit(),rhs parseState 1));
                             [ _3 ] 
                   )
# 1586 "..\pars.fsy"
                 : 'classDefnMember));
# 5707 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1591 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             _3 None _1 false 
                   )
# 1591 "..\pars.fsy"
                 : 'classDefnMember));
# 5722 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1595 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             _4 (Some (rhs parseState 3)) _1 true  
                   )
# 1595 "..\pars.fsy"
                 : 'classDefnMember));
# 5737 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1599 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let isStatic, flags = _3
                             _4 _1 isStatic flags 
                   )
# 1599 "..\pars.fsy"
                 : 'classDefnMember));
# 5754 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1604 "..\pars.fsy"
                             let m = unionRanges (rhs2 parseState 3 6) _7.Range 
                             let expr = _7
                             let valSynData = SynValData (Some CtorMemberFlags, SynValInfo([SynInfo.InferSynArgInfoFromPat _4],SynInfo.unnamedRetVal), _5) 
                             let vis = _2 
                             let declPat = SynPat.LongIdent (LongIdentWithDots([mkSynId (rhs parseState 3) "new"],[]),None,Some noInferredTypars,[_4],vis,rhs parseState 3)
                             // Check that 'SynPatForConstructorDecl' matches this correctly
                             assert (match declPat with SynPatForConstructorDecl _ -> true | _ -> false);
                             [ SynMemberDefn.Member(Binding (None,NormalBinding,false,false,_1,grabXmlDoc(parseState,3),valSynData, declPat,None,expr,m,NoSequencePointAtInvisibleBinding),m) ] 
                   )
# 1604 "..\pars.fsy"
                 : 'classDefnMember));
# 5777 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1614 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             [ SynMemberDefn.NestedType(_5,None,rhs2 parseState 3 5) ] 
                   )
# 1614 "..\pars.fsy"
                 : 'classDefnMember));
# 5792 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1619 "..\pars.fsy"
                             let mRhs = rhs2 parseState 4 6
                             let doc = grabXmlDoc(parseState,4)
                             let mValDecl = rhs2 parseState 1 6
                             (fun mLeft attribs isStatic -> 
                                 let mValDecl = match mLeft with None -> mValDecl | Some m -> unionRanges m mValDecl
                                 let fld = Field(attribs,isStatic,Some _4,_6,_2,doc,_3,mRhs)
                                 [ SynMemberDefn.ValField(fld, mValDecl) ]) 
                   )
# 1619 "..\pars.fsy"
                 : 'valDefnDecl));
# 5812 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typ)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1629 "..\pars.fsy"
                             let doc = grabXmlDoc(parseState,5)
                             let mValDecl = unionRanges (rhs parseState 1) _7.Range
                             let mGetSetOpt, getSet = _8
                             if _2 then errorR(Error(FSComp.SR.parsMutableOnAutoPropertyShouldBeGetSet(),rhs parseState 3))
                             (fun attribs isStatic flags -> 
                                 [ SynMemberDefn.AutoProperty(attribs, isStatic, _4, _5, getSet, flags, doc, _3, _7, mGetSetOpt, mValDecl) ]) 
                   )
# 1629 "..\pars.fsy"
                 : 'autoPropsDefnDecl));
# 5833 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1638 "..\pars.fsy"
                                        None 
                   )
# 1638 "..\pars.fsy"
                 : 'opt_typ));
# 5843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1639 "..\pars.fsy"
                                      Some _2 
                   )
# 1639 "..\pars.fsy"
                 : 'opt_typ));
# 5854 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1643 "..\pars.fsy"
                                              let (LongIdentWithDots(lid,dotms)) = _3 in (None,LongIdentWithDots(ident(MangledGlobalName,rhs parseState 1)::lid, rhs parseState 2::dotms)) 
                   )
# 1643 "..\pars.fsy"
                 : 'atomicPatternLongIdent));
# 5865 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1644 "..\pars.fsy"
                                  (None,_1) 
                   )
# 1644 "..\pars.fsy"
                 : 'atomicPatternLongIdent));
# 5876 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1645 "..\pars.fsy"
                                         (Some(_1), _2) 
                   )
# 1645 "..\pars.fsy"
                 : 'atomicPatternLongIdent));
# 5888 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1648 "..\pars.fsy"
                                  None 
                   )
# 1648 "..\pars.fsy"
                 : 'opt_access));
# 5898 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1649 "..\pars.fsy"
                                  Some(_1) 
                   )
# 1649 "..\pars.fsy"
                 : 'opt_access));
# 5909 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1652 "..\pars.fsy"
                                    SynAccess.Private 
                   )
# 1652 "..\pars.fsy"
                 : 'access));
# 5919 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1653 "..\pars.fsy"
                                    SynAccess.Public 
                   )
# 1653 "..\pars.fsy"
                 : 'access));
# 5929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1654 "..\pars.fsy"
                                    SynAccess.Internal 
                   )
# 1654 "..\pars.fsy"
                 : 'access));
# 5939 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1658 "..\pars.fsy"
                                  Some(_1) 
                   )
# 1658 "..\pars.fsy"
                 : 'opt_declVisibility));
# 5950 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1659 "..\pars.fsy"
                            None 
                   )
# 1659 "..\pars.fsy"
                 : 'opt_declVisibility));
# 5960 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1662 "..\pars.fsy"
                                                                  Some(_2) 
                   )
# 1662 "..\pars.fsy"
                 : 'opt_interfaceImplDefn));
# 5972 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1663 "..\pars.fsy"
                                                      None 
                   )
# 1663 "..\pars.fsy"
                 : 'opt_interfaceImplDefn));
# 5982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1666 "..\pars.fsy"
                                                       _2 
                   )
# 1666 "..\pars.fsy"
                 : 'opt_classDefn));
# 5994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1667 "..\pars.fsy"
                                                     [] 
                   )
# 1667 "..\pars.fsy"
                 : 'opt_classDefn));
# 6004 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1670 "..\pars.fsy"
                                                       _2 
                   )
# 1670 "..\pars.fsy"
                 : 'opt_classSpfn));
# 6016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1671 "..\pars.fsy"
                                              [] 
                   )
# 1671 "..\pars.fsy"
                 : 'opt_classSpfn));
# 6026 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1676 "..\pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) ((_2): SynType).Range 
                            SynMemberDefn.Inherit(_2,_3,mDecl) 
                   )
# 1676 "..\pars.fsy"
                 : 'inheritsDefn));
# 6039 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1679 "..\pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) _4.Range 
                            SynMemberDefn.ImplicitInherit(_2,_4,_5,mDecl) 
                   )
# 1679 "..\pars.fsy"
                 : 'inheritsDefn));
# 6054 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1682 "..\pars.fsy"
                            let mDecl = (rhs parseState 1)
                            if not _2 then errorR(Error(FSComp.SR.parsTypeNameCannotBeEmpty(), mDecl))
                            SynMemberDefn.Inherit(SynType.LongIdent(LongIdentWithDots([], [])), None,mDecl) 
                   )
# 1682 "..\pars.fsy"
                 : 'inheritsDefn));
# 6067 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1687 "..\pars.fsy"
                                  Some(_1) 
                   )
# 1687 "..\pars.fsy"
                 : 'optAsSpec));
# 6078 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1688 "..\pars.fsy"
                                  None 
                   )
# 1688 "..\pars.fsy"
                 : 'optAsSpec));
# 6088 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1691 "..\pars.fsy"
                                    _2 
                   )
# 1691 "..\pars.fsy"
                 : 'asSpec));
# 6099 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1694 "..\pars.fsy"
                                    Some(_1) 
                   )
# 1694 "..\pars.fsy"
                 : 'optBaseSpec));
# 6110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1695 "..\pars.fsy"
                                  None 
                   )
# 1695 "..\pars.fsy"
                 : 'optBaseSpec));
# 6120 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1699 "..\pars.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 1699 "..\pars.fsy"
                 : 'baseSpec));
# 6133 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1704 "..\pars.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 1704 "..\pars.fsy"
                 : 'baseSpec));
# 6144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1710 "..\pars.fsy"
                             _2 
                   )
# 1710 "..\pars.fsy"
                 : 'objectImplementationBlock));
# 6156 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1712 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileObjectMembers());
                             _2 
                   )
# 1712 "..\pars.fsy"
                 : 'objectImplementationBlock));
# 6169 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1715 "..\pars.fsy"
                             _1 
                   )
# 1715 "..\pars.fsy"
                 : 'objectImplementationBlock));
# 6180 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1718 "..\pars.fsy"
                                                                                           _1 @  _3 
                   )
# 1718 "..\pars.fsy"
                 : 'objectImplementationMembers));
# 6193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1719 "..\pars.fsy"
                                                               _1 
                   )
# 1719 "..\pars.fsy"
                 : 'objectImplementationMembers));
# 6205 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1723 "..\pars.fsy"
                            _3 None OverrideMemberFlags _1 
                   )
# 1723 "..\pars.fsy"
                 : 'objectImplementationMember));
# 6219 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1725 "..\pars.fsy"
                            _3 _1 false OverrideMemberFlags 
                   )
# 1725 "..\pars.fsy"
                 : 'objectImplementationMember));
# 6233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1726 "..\pars.fsy"
                                                                 [] 
                   )
# 1726 "..\pars.fsy"
                 : 'objectImplementationMember));
# 6245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1727 "..\pars.fsy"
                                                                        [] 
                   )
# 1727 "..\pars.fsy"
                 : 'objectImplementationMember));
# 6258 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1730 "..\pars.fsy"
                                    
                   )
# 1730 "..\pars.fsy"
                 : 'memberOrOverride));
# 6268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1731 "..\pars.fsy"
                                      
                   )
# 1731 "..\pars.fsy"
                 : 'memberOrOverride));
# 6278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1736 "..\pars.fsy"
                            errorR(Error(FSComp.SR.parsUnexpectedQuotationOperatorInTypeAliasDidYouMeanVerbatimString(), rhs parseState 4)) 
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.ThereWereSignificantParseErrorsSoDoNotTypecheckThisNode, SynType.LongIdent(_3), unionRanges (rhs parseState 1) _3.Range)  
                   )
# 1736 "..\pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6295 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1739 "..\pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            if isSome _2 then errorR(Error(FSComp.SR.parsTypeAbbreviationsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.Ok, _3, unionRanges (rhs parseState 1) _3.Range) 
                   )
# 1739 "..\pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6310 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1743 "..\pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            let rangesOf3 = _3 |> List.map (function |Choice1Of2(ec)->ec.Range | Choice2Of2(uc)->uc.Range)
                            let mWhole = (rhs2 parseState 1 2, rangesOf3) ||> List.fold unionRanges 
                            if _3 |> List.exists (function Choice1Of2 _ -> true | _ -> false) then (
                                if isSome _2 then errorR(Error(FSComp.SR.parsEnumTypesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                                SynTypeDefnSimpleRepr.Enum (_3 |> List.choose (function 
                                                                   | Choice1Of2 data ->  
                                                                     Some(data) 
                                                                   | Choice2Of2(UnionCase(_,_,_,_,_,m)) -> 
                                                                     errorR(Error(FSComp.SR.parsAllEnumFieldsRequireValues(),m)); None),
                                                mWhole)
                            ) else 
                                SynTypeDefnSimpleRepr.Union (_2, 
                                                 _3 |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                 mWhole) 
                   )
# 1743 "..\pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6337 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1759 "..\pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            SynTypeDefnSimpleRepr.Record (_2,_3,lhs parseState) 
                   )
# 1759 "..\pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6351 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyTyconRepr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1762 "..\pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            libraryOnlyError (lhs parseState);
                            if isSome _2 then errorR(Error(FSComp.SR.parsInlineAssemblyCannotHaveVisibilityDeclarations(),rhs parseState 2));
                            _4 
                   )
# 1762 "..\pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6368 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1770 "..\pars.fsy"
                            _2 
                   )
# 1770 "..\pars.fsy"
                 : 'braceFieldDeclList));
# 6380 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1772 "..\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()); 
                            _2 
                   )
# 1772 "..\pars.fsy"
                 : 'braceFieldDeclList));
# 6393 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1775 "..\pars.fsy"
                            [] 
                   )
# 1775 "..\pars.fsy"
                 : 'braceFieldDeclList));
# 6404 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HASH)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1779 "..\pars.fsy"
                            libraryOnlyError (lhs parseState);
                            let lhsm = lhs parseState 
                            SynTypeDefnSimpleRepr.LibraryOnlyILAssembly (ParseAssemblyCodeType _2 (rhs parseState 2),lhsm) 
                   )
# 1779 "..\pars.fsy"
                 : 'inlineAssemblyTyconRepr));
# 6418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1784 "..\pars.fsy"
                                     TyconClass 
                   )
# 1784 "..\pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1785 "..\pars.fsy"
                                     TyconInterface 
                   )
# 1785 "..\pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6438 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1786 "..\pars.fsy"
                                     TyconStruct 
                   )
# 1786 "..\pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6448 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1789 "..\pars.fsy"
                                     
                   )
# 1789 "..\pars.fsy"
                 : 'interfaceMember));
# 6458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1790 "..\pars.fsy"
                                                
                   )
# 1790 "..\pars.fsy"
                 : 'interfaceMember));
# 6468 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1794 "..\pars.fsy"
                             [], _2.Lid,false,[],_1,grabXmlDoc(parseState,2) 
                   )
# 1794 "..\pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6480 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1796 "..\pars.fsy"
                             _2, _3.Lid,false,[],_1,grabXmlDoc(parseState,2) 
                   )
# 1796 "..\pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfixTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1798 "..\pars.fsy"
                             let tps,tpcs = _3 
                             tps, _2.Lid,true,tpcs,_1,grabXmlDoc(parseState,2) 
                   )
# 1798 "..\pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1802 "..\pars.fsy"
                                 [ TyparDecl([],_1) ] 
                   )
# 1802 "..\pars.fsy"
                 : 'prefixTyparDecls));
# 6518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1803 "..\pars.fsy"
                                                              List.rev _2 
                   )
# 1803 "..\pars.fsy"
                 : 'prefixTyparDecls));
# 6530 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1806 "..\pars.fsy"
                                                               _3 :: _1 
                   )
# 1806 "..\pars.fsy"
                 : 'prefixTyparDeclList));
# 6542 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1807 "..\pars.fsy"
                                     [_1] 
                   )
# 1807 "..\pars.fsy"
                 : 'prefixTyparDeclList));
# 6553 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1811 "..\pars.fsy"
                             TyparDecl(_1,_2) 
                   )
# 1811 "..\pars.fsy"
                 : 'typarDecl));
# 6565 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDeclList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1817 "..\pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(),rhs2 parseState 2 5));
                             List.rev _3, _4 
                   )
# 1817 "..\pars.fsy"
                 : 'postfixTyparDecls));
# 6581 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1824 "..\pars.fsy"
                             (List.rev _1,true) 
                   )
# 1824 "..\pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6592 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1826 "..\pars.fsy"
                             (List.rev _1,false) 
                   )
# 1826 "..\pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6603 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1828 "..\pars.fsy"
                             ([],false) 
                   )
# 1828 "..\pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6613 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDeclsCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1832 "..\pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(),rhs2 parseState 2 5));
                             let tps,flex = _3 
                             SynValTyparDecls(tps,flex,_4) 
                   )
# 1832 "..\pars.fsy"
                 : 'explicitValTyparDecls));
# 6630 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1838 "..\pars.fsy"
                             _1 
                   )
# 1838 "..\pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 6641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1840 "..\pars.fsy"
                             SynValTyparDecls([],true,[]) 
                   )
# 1840 "..\pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 6651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1844 "..\pars.fsy"
                             Some _1 
                   )
# 1844 "..\pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6662 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1846 "..\pars.fsy"
                             None 
                   )
# 1846 "..\pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6672 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1852 "..\pars.fsy"
                            [] 
                   )
# 1852 "..\pars.fsy"
                 : 'opt_typeConstraints));
# 6682 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1854 "..\pars.fsy"
                            List.rev _2 
                   )
# 1854 "..\pars.fsy"
                 : 'opt_typeConstraints));
# 6693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1859 "..\pars.fsy"
                                                              _3 :: _1 
                   )
# 1859 "..\pars.fsy"
                 : 'typeConstraints));
# 6705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1860 "..\pars.fsy"
                                          [_1] 
                   )
# 1860 "..\pars.fsy"
                 : 'typeConstraints));
# 6716 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1866 "..\pars.fsy"
                             libraryOnlyError (lhs parseState); WhereTyparDefaultsToType(_2,_4,lhs parseState) 
                   )
# 1866 "..\pars.fsy"
                 : 'typeConstraint));
# 6728 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1868 "..\pars.fsy"
                             WhereTyparSubtypeOfType(_1,_3,lhs parseState) 
                   )
# 1868 "..\pars.fsy"
                 : 'typeConstraint));
# 6740 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1870 "..\pars.fsy"
                             WhereTyparIsValueType(_1,lhs parseState) 
                   )
# 1870 "..\pars.fsy"
                 : 'typeConstraint));
# 6751 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1872 "..\pars.fsy"
                             if _3 <> "not" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(_3));  
                             WhereTyparIsReferenceType(_1,lhs parseState) 
                   )
# 1872 "..\pars.fsy"
                 : 'typeConstraint));
# 6764 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1875 "..\pars.fsy"
                             WhereTyparSupportsNull(_1,lhs parseState) 
                   )
# 1875 "..\pars.fsy"
                 : 'typeConstraint));
# 6775 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1877 "..\pars.fsy"
                             WhereTyparSupportsMember([ _1 ],_4,lhs parseState) 
                   )
# 1877 "..\pars.fsy"
                 : 'typeConstraint));
# 6788 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1879 "..\pars.fsy"
                             WhereTyparSupportsMember(List.rev(_2),_6,lhs parseState) 
                   )
# 1879 "..\pars.fsy"
                 : 'typeConstraint));
# 6802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1881 "..\pars.fsy"
                             let _ltm,_gtm,args,_commas,mWhole = _4 in WhereTyparIsDelegate(_1, args, unionRanges _1.Range mWhole) 
                   )
# 1881 "..\pars.fsy"
                 : 'typeConstraint));
# 6814 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1883 "..\pars.fsy"
                             match _3 with 
                             | "enum" -> let _ltm,_gtm,args,_commas,mWhole = _4 in WhereTyparIsEnum(_1, args, unionRanges _1.Range mWhole)
                             | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 1883 "..\pars.fsy"
                 : 'typeConstraint));
# 6829 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1887 "..\pars.fsy"
                             match _3 with 
                             | "comparison" -> WhereTyparIsComparable(_1,lhs parseState)
                             | "equality" -> WhereTyparIsEquatable(_1,lhs parseState)
                             | "unmanaged" -> WhereTyparIsUnmanaged(_1,lhs parseState)
                             | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 1887 "..\pars.fsy"
                 : 'typeConstraint));
# 6845 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1894 "..\pars.fsy"
                                             _3::_1 
                   )
# 1894 "..\pars.fsy"
                 : 'typarAlts));
# 6857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1895 "..\pars.fsy"
                                [_1] 
                   )
# 1895 "..\pars.fsy"
                 : 'typarAlts));
# 6868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1901 "..\pars.fsy"
                            _2 _1 
                   )
# 1901 "..\pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6880 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1903 "..\pars.fsy"
                            _1 :: _3 _2 
                   )
# 1903 "..\pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1905 "..\pars.fsy"
                            [_1] 
                   )
# 1905 "..\pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1908 "..\pars.fsy"
                               grabXmlDoc(parseState,1) 
                   )
# 1908 "..\pars.fsy"
                 : 'barAndgrabXmlDoc));
# 6914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1911 "..\pars.fsy"
                                                                                  (fun xmlDoc -> _1 xmlDoc  :: _3 _2) 
                   )
# 1911 "..\pars.fsy"
                 : 'attrUnionCaseDecls));
# 6927 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1912 "..\pars.fsy"
                                             (fun xmlDoc -> [ _1 xmlDoc ]) 
                   )
# 1912 "..\pars.fsy"
                 : 'attrUnionCaseDecls));
# 6938 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1916 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs parseState 3
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFields [],xmlDoc,None,mDecl))) 
                           
                   )
# 1916 "..\pars.fsy"
                 : 'attrUnionCaseDecl));
# 6955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1921 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFields _5,xmlDoc,None,mDecl))) 
                           
                   )
# 1921 "..\pars.fsy"
                 : 'attrUnionCaseDecl));
# 6973 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1926 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             libraryOnlyWarning(lhs parseState);
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFullType _5,xmlDoc,None,mDecl))) 
                           
                   )
# 1926 "..\pars.fsy"
                 : 'attrUnionCaseDecl));
# 6992 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1932 "..\pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsEnumFieldsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice1Of2 (EnumCase ( _1, _3,_5,xmlDoc,mDecl))) 
                           
                   )
# 1932 "..\pars.fsy"
                 : 'attrUnionCaseDecl));
# 7010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1940 "..\pars.fsy"
                             _1 
                   )
# 1940 "..\pars.fsy"
                 : 'unionCaseName));
# 7021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1942 "..\pars.fsy"
                              ident(opNameCons,rhs parseState 2) 
                   )
# 1942 "..\pars.fsy"
                 : 'unionCaseName));
# 7032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1944 "..\pars.fsy"
                              ident(opNameNil,rhs2 parseState 2 3) 
                   )
# 1944 "..\pars.fsy"
                 : 'unionCaseName));
# 7043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1948 "..\pars.fsy"
                             
                             Choice2Of2 (UnionCase ( [], _1,UnionCaseFields [],PreXmlDoc.Empty,None,rhs parseState 1)) 
                           
                   )
# 1948 "..\pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7057 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1952 "..\pars.fsy"
                             
                             Choice1Of2 (EnumCase ([],_1,_3,PreXmlDoc.Empty,rhs2 parseState 1 3)) 
                           
                   )
# 1952 "..\pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1956 "..\pars.fsy"
                             _1 
                   )
# 1956 "..\pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1960 "..\pars.fsy"
                            
                            Choice2Of2 (UnionCase ( [],_1,UnionCaseFields _3,PreXmlDoc.Empty,None,rhs2 parseState 1 3)) 
                         
                   )
# 1960 "..\pars.fsy"
                 : 'firstUnionCaseDecl));
# 7098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1964 "..\pars.fsy"
                             
                             Choice1Of2 (EnumCase ([],_1,_3,PreXmlDoc.Empty,rhs2 parseState 1 3)) 
                           
                   )
# 1964 "..\pars.fsy"
                 : 'firstUnionCaseDecl));
# 7113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1970 "..\pars.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(),lhs parseState)); 
                            _1 
                   )
# 1970 "..\pars.fsy"
                 : 'unionCaseRepr));
# 7125 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1973 "..\pars.fsy"
                            List.map mkAnonField (_1 :: _3) 
                   )
# 1973 "..\pars.fsy"
                 : 'unionCaseRepr));
# 7137 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1975 "..\pars.fsy"
                            [mkAnonField _1] 
                   )
# 1975 "..\pars.fsy"
                 : 'unionCaseRepr));
# 7148 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1979 "..\pars.fsy"
                            _1 :: _3 
                   )
# 1979 "..\pars.fsy"
                 : 'recdFieldDeclList));
# 7161 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1981 "..\pars.fsy"
                            [_1] 
                   )
# 1981 "..\pars.fsy"
                 : 'recdFieldDeclList));
# 7173 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1985 "..\pars.fsy"
                            let fld = _2 _1 false 
                            let (Field(a,b,c,d,e,f,vis,g)) = fld 
                            if isSome vis then errorR(Error(FSComp.SR.parsRecordFieldsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                            Field(a,b,c,d,e,f,None,g)  
                   )
# 1985 "..\pars.fsy"
                 : 'recdFieldDecl));
# 7188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1992 "..\pars.fsy"
                            let mRhs = rhs2 parseState 3 5 
                            let xmlDoc = grabXmlDoc(parseState,3)
                            (fun attrs stat -> Field(attrs, stat,Some _3,_5,_1,xmlDoc,_2,mRhs)) 
                   )
# 1992 "..\pars.fsy"
                 : 'fieldDecl));
# 7204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1999 "..\pars.fsy"
                            ExceptionDefn(_1,_2, (_1.Range,_2) ||> unionRangeWithListBy (fun cd -> cd.Range) ) 
                   )
# 1999 "..\pars.fsy"
                 : Ast.SynExceptionDefn));
# 7216 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2003 "..\pars.fsy"
                            ExceptionSig(_1,_2,lhs parseState) 
                   )
# 2003 "..\pars.fsy"
                 : 'exconSpfn));
# 7228 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2006 "..\pars.fsy"
                                     grabXmlDoc(parseState,1) 
                   )
# 2006 "..\pars.fsy"
                 : 'exceptionAndGrabDoc));
# 7238 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exceptionAndGrabDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2010 "..\pars.fsy"
                            ExceptionDefnRepr(_2,_4,_5,_1,_3,(match _5 with None -> rhs2 parseState 1 4 | Some p -> unionRanges (rangeOfLongIdent p) (rhs2 parseState 1 4))) 
                   )
# 2010 "..\pars.fsy"
                 : Ast.SynExceptionRepr));
# 7253 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2014 "..\pars.fsy"
                             UnionCase ( [], _1,UnionCaseFields [],PreXmlDoc.Empty,None,lhs parseState) 
                   )
# 2014 "..\pars.fsy"
                 : 'exconIntro));
# 7264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2016 "..\pars.fsy"
                             UnionCase ( [], _1,UnionCaseFields _3,PreXmlDoc.Empty,None,lhs parseState) 
                   )
# 2016 "..\pars.fsy"
                 : 'exconIntro));
# 7276 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2019 "..\pars.fsy"
                                       None 
                   )
# 2019 "..\pars.fsy"
                 : 'exconRepr));
# 7286 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2020 "..\pars.fsy"
                                       Some (_2.Lid) 
                   )
# 2020 "..\pars.fsy"
                 : 'exconRepr));
# 7297 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2023 "..\pars.fsy"
                                      _2 
                   )
# 2023 "..\pars.fsy"
                 : Ast.LongIdentWithDots));
# 7308 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2027 "..\pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,
                                 (fun attrs vis -> 
                                     // apply the builder
                                     let binds = localBindingsBuilder attrs vis mLetKwd 
                                     if not isRec && List.length binds > 1 then 
                                           reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                                     [],binds), 
                                 bindingSetRange) 
                   )
# 2027 "..\pars.fsy"
                 : 'defnBindings));
# 7339 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cPrototype)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2048 "..\pars.fsy"
                             let bindRange = lhs parseState
                             BindingSetPreAttrs(bindRange, false,false,_1,bindRange)  
                   )
# 2048 "..\pars.fsy"
                 : 'defnBindings));
# 7351 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2053 "..\pars.fsy"
                             let mDoKwd = rhs parseState 1 
                             let mWhole = unionRanges mDoKwd _2.Range
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mDoKwd,false,false,(fun attrs vis -> attrs,[mkSynDoBinding (vis,true,_2,mWhole)]), mWhole) 
                   )
# 2053 "..\pars.fsy"
                 : 'doBinding));
# 7366 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2062 "..\pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd;  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,
                               (fun attrs vis -> 
                                 let binds = localBindingsBuilder attrs vis mLetKwd 
                                 if not isRec && List.length binds > 1 then 
                                         reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                                 [],binds),
                               bindingSetRange), (unionRanges mLetKwd bindingSetRange) 
                   )
# 2062 "..\pars.fsy"
                 : 'hardwhiteLetBindings));
# 7399 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2086 "..\pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mLetKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mLetKwd,false,false,(fun attrs vis -> attrs,[mkSynDoBinding (vis,true,_2,bindingSetRange)]),bindingSetRange), _2 
                   )
# 2086 "..\pars.fsy"
                 : 'hardwhiteDoBinding));
# 7416 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2094 "..\pars.fsy"
                                        _1 
                   )
# 2094 "..\pars.fsy"
                 : 'classDefnBindings));
# 7427 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2095 "..\pars.fsy"
                                     _1 
                   )
# 2095 "..\pars.fsy"
                 : 'classDefnBindings));
# 7438 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2096 "..\pars.fsy"
                                                let b,m = _1 in b 
                   )
# 2096 "..\pars.fsy"
                 : 'classDefnBindings));
# 7449 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2097 "..\pars.fsy"
                                               fst _1 
                   )
# 2097 "..\pars.fsy"
                 : 'classDefnBindings));
# 7460 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2102 "..\pars.fsy"
                            (fun _ m -> ()) 
                   )
# 2102 "..\pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 7470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2104 "..\pars.fsy"
                            (fun kwd m -> reportParseErrorAt m (match kwd with 
                                                                | "let!" -> FSComp.SR.parsUnmatchedLetBang() 
                                                                | "use!" -> FSComp.SR.parsUnmatchedUseBang() 
                                                                | "use" -> FSComp.SR.parsUnmatchedUse() 
                                                                | _ (*"let" *) -> FSComp.SR.parsUnmatchedLet()))  
                   )
# 2104 "..\pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 7485 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cRetType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArgs)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2112 "..\pars.fsy"
                             let rty,vis,nm,args  = _2,_3,_4,_7 
                             let xmlDoc = grabXmlDoc(parseState,1) 
                             let nmm = rhs parseState 3 
                             let argsm = rhs parseState 6 
                             let mBindLhs = lhs parseState
                             let mWhole = lhs parseState
                             let mRhs = lhs parseState 
                             let rhsExpr = SynExpr.App(ExprAtomicFlag.NonAtomic,
                                                       false, 
                                                       SynExpr.Ident(ident("failwith",rhs parseState 6)),
                                                       SynExpr.Const(SynConst.String("extern was not given a DllImport attribute",rhs parseState 8),rhs parseState 8),
                                                       mRhs)
                             (fun attrs vis -> 
                                 let bindingId = SynPat.LongIdent (LongIdentWithDots([nm],[]), None, Some noInferredTypars, [SynPat.Tuple(args,argsm)], vis, nmm)
                                 let binding = mkSynBinding 
                                                   (xmlDoc, bindingId) 
                                                   (vis, false, false, mBindLhs, NoSequencePointAtInvisibleBinding, Some rty ,rhsExpr, mRhs, [], attrs, None)
                                 [], [binding]) 
                   )
# 2112 "..\pars.fsy"
                 : 'cPrototype));
# 7518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2133 "..\pars.fsy"
                            List.rev _1 
                   )
# 2133 "..\pars.fsy"
                 : 'cArgs));
# 7529 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2135 "..\pars.fsy"
                            [_1] 
                   )
# 2135 "..\pars.fsy"
                 : 'cArgs));
# 7540 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2137 "..\pars.fsy"
                            [] 
                   )
# 2137 "..\pars.fsy"
                 : 'cArgs));
# 7550 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2141 "..\pars.fsy"
                            _3 :: _1 
                   )
# 2141 "..\pars.fsy"
                 : 'cMoreArgs));
# 7562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2143 "..\pars.fsy"
                            [_3; _1] 
                   )
# 2143 "..\pars.fsy"
                 : 'cMoreArgs));
# 7574 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2147 "..\pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Wild m,_2,m) |> addAttribs _1 
                   )
# 2147 "..\pars.fsy"
                 : 'cArg));
# 7586 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2149 "..\pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Named (SynPat.Wild m,_3,false,None,m),_2,m) |> addAttribs _1 
                   )
# 2149 "..\pars.fsy"
                 : 'cArg));
# 7599 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2153 "..\pars.fsy"
                            let m = _1.Range
                            SynType.App(SynType.LongIdent(_1),None,[],[],None,false,m) 
                   )
# 2153 "..\pars.fsy"
                 : 'cType));
# 7611 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2157 "..\pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("[]",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2157 "..\pars.fsy"
                 : 'cType));
# 7624 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2161 "..\pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeptr",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2161 "..\pars.fsy"
                 : 'cType));
# 7636 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2165 "..\pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("byref",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2165 "..\pars.fsy"
                 : 'cType));
# 7648 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2169 "..\pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeint",m)],[])),None,[],[],None,true,m) 
                   )
# 2169 "..\pars.fsy"
                 : 'cType));
# 7659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2174 "..\pars.fsy"
                            SynReturnInfo((_2,SynArgInfo(_1,false,None)),rhs parseState 2) 
                   )
# 2174 "..\pars.fsy"
                 : 'cRetType));
# 7671 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2176 "..\pars.fsy"
                            let m = rhs parseState 2 
                            SynReturnInfo((SynType.App(SynType.LongIdent(LongIdentWithDots([ident("unit",m)],[])),None,[],[],None,false,m),SynArgInfo(_1,false,None)),m) 
                   )
# 2176 "..\pars.fsy"
                 : 'cRetType));
# 7683 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2182 "..\pars.fsy"
                             let (moreBindings, moreBindingRanges) = List.unzip _2
                             let moreLocalBindingsLastRange = if moreBindingRanges.IsEmpty then None else Some (List.last moreBindingRanges)
                             match _1 with 
                             | Some (localBindingRange,attrLocalBindingBuilder) -> 
                                let lastRange = 
                                    match moreLocalBindingsLastRange with 
                                    | None -> localBindingRange 
                                    | Some m -> m
                                Some lastRange, (fun attrs vis mLetKwd -> attrLocalBindingBuilder attrs vis mLetKwd true ::  moreBindings)
                             | None -> 
                                moreLocalBindingsLastRange, (fun _attrs _vis _letm -> moreBindings) 
                   )
# 2182 "..\pars.fsy"
                 : 'localBindings));
# 7705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2196 "..\pars.fsy"
                             let mLetKwd = rhs parseState 1
                             (match _2 with 
                              | Some (localBindingRange,attrLocalBindingBuilder) -> (attrLocalBindingBuilder [] None mLetKwd false,localBindingRange) :: _3 
                              | None -> _3) 
                   )
# 2196 "..\pars.fsy"
                 : 'moreLocalBindings));
# 7720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2201 "..\pars.fsy"
                             [] 
                   )
# 2201 "..\pars.fsy"
                 : 'moreLocalBindings));
# 7730 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2205 "..\pars.fsy"
                             let attrs2 = _1
                             let localBindingRange,localBindingBuilder = _2
                             let attrLocalBindingBuilder = (fun attrs vis mLetKwd _ -> localBindingBuilder (attrs@attrs2) vis mLetKwd)
                             Some(localBindingRange,attrLocalBindingBuilder) 
                   )
# 2205 "..\pars.fsy"
                 : 'attr_localBinding));
# 7745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2210 "..\pars.fsy"
                             None 
                   )
# 2210 "..\pars.fsy"
                 : 'attr_localBinding));
# 7755 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2214 "..\pars.fsy"
                             let (expr:SynExpr),opts = _6
                             let eqm = rhs parseState 5 
                             let mRhs = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingRange = unionRanges (rhs2 parseState 3 5) mRhs
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let mWhole = unionRanges mLetKwd mRhs
                                 let spBind = if IsControlFlowExpression expr then NoSequencePointAtLetBinding else SequencePointAtBinding(mWhole)
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,expr,mRhs,opts,attrs,None))
                             localBindingRange,localBindingBuilder 
                   )
# 2214 "..\pars.fsy"
                 : 'localBinding));
# 7781 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2227 "..\pars.fsy"
                             let mWhole = rhs2 parseState 3 5 
                             let mRhs = rhs parseState 5
                             let optReturnType = _4 
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = SequencePointAtBinding(unionRanges mLetKwd mRhs)
                                 let eqm = rhs parseState 5
                                 let zeroWidthAtEnd = eqm.EndRange
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,arbExpr("localBinding1",zeroWidthAtEnd),mRhs,[],attrs,None))  
                             mWhole,localBindingBuilder 
                   )
# 2227 "..\pars.fsy"
                 : 'localBinding));
# 7805 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2239 "..\pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 5) (FSComp.SR.parsUnexpectedEndOfFileDefinition())
                             let optReturnType = _4 
                             let mWhole = match optReturnType with None -> rhs parseState 3 | Some _ -> rhs2 parseState 3 4
                             let mRhs = mWhole.EndRange  // zero-width range at end of last good token
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = SequencePointAtBinding(unionRanges mLetKwd mRhs)
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,arbExpr("localBinding2",mRhs),mRhs,[],attrs,None))  
                             mWhole,localBindingBuilder 
                   )
# 2239 "..\pars.fsy"
                 : 'localBinding));
# 7829 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2253 "..\pars.fsy"
                             _2 
                   )
# 2253 "..\pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7841 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2255 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             let a,b = _2
                             (exprFromParseError a, b) 
                   )
# 2255 "..\pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7855 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2259 "..\pars.fsy"
                             _1 
                   )
# 2259 "..\pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7866 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2262 "..\pars.fsy"
                                                                _1, List.rev _2 
                   )
# 2262 "..\pars.fsy"
                 : 'typedExprWithStaticOptimizations));
# 7878 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2265 "..\pars.fsy"
                                                                      _2 :: _1 
                   )
# 2265 "..\pars.fsy"
                 : 'opt_staticOptimizations));
# 7890 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2266 "..\pars.fsy"
                           [] 
                   )
# 2266 "..\pars.fsy"
                 : 'opt_staticOptimizations));
# 7900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2269 "..\pars.fsy"
                                                                                      (_2,_4) 
                   )
# 2269 "..\pars.fsy"
                 : 'staticOptimization));
# 7912 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2272 "..\pars.fsy"
                                                                                        _3 :: _1 
                   )
# 2272 "..\pars.fsy"
                 : 'staticOptimizationConditions));
# 7924 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2273 "..\pars.fsy"
                                                       [_1 ] 
                   )
# 2273 "..\pars.fsy"
                 : 'staticOptimizationConditions));
# 7935 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2276 "..\pars.fsy"
                                           WhenTyparTyconEqualsTycon(_1,_3,lhs parseState) 
                   )
# 2276 "..\pars.fsy"
                 : 'staticOptimizationCondition));
# 7947 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2277 "..\pars.fsy"
                                        WhenTyparIsStruct(_1,lhs parseState) 
                   )
# 2277 "..\pars.fsy"
                 : 'staticOptimizationCondition));
# 7958 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : sbyte * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2280 "..\pars.fsy"
                                if snd _1 then errorR(Error(FSComp.SR.lexOutsideEightBitSigned(), lhs parseState));
                                SynConst.SByte (fst _1) 
                   )
# 2280 "..\pars.fsy"
                 : 'rawConstant));
# 7970 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2282 "..\pars.fsy"
                                 SynConst.Byte _1 
                   )
# 2282 "..\pars.fsy"
                 : 'rawConstant));
# 7981 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int16 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2283 "..\pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixteenBitSigned(), lhs parseState));
                                 SynConst.Int16 (fst _1) 
                   )
# 2283 "..\pars.fsy"
                 : 'rawConstant));
# 7993 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint16)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2285 "..\pars.fsy"
                                  SynConst.UInt16 _1 
                   )
# 2285 "..\pars.fsy"
                 : 'rawConstant));
# 8004 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2286 "..\pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState));
                                 SynConst.Int32 (fst _1) 
                   )
# 2286 "..\pars.fsy"
                 : 'rawConstant));
# 8016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2288 "..\pars.fsy"
                                  SynConst.UInt32 _1 
                   )
# 2288 "..\pars.fsy"
                 : 'rawConstant));
# 8027 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2289 "..\pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixtyFourBitSigned(), lhs parseState));
                                 SynConst.Int64 (fst _1) 
                   )
# 2289 "..\pars.fsy"
                 : 'rawConstant));
# 8039 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2291 "..\pars.fsy"
                                  SynConst.UInt64 _1 
                   )
# 2291 "..\pars.fsy"
                 : 'rawConstant));
# 8050 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2292 "..\pars.fsy"
                                     SynConst.IntPtr _1 
                   )
# 2292 "..\pars.fsy"
                 : 'rawConstant));
# 8061 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2293 "..\pars.fsy"
                                      SynConst.UIntPtr _1 
                   )
# 2293 "..\pars.fsy"
                 : 'rawConstant));
# 8072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2294 "..\pars.fsy"
                                  SynConst.Single _1 
                   )
# 2294 "..\pars.fsy"
                 : 'rawConstant));
# 8083 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2295 "..\pars.fsy"
                                  SynConst.Double _1 
                   )
# 2295 "..\pars.fsy"
                 : 'rawConstant));
# 8094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2296 "..\pars.fsy"
                                SynConst.Char _1 
                   )
# 2296 "..\pars.fsy"
                 : 'rawConstant));
# 8105 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Decimal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2297 "..\pars.fsy"
                                   SynConst.Decimal _1 
                   )
# 2297 "..\pars.fsy"
                 : 'rawConstant));
# 8116 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : (string * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2298 "..\pars.fsy"
                                  SynConst.UserNum _1 
                   )
# 2298 "..\pars.fsy"
                 : 'rawConstant));
# 8127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2299 "..\pars.fsy"
                                                 SynConst.String (_1,lhs parseState) 
                   )
# 2299 "..\pars.fsy"
                 : 'rawConstant));
# 8138 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte[])) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2300 "..\pars.fsy"
                                     SynConst.Bytes (_1,lhs parseState) 
                   )
# 2300 "..\pars.fsy"
                 : 'rawConstant));
# 8149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2303 "..\pars.fsy"
                                       _1 
                   )
# 2303 "..\pars.fsy"
                 : 'constant));
# 8160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2304 "..\pars.fsy"
                                                                            SynConst.Measure(_1, _3) 
                   )
# 2304 "..\pars.fsy"
                 : 'constant));
# 8172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2308 "..\pars.fsy"
                              let xmlDoc = grabXmlDoc(parseState,1)
                              mkSynBinding (xmlDoc,_1), rhs parseState 1 
                   )
# 2308 "..\pars.fsy"
                 : 'bindingPattern));
# 8184 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2314 "..\pars.fsy"
                             SynSimplePat.Id (_1,None,false,false,false,rhs parseState 1) 
                   )
# 2314 "..\pars.fsy"
                 : 'simplePattern));
# 8195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2316 "..\pars.fsy"
                             SynSimplePat.Id (_2,None,false,false,true,rhs parseState 2) 
                   )
# 2316 "..\pars.fsy"
                 : 'simplePattern));
# 8206 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2318 "..\pars.fsy"
                             let lhsm = lhs parseState 
                             SynSimplePat.Typed(_1,_3,lhsm) 
                   )
# 2318 "..\pars.fsy"
                 : 'simplePattern));
# 8219 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2321 "..\pars.fsy"
                             let lhsm = lhs parseState 
                             SynSimplePat.Attrib(_2,_1,lhsm) 
                   )
# 2321 "..\pars.fsy"
                 : 'simplePattern));
# 8232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2326 "..\pars.fsy"
                             [_1] 
                   )
# 2326 "..\pars.fsy"
                 : 'simplePatternCommaList));
# 8243 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2328 "..\pars.fsy"
                             _1 :: _3 
                   )
# 2328 "..\pars.fsy"
                 : 'simplePatternCommaList));
# 8255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2332 "..\pars.fsy"
                             _2 
                   )
# 2332 "..\pars.fsy"
                 : 'simplePatterns));
# 8267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2334 "..\pars.fsy"
                             [] 
                   )
# 2334 "..\pars.fsy"
                 : 'simplePatterns));
# 8278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2336 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             [] 
                   )
# 2336 "..\pars.fsy"
                 : 'simplePatterns));
# 8291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2339 "..\pars.fsy"
                             (* silent recovery *) [] 
                   )
# 2339 "..\pars.fsy"
                 : 'simplePatterns));
# 8302 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2341 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             [] 
                   )
# 2341 "..\pars.fsy"
                 : 'simplePatterns));
# 8314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2347 "..\pars.fsy"
                             SynPat.Named (_1,_3,false,None,rhs2 parseState 1 3) 
                   )
# 2347 "..\pars.fsy"
                 : Ast.SynPat));
# 8326 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2349 "..\pars.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 2349 "..\pars.fsy"
                 : Ast.SynPat));
# 8338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2351 "..\pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]), None, None,[SynPat.Tuple ([_1;_3],rhs2 parseState 1 3)],None,lhs parseState) 
                   )
# 2351 "..\pars.fsy"
                 : Ast.SynPat));
# 8350 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2353 "..\pars.fsy"
                             SynPat.Tuple(List.rev _1, lhs parseState) 
                   )
# 2353 "..\pars.fsy"
                 : Ast.SynPat));
# 8361 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2355 "..\pars.fsy"
                             SynPat.Ands(List.rev _1, lhs parseState) 
                   )
# 2355 "..\pars.fsy"
                 : Ast.SynPat));
# 8372 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2357 "..\pars.fsy"
                             _1 
                   )
# 2357 "..\pars.fsy"
                 : Ast.SynPat));
# 8383 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2361 "..\pars.fsy"
                             _3 :: _1 
                   )
# 2361 "..\pars.fsy"
                 : 'tuplePatternElements));
# 8395 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2363 "..\pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2363 "..\pars.fsy"
                 : 'tuplePatternElements));
# 8407 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2367 "..\pars.fsy"
                             _3 :: _1 
                   )
# 2367 "..\pars.fsy"
                 : 'conjPatternElements));
# 8419 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2369 "..\pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2369 "..\pars.fsy"
                 : 'conjPatternElements));
# 8431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2373 "..\pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,Some _2,[],vis,lhs parseState) 
                   )
# 2373 "..\pars.fsy"
                 : 'constrPattern));
# 8443 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2375 "..\pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2,_3,vis,lhs parseState) 
                   )
# 2375 "..\pars.fsy"
                 : 'constrPattern));
# 8456 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2377 "..\pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2,_4,vis,lhs parseState) 
                   )
# 2377 "..\pars.fsy"
                 : 'constrPattern));
# 8469 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2379 "..\pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2,_4,vis,lhs parseState) 
                   )
# 2379 "..\pars.fsy"
                 : 'constrPattern));
# 8482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2381 "..\pars.fsy"
                             SynPat.IsInst(_2,lhs parseState) 
                   )
# 2381 "..\pars.fsy"
                 : 'constrPattern));
# 8493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2383 "..\pars.fsy"
                             _1 
                   )
# 2383 "..\pars.fsy"
                 : 'constrPattern));
# 8504 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2387 "..\pars.fsy"
                             _1 :: _2 
                   )
# 2387 "..\pars.fsy"
                 : 'atomicPatterns));
# 8516 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2389 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 2389 "..\pars.fsy"
                 : 'atomicPatterns));
# 8529 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2392 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 2392 "..\pars.fsy"
                 : 'atomicPatterns));
# 8542 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2394 "..\pars.fsy"
                                         [_1] 
                   )
# 2394 "..\pars.fsy"
                 : 'atomicPatterns));
# 8553 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2399 "..\pars.fsy"
                             SynPat.QuoteExpr(_1,lhs parseState) 
                   )
# 2399 "..\pars.fsy"
                 : 'atomicPattern));
# 8564 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2400 "..\pars.fsy"
                                             SynPat.DeprecatedCharRange (_1,_3,rhs2 parseState 1 3) 
                   )
# 2400 "..\pars.fsy"
                 : 'atomicPattern));
# 8576 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2402 "..\pars.fsy"
                             _2 
                   )
# 2402 "..\pars.fsy"
                 : 'atomicPattern));
# 8588 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2404 "..\pars.fsy"
                             SynPat.ArrayOrList(false,_2,lhs parseState) 
                   )
# 2404 "..\pars.fsy"
                 : 'atomicPattern));
# 8599 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2406 "..\pars.fsy"
                             SynPat.ArrayOrList(true,_2, lhs parseState) 
                   )
# 2406 "..\pars.fsy"
                 : 'atomicPattern));
# 8610 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2408 "..\pars.fsy"
                             SynPat.Wild (lhs parseState) 
                   )
# 2408 "..\pars.fsy"
                 : 'atomicPattern));
# 8620 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2410 "..\pars.fsy"
                             SynPat.OptionalVal(_2,lhs parseState) 
                   )
# 2410 "..\pars.fsy"
                 : 'atomicPattern));
# 8631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2412 "..\pars.fsy"
                             let vis,lidwd = _1 
                             if List.length lidwd.Lid > 1 || (let c = (List.head lidwd.Lid).idText.[0] in Char.IsUpper(c) && not (Char.IsLower c)) 
                             then mkSynPatMaybeVar lidwd vis (lhs parseState)
                             else mkSynPatVar vis (List.head lidwd.Lid) 
                   )
# 2412 "..\pars.fsy"
                 : 'atomicPattern));
# 8645 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2417 "..\pars.fsy"
                             SynPat.Const (_1,_1.Range (lhs parseState)) 
                   )
# 2417 "..\pars.fsy"
                 : 'atomicPattern));
# 8656 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2419 "..\pars.fsy"
                             SynPat.Const(SynConst.Bool false,lhs parseState) 
                   )
# 2419 "..\pars.fsy"
                 : 'atomicPattern));
# 8666 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2421 "..\pars.fsy"
                             SynPat.Const(SynConst.Bool true,lhs parseState) 
                   )
# 2421 "..\pars.fsy"
                 : 'atomicPattern));
# 8676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2423 "..\pars.fsy"
                             SynPat.Null(lhs parseState) 
                   )
# 2423 "..\pars.fsy"
                 : 'atomicPattern));
# 8686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2425 "..\pars.fsy"
                             let m = (lhs parseState)
                             SynPat.Paren(_2 m,m) 
                   )
# 2425 "..\pars.fsy"
                 : 'atomicPattern));
# 8699 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2428 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             patFromParseError (_2 (rhs2 parseState 1 2)) 
                   )
# 2428 "..\pars.fsy"
                 : 'atomicPattern));
# 8712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2431 "..\pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
# 2431 "..\pars.fsy"
                 : 'atomicPattern));
# 8723 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2433 "..\pars.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                              SynPat.Wild (lhs parseState)
                   )
# 2433 "..\pars.fsy"
                 : 'atomicPattern));
# 8735 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2440 "..\pars.fsy"
                             (fun m -> _1) 
                   )
# 2440 "..\pars.fsy"
                 : 'parenPatternBody));
# 8746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2442 "..\pars.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit,m)) 
                   )
# 2442 "..\pars.fsy"
                 : 'parenPatternBody));
# 8756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2471 "..\pars.fsy"
                             SynPat.Named (_1,_3,false,None,rhs2 parseState 1 3) 
                   )
# 2471 "..\pars.fsy"
                 : 'parenPattern));
# 8768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2473 "..\pars.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 2473 "..\pars.fsy"
                 : 'parenPattern));
# 8780 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2475 "..\pars.fsy"
                             SynPat.Tuple(List.rev _1,lhs parseState) 
                   )
# 2475 "..\pars.fsy"
                 : 'parenPattern));
# 8791 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2477 "..\pars.fsy"
                             SynPat.Ands(List.rev _1,rhs2 parseState 1 3) 
                   )
# 2477 "..\pars.fsy"
                 : 'parenPattern));
# 8802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2479 "..\pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Typed(_1,_3,lhsm) 
                   )
# 2479 "..\pars.fsy"
                 : 'parenPattern));
# 8815 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2482 "..\pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Attrib(_2,_1,lhsm) 
                   )
# 2482 "..\pars.fsy"
                 : 'parenPattern));
# 8828 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2485 "..\pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]), None, None, [ SynPat.Tuple ([_1;_3],rhs2 parseState 1 3) ],None,lhs parseState) 
                   )
# 2485 "..\pars.fsy"
                 : 'parenPattern));
# 8840 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2486 "..\pars.fsy"
                                         _1 
                   )
# 2486 "..\pars.fsy"
                 : 'parenPattern));
# 8851 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2490 "..\pars.fsy"
                             _3 :: _1 
                   )
# 2490 "..\pars.fsy"
                 : 'tupleParenPatternElements));
# 8863 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2492 "..\pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2492 "..\pars.fsy"
                 : 'tupleParenPatternElements));
# 8875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2496 "..\pars.fsy"
                             _3 :: _1 
                   )
# 2496 "..\pars.fsy"
                 : 'conjParenPatternElements));
# 8887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2498 "..\pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2498 "..\pars.fsy"
                 : 'conjParenPatternElements));
# 8899 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2501 "..\pars.fsy"
                                                    let rs,m = _1 in SynPat.Record (rs,m) 
                   )
# 2501 "..\pars.fsy"
                 : 'recordPatternElements));
# 8910 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2505 "..\pars.fsy"
                             [_1],lhs parseState 
                   )
# 2505 "..\pars.fsy"
                 : 'recordPatternElementsAux));
# 8922 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2507 "..\pars.fsy"
                             let r = _1 in let (rs,dropMark) = _3 in (r :: rs),lhs parseState 
                   )
# 2507 "..\pars.fsy"
                 : 'recordPatternElementsAux));
# 8935 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2510 "..\pars.fsy"
                                                    (List.frontAndBack _1.Lid,_3) 
                   )
# 2510 "..\pars.fsy"
                 : 'recordPatternElement));
# 8947 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2514 "..\pars.fsy"
                             [] 
                   )
# 2514 "..\pars.fsy"
                 : 'listPatternElements));
# 8957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2516 "..\pars.fsy"
                             [_1] 
                   )
# 2516 "..\pars.fsy"
                 : 'listPatternElements));
# 8969 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2518 "..\pars.fsy"
                             _1 :: _3 
                   )
# 2518 "..\pars.fsy"
                 : 'listPatternElements));
# 8982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2523 "..\pars.fsy"
                             _2 
                   )
# 2523 "..\pars.fsy"
                 : Ast.SynExpr));
# 8994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2525 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                             exprFromParseError _2 
                   )
# 2525 "..\pars.fsy"
                 : Ast.SynExpr));
# 9007 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2528 "..\pars.fsy"
                             _1 
                   )
# 2528 "..\pars.fsy"
                 : Ast.SynExpr));
# 9018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2533 "..\pars.fsy"
                             _2 
                   )
# 2533 "..\pars.fsy"
                 : Ast.SynExpr));
# 9030 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2535 "..\pars.fsy"
                             _1 
                   )
# 2535 "..\pars.fsy"
                 : Ast.SynExpr));
# 9041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2540 "..\pars.fsy"
                                                         _1 
                   )
# 2540 "..\pars.fsy"
                 : 'typedSeqExprBlockR));
# 9052 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2541 "..\pars.fsy"
                                        _1 
                   )
# 2541 "..\pars.fsy"
                 : 'typedSeqExprBlockR));
# 9063 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2544 "..\pars.fsy"
                                                                               SynExpr.Typed (_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 2544 "..\pars.fsy"
                 : 'typedSeqExpr));
# 9075 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2545 "..\pars.fsy"
                                   _1 
                   )
# 2545 "..\pars.fsy"
                 : 'typedSeqExpr));
# 9086 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2549 "..\pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,true,_1,_3,unionRanges _1.Range _3.Range) 
                   )
# 2549 "..\pars.fsy"
                 : 'seqExpr));
# 9099 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2551 "..\pars.fsy"
                             _1 
                   )
# 2551 "..\pars.fsy"
                 : 'seqExpr));
# 9111 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2553 "..\pars.fsy"
                             _1 
                   )
# 2553 "..\pars.fsy"
                 : 'seqExpr));
# 9122 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2555 "..\pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_3,unionRanges _1.Range _3.Range ) 
                   )
# 2555 "..\pars.fsy"
                 : 'seqExpr));
# 9134 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2557 "..\pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_4,unionRanges _1.Range _4.Range) 
                   )
# 2557 "..\pars.fsy"
                 : 'seqExpr));
# 9147 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2559 "..\pars.fsy"
                            let hwlb,m = _1
                            let mLetKwd,isUse = match hwlb with (BindingSetPreAttrs(m,_,isUse,_,_))  -> m,isUse
                            reportParseErrorAt mLetKwd (FSComp.SR.parsExpectedStatementAfterLet(if isUse then "use" else "let"))
                            let fauxRange = m.EndRange // zero width range at end of m
                            mkLocalBindings (m,hwlb,arbExpr("seqExpr",fauxRange)) 
                   )
# 2559 "..\pars.fsy"
                 : 'seqExpr));
# 9162 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2570 "..\pars.fsy"
                                  debugPrint("recovering via error"); true 
                   )
# 2570 "..\pars.fsy"
                 : 'recover));
# 9172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2571 "..\pars.fsy"
                                debugPrint("recovering via EOF"); false 
                   )
# 2571 "..\pars.fsy"
                 : 'recover));
# 9183 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2576 "..\pars.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range,_1,_3) 
                   )
# 2576 "..\pars.fsy"
                 : Ast.SynExpr));
# 9195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2578 "..\pars.fsy"
                            mkLocalBindings (rhs2 parseState 1 2,_1,arbExpr("declExpr1",(rhs parseState 3))) 
                   )
# 2578 "..\pars.fsy"
                 : Ast.SynExpr));
# 9206 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2583 "..\pars.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _2.Range,hwlb,_2) 
                   )
# 2583 "..\pars.fsy"
                 : Ast.SynExpr));
# 9219 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2586 "..\pars.fsy"
                            let hwlb,m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m,hwlb,arbExpr("declExpr2",(rhs parseState 2))) 
                   )
# 2586 "..\pars.fsy"
                 : Ast.SynExpr));
# 9232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2590 "..\pars.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _3.Range ,hwlb,_3) 
                   )
# 2590 "..\pars.fsy"
                 : Ast.SynExpr));
# 9245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2593 "..\pars.fsy"
                            let hwlb,m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3),hwlb,arbExpr("declExpr3",(rhs parseState 3))) 
                   )
# 2593 "..\pars.fsy"
                 : Ast.SynExpr));
# 9258 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2598 "..\pars.fsy"
                            let e = snd _1
                            SynExpr.Do(e,e.Range) 
                   )
# 2598 "..\pars.fsy"
                 : Ast.SynExpr));
# 9270 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonMatchingExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2602 "..\pars.fsy"
                             _1 
                   )
# 2602 "..\pars.fsy"
                 : Ast.SynExpr));
# 9281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2603 "..\pars.fsy"
                                                          _1 
                   )
# 2603 "..\pars.fsy"
                 : Ast.SynExpr));
# 9292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2606 "..\pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith,(clauses,mLast) = _3 
                             let spBind = SequencePointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.Match(spBind, _2,clauses,false,unionRanges mMatch mLast) 
                   )
# 2606 "..\pars.fsy"
                 : Ast.SynExpr));
# 9307 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2612 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch());
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
# 2612 "..\pars.fsy"
                 : Ast.SynExpr));
# 9321 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2617 "..\pars.fsy"
                             let mTry = (rhs parseState 1)
                             let spTry = SequencePointAtTry(mTry) 
                             let mWith,(clauses,mLast) = _3 
                             let spWith = SequencePointAtWith(mWith) 
                             let mTryToWith = unionRanges mTry mWith 
                             let mWithToLast = unionRanges mWith mLast 
                             let mTryToLast = unionRanges mTry mLast
                             SynExpr.TryWith(_2, mTryToWith, clauses,mWithToLast, mTryToLast,spTry,spWith) 
                   )
# 2617 "..\pars.fsy"
                 : Ast.SynExpr));
# 9340 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2627 "..\pars.fsy"
                             // Produce approximate expression during error recovery 
                             // Include any expressions to make sure they gets type checked in case that generates useful results for intellisense 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTry());
                             exprFromParseError _2 
                   )
# 2627 "..\pars.fsy"
                 : Ast.SynExpr));
# 9355 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2633 "..\pars.fsy"
                             let mTry = rhs parseState 1 
                             let spTry = SequencePointAtTry(mTry) 
                             let spFinally = SequencePointAtFinally(rhs parseState 3) 
                             let mTryToLast = unionRanges mTry _4.Range 
                             SynExpr.TryFinally(_2, _4,mTryToLast,spTry,spFinally) 
                   )
# 2633 "..\pars.fsy"
                 : Ast.SynExpr));
# 9371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2640 "..\pars.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 2640 "..\pars.fsy"
                 : Ast.SynExpr));
# 9384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2644 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf()); 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             exprFromParseError _2 
                   )
# 2644 "..\pars.fsy"
                 : Ast.SynExpr));
# 9401 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2652 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf())
                             // Produce an approximate expression during error recovery. There can still be value in doing this even
                             // for this pathological case.
                             let m = (rhs parseState 1)
                             let mEnd = m.EndRange
                             let spIfToThen = SequencePointAtBinding mEnd
                             exprFromParseError (SynExpr.IfThenElse(arbExpr("ifGuard1",mEnd),arbExpr("thenBody1",mEnd),None,spIfToThen,true,m,m)) 
                   )
# 2652 "..\pars.fsy"
                 : Ast.SynExpr));
# 9418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2661 "..\pars.fsy"
                             SynExpr.Lazy(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2661 "..\pars.fsy"
                 : Ast.SynExpr));
# 9429 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2664 "..\pars.fsy"
                             SynExpr.Assert(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2664 "..\pars.fsy"
                 : Ast.SynExpr));
# 9440 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2667 "..\pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 2667 "..\pars.fsy"
                 : Ast.SynExpr));
# 9450 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2670 "..\pars.fsy"
                             SynExpr.Lazy(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2670 "..\pars.fsy"
                 : Ast.SynExpr));
# 9461 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2673 "..\pars.fsy"
                             SynExpr.Assert(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2673 "..\pars.fsy"
                 : Ast.SynExpr));
# 9472 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2676 "..\pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 2676 "..\pars.fsy"
                 : Ast.SynExpr));
# 9482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2679 "..\pars.fsy"
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.While(spWhile,_2,_4,mWhileAll) 
                   )
# 2679 "..\pars.fsy"
                 : Ast.SynExpr));
# 9499 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2685 "..\pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.While(spWhile,_2,_4,mWhileAll)) 
                   )
# 2685 "..\pars.fsy"
                 : Ast.SynExpr));
# 9517 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2692 "..\pars.fsy"
                             // silent recovery 
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = unionRanges (rhs parseState 4) (rhs parseState 5)
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 5)
                             SynExpr.While(spWhile,_2,arbExpr("whileBody1",mWhileBodyArb),mWhileAll) 
                   )
# 2692 "..\pars.fsy"
                 : Ast.SynExpr));
# 9535 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2700 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsWhileDoExpected())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,_2,arbExpr("whileBody2",mWhileBodyArb),mWhileAll))  
                   )
# 2700 "..\pars.fsy"
                 : Ast.SynExpr));
# 9552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2708 "..\pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             arbExpr("whileLoop1",rhs parseState 1)  
                   )
# 2708 "..\pars.fsy"
                 : Ast.SynExpr));
# 9564 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2712 "..\pars.fsy"
                             //silent recovery
                             let mWhileHeader = rhs parseState 1
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,arbExpr("whileGuard1",mWhileHeader),arbExpr("whileBody3",mWhileBodyArb),mWhileAll))  
                   )
# 2712 "..\pars.fsy"
                 : Ast.SynExpr));
# 9580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2720 "..\pars.fsy"
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2720 "..\pars.fsy"
                 : Ast.SynExpr));
# 9596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2725 "..\pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,mForLoopAll) 
                   )
# 2725 "..\pars.fsy"
                 : Ast.SynExpr));
# 9614 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2732 "..\pars.fsy"
                             // Silent recovery
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2a",mForLoopBodyArb),mForLoopAll) 
                   )
# 2732 "..\pars.fsy"
                 : Ast.SynExpr));
# 9633 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2741 "..\pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2",mForLoopBodyArb),mForLoopAll) 
                   )
# 2741 "..\pars.fsy"
                 : Ast.SynExpr));
# 9652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2750 "..\pars.fsy"
                             let (a,b,ok) = _2 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsForDoExpected())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody1",mForLoopBodyArb),mForLoopAll) 
                   )
# 2750 "..\pars.fsy"
                 : Ast.SynExpr));
# 9670 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2759 "..\pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll) 
                   )
# 2759 "..\pars.fsy"
                 : Ast.SynExpr));
# 9688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2766 "..\pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             // Still produce an expression
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll)) 
                   )
# 2766 "..\pars.fsy"
                 : Ast.SynExpr));
# 9708 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2775 "..\pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll) 
                   )
# 2775 "..\pars.fsy"
                 : Ast.SynExpr));
# 9727 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2784 "..\pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 2784 "..\pars.fsy"
                 : Ast.SynExpr));
# 9746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2793 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 2793 "..\pars.fsy"
                 : Ast.SynExpr));
# 9764 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2803 "..\pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 2
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             let spBind = SequencePointAtForLoop(mForLoopHeader)
                             SynExpr.For(spBind,mkSynId mForLoopHeader "_loopVar",arbExpr("startLoopRange1",mForLoopHeader),true,arbExpr("endLoopRange1",rhs parseState 3),_4,mForLoopAll) 
                   )
# 2803 "..\pars.fsy"
                 : Ast.SynExpr));
# 9781 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2822 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsIdentifierExpected())
                             arbExpr("declExpr12",(rhs parseState 1)) 
                   )
# 2822 "..\pars.fsy"
                 : Ast.SynExpr));
# 9793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2826 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsInOrEqualExpected())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 4
                             let mForLoopAll = rhs2 parseState 1 4
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll) 
                   )
# 2826 "..\pars.fsy"
                 : Ast.SynExpr));
# 9810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2834 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll)) 
                   )
# 2834 "..\pars.fsy"
                 : Ast.SynExpr));
# 9827 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2843 "..\pars.fsy"
                            SynExpr.YieldOrReturn((_1,not _1),_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2843 "..\pars.fsy"
                 : Ast.SynExpr));
# 9839 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2846 "..\pars.fsy"
                            SynExpr.YieldOrReturnFrom((_1,not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2846 "..\pars.fsy"
                 : Ast.SynExpr));
# 9851 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2849 "..\pars.fsy"
                            let spBind = SequencePointAtBinding(rhs2 parseState 1 5)
                            let m = unionRanges (rhs parseState 1) _7.Range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4,_7,m) 
                   )
# 2849 "..\pars.fsy"
                 : Ast.SynExpr));
# 9868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2854 "..\pars.fsy"
                            _5 (if _1 = "use" then "use!" else "let!") (rhs parseState 1);  // report unterminated error 
                            let spBind = SequencePointAtBinding(unionRanges (rhs parseState 1) _4.Range)
                            let m = unionRanges (rhs parseState 1) _7.Range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4,_7,m) 
                   )
# 2854 "..\pars.fsy"
                 : Ast.SynExpr));
# 9887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2860 "..\pars.fsy"
                            // error recovery that allows intellisense when writing incomplete computation expressions 
                            let spBind = SequencePointAtBinding(unionRanges (rhs parseState 1) _4.Range) 
                            let mAll = unionRanges (rhs parseState 1) (rhs parseState 7)
                            let m = _4.Range.EndRange // zero-width range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4, SynExpr.ImplicitZero m, mAll) 
                   )
# 2860 "..\pars.fsy"
                 : Ast.SynExpr));
# 9906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2867 "..\pars.fsy"
                            let spBind = NoSequencePointAtDoBinding
                            SynExpr.LetOrUseBang(spBind,false,true,SynPat.Const(SynConst.Unit,_2.Range),_2,_5, unionRanges (rhs parseState 1) _5.Range) 
                   )
# 2867 "..\pars.fsy"
                 : Ast.SynExpr));
# 9920 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2871 "..\pars.fsy"
                            SynExpr.DoBang(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2871 "..\pars.fsy"
                 : Ast.SynExpr));
# 9932 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicSingleLineQualifiersThenArrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2874 "..\pars.fsy"
                            let spBind = SequencePointAtForLoop(rhs2 parseState 1 2)
                            let (a,b,_) = _2 in SynExpr.ForEach(spBind,SeqExprOnly true,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2874 "..\pars.fsy"
                 : Ast.SynExpr));
# 9946 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2878 "..\pars.fsy"
                            errorR(Error(FSComp.SR.parsArrowUseIsLimited(),lhs parseState));
                            SynExpr.YieldOrReturn((true,true),_2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
# 2878 "..\pars.fsy"
                 : Ast.SynExpr));
# 9958 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2883 "..\pars.fsy"
                                                             SynExpr.TypeTest(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 2883 "..\pars.fsy"
                 : Ast.SynExpr));
# 9970 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2884 "..\pars.fsy"
                                                             SynExpr.Upcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 2884 "..\pars.fsy"
                 : Ast.SynExpr));
# 9982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2885 "..\pars.fsy"
                                                             SynExpr.Downcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 2885 "..\pars.fsy"
                 : Ast.SynExpr));
# 9994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2888 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ":=" _3 
                   )
# 2888 "..\pars.fsy"
                 : Ast.SynExpr));
# 10006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2889 "..\pars.fsy"
                                                                         mkSynAssign _1 _3 
                   )
# 2889 "..\pars.fsy"
                 : Ast.SynExpr));
# 10018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2891 "..\pars.fsy"
                                                        let exprs,commas = _1 in SynExpr.Tuple(List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ) 
                   )
# 2891 "..\pars.fsy"
                 : Ast.SynExpr));
# 10029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2892 "..\pars.fsy"
                                                                    SynExpr.JoinIn(_1,rhs parseState 2,_3,unionRanges _1.Range _3.Range) 
                   )
# 2892 "..\pars.fsy"
                 : Ast.SynExpr));
# 10041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2893 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "||" _3 
                   )
# 2893 "..\pars.fsy"
                 : Ast.SynExpr));
# 10053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2894 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 2894 "..\pars.fsy"
                 : Ast.SynExpr));
# 10066 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2895 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "or" _3 
                   )
# 2895 "..\pars.fsy"
                 : Ast.SynExpr));
# 10078 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2896 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&" _3 
                   )
# 2896 "..\pars.fsy"
                 : Ast.SynExpr));
# 10090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2897 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&&" _3 
                   )
# 2897 "..\pars.fsy"
                 : Ast.SynExpr));
# 10102 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2898 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 2898 "..\pars.fsy"
                 : Ast.SynExpr));
# 10115 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2899 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "=" _3 
                   )
# 2899 "..\pars.fsy"
                 : Ast.SynExpr));
# 10127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2900 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 2900 "..\pars.fsy"
                 : Ast.SynExpr));
# 10140 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2901 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "$" _3 
                   )
# 2901 "..\pars.fsy"
                 : Ast.SynExpr));
# 10152 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2902 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "<" _3 
                   )
# 2902 "..\pars.fsy"
                 : Ast.SynExpr));
# 10165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2903 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ">" _3 
                   )
# 2903 "..\pars.fsy"
                 : Ast.SynExpr));
# 10178 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2904 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 2904 "..\pars.fsy"
                 : Ast.SynExpr));
# 10191 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2905 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 2905 "..\pars.fsy"
                 : Ast.SynExpr));
# 10204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2906 "..\pars.fsy"
                                                                    SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;_3],[rhs parseState 2],unionRanges _1.Range _3.Range),unionRanges _1.Range _3.Range) 
                   )
# 2906 "..\pars.fsy"
                 : Ast.SynExpr));
# 10216 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2907 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 2907 "..\pars.fsy"
                 : Ast.SynExpr));
# 10229 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2908 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "-" _3 
                   )
# 2908 "..\pars.fsy"
                 : Ast.SynExpr));
# 10241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2909 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "*" _3 
                   )
# 2909 "..\pars.fsy"
                 : Ast.SynExpr));
# 10253 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2910 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 2910 "..\pars.fsy"
                 : Ast.SynExpr));
# 10266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2911 "..\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 2911 "..\pars.fsy"
                 : Ast.SynExpr));
# 10279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2913 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("in")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "@in" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2913 "..\pars.fsy"
                 : Ast.SynExpr));
# 10291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2915 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("||")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "||" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2915 "..\pars.fsy"
                 : Ast.SynExpr));
# 10303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2917 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2917 "..\pars.fsy"
                 : Ast.SynExpr));
# 10316 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2919 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("or")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "or" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2919 "..\pars.fsy"
                 : Ast.SynExpr));
# 10328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2921 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2921 "..\pars.fsy"
                 : Ast.SynExpr));
# 10340 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2923 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&&" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2923 "..\pars.fsy"
                 : Ast.SynExpr));
# 10352 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2925 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2925 "..\pars.fsy"
                 : Ast.SynExpr));
# 10365 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2927 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("=")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "=" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2927 "..\pars.fsy"
                 : Ast.SynExpr));
# 10377 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2929 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2929 "..\pars.fsy"
                 : Ast.SynExpr));
# 10390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2931 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("$")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "$" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2931 "..\pars.fsy"
                 : Ast.SynExpr));
# 10402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2933 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2933 "..\pars.fsy"
                 : Ast.SynExpr));
# 10415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2935 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(">")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 ">" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2935 "..\pars.fsy"
                 : Ast.SynExpr));
# 10428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2937 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2937 "..\pars.fsy"
                 : Ast.SynExpr));
# 10441 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2939 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2939 "..\pars.fsy"
                 : Ast.SynExpr));
# 10454 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2941 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("::")); 
                                                                                 SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;(arbExpr("declExprInfix",(rhs parseState 3).StartRange))],[rhs parseState 2],unionRanges _1.Range (rhs parseState 3).StartRange),unionRanges _1.Range (rhs parseState 3).StartRange) 
                   )
# 2941 "..\pars.fsy"
                 : Ast.SynExpr));
# 10466 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2943 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2943 "..\pars.fsy"
                 : Ast.SynExpr));
# 10479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2945 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("-")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "-" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2945 "..\pars.fsy"
                 : Ast.SynExpr));
# 10491 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2947 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("*")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "*" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2947 "..\pars.fsy"
                 : Ast.SynExpr));
# 10503 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2949 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2949 "..\pars.fsy"
                 : Ast.SynExpr));
# 10516 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2951 "..\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 2951 "..\pars.fsy"
                 : Ast.SynExpr));
# 10529 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2954 "..\pars.fsy"
                                                                  _1 
                   )
# 2954 "..\pars.fsy"
                 : Ast.SynExpr));
# 10540 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2958 "..\pars.fsy"
                             let con = SynConst.String (_1,rhs parseState 1)
                             let arg2 = SynExpr.Const (con,con.Range (rhs parseState 1)) 
                             arg2 
                   )
# 2958 "..\pars.fsy"
                 : 'dynamicArg));
# 10553 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2962 "..\pars.fsy"
                             _2 
                   )
# 2962 "..\pars.fsy"
                 : 'dynamicArg));
# 10565 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2966 "..\pars.fsy"
                             rhs parseState 1, _2 
                   )
# 2966 "..\pars.fsy"
                 : 'withClauses));
# 10576 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2968 "..\pars.fsy"
                             rhs parseState 1, _2 
                   )
# 2968 "..\pars.fsy"
                 : 'withClauses));
# 10587 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2970 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWith());
                             rhs parseState 1, _2 
                   )
# 2970 "..\pars.fsy"
                 : 'withClauses));
# 10600 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2975 "..\pars.fsy"
                             _1 
                   )
# 2975 "..\pars.fsy"
                 : 'withPatternClauses));
# 10611 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2977 "..\pars.fsy"
                              _2 
                   )
# 2977 "..\pars.fsy"
                 : 'withPatternClauses));
# 10622 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2979 "..\pars.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 2979 "..\pars.fsy"
                 : 'withPatternClauses));
# 10634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2983 "..\pars.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 2983 "..\pars.fsy"
                 : 'withPatternClauses));
# 10646 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2990 "..\pars.fsy"
                             _1, _2, rhs parseState 1 
                   )
# 2990 "..\pars.fsy"
                 : 'patternAndGuard));
# 10658 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2994 "..\pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 2994 "..\pars.fsy"
                 : 'patternClauses));
# 10672 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2998 "..\pars.fsy"
                            let pat,guard,patm = _1 
                            let clauses,mLast = _4 
                            (Clause(pat,guard,_2,patm,SequencePointAtTarget) :: clauses), mLast 
                   )
# 2998 "..\pars.fsy"
                 : 'patternClauses));
# 10687 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3002 "..\pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 3 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 3002 "..\pars.fsy"
                 : 'patternClauses));
# 10702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3007 "..\pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast 
                   )
# 3007 "..\pars.fsy"
                 : 'patternClauses));
# 10717 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3012 "..\pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 2
                            // silent recovery 
                            [Clause(pat,guard,SynExpr.Const(SynConst.Unit,mLast.EndRange),patm,SequencePointAtTarget)], mLast 
                   )
# 3012 "..\pars.fsy"
                 : 'patternClauses));
# 10731 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3019 "..\pars.fsy"
                            Some _2 
                   )
# 3019 "..\pars.fsy"
                 : 'patternGuard));
# 10742 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3021 "..\pars.fsy"
                            None 
                   )
# 3021 "..\pars.fsy"
                 : 'patternGuard));
# 10752 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3025 "..\pars.fsy"
                            _2 
                   )
# 3025 "..\pars.fsy"
                 : Ast.SynExpr));
# 10763 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3029 "..\pars.fsy"
                             let exprThen,mThen = _1 
                             (fun exprGuard mIf -> 
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match _2 with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = SequencePointAtBinding(mIfToThen)
                                 SynExpr.IfThenElse(exprGuard,exprThen,_2,spIfToThen,false,mIfToThen,mIfToEndOfLastBranch)) 
                   )
# 3029 "..\pars.fsy"
                 : 'ifExprCases));
# 10781 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3039 "..\pars.fsy"
                             _2, rhs parseState 1 
                   )
# 3039 "..\pars.fsy"
                 : 'ifExprThen));
# 10792 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3041 "..\pars.fsy"
                             _3,rhs parseState 1 
                   )
# 3041 "..\pars.fsy"
                 : 'ifExprThen));
# 10804 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3043 "..\pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen());
                             exprFromParseError _3,rhs parseState 1 
                   )
# 3043 "..\pars.fsy"
                 : 'ifExprThen));
# 10817 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3048 "..\pars.fsy"
                             None 
                   )
# 3048 "..\pars.fsy"
                 : 'ifExprElifs));
# 10827 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3050 "..\pars.fsy"
                             Some _2 
                   )
# 3050 "..\pars.fsy"
                 : 'ifExprElifs));
# 10838 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3052 "..\pars.fsy"
                             Some _3 
                   )
# 3052 "..\pars.fsy"
                 : 'ifExprElifs));
# 10850 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3054 "..\pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileElse());
                             Some (exprFromParseError _3) 
                   )
# 3054 "..\pars.fsy"
                 : 'ifExprElifs));
# 10863 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3057 "..\pars.fsy"
                             let mElif = rhs parseState 1 
                             Some (_3 _2 mElif) 
                   )
# 3057 "..\pars.fsy"
                 : 'ifExprElifs));
# 10876 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3060 "..\pars.fsy"
                             Some (exprFromParseError _2) 
                   )
# 3060 "..\pars.fsy"
                 : 'ifExprElifs));
# 10888 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3064 "..\pars.fsy"
                             let exprs,commas = _1 in (_3 :: exprs),((rhs parseState 2)::commas) 
                   )
# 3064 "..\pars.fsy"
                 : 'tupleExpr));
# 10900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3066 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let exprs,commas = _1     
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange
                             ((arbExpr("tupleExpr1",zeroWidthAtNextToken)) :: exprs), (rhs parseState 2)::commas 
                   )
# 3066 "..\pars.fsy"
                 : 'tupleExpr));
# 10915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3071 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange 
                             ((arbExpr("tupleExpr2",zeroWidthAtNextToken)) :: [_1]), [rhs parseState 2] 
                   )
# 3071 "..\pars.fsy"
                 : 'tupleExpr));
# 10929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3075 "..\pars.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
# 3075 "..\pars.fsy"
                 : 'tupleExpr));
# 10941 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3079 "..\pars.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
# 3079 "..\pars.fsy"
                 : Ast.SynExpr));
# 10952 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3081 "..\pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3081 "..\pars.fsy"
                 : Ast.SynExpr));
# 10965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3084 "..\pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             if _1 = "&" then 
                                 SynExpr.AddressOf(true,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range)
                             elif _1 = "&&" then 
                                 SynExpr.AddressOf(false,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range)
                             else
                                 mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3084 "..\pars.fsy"
                 : Ast.SynExpr));
# 10983 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3092 "..\pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3092 "..\pars.fsy"
                 : Ast.SynExpr));
# 10996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3095 "..\pars.fsy"
                             SynExpr.AddressOf(true,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3095 "..\pars.fsy"
                 : Ast.SynExpr));
# 11007 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3097 "..\pars.fsy"
                             SynExpr.AddressOf(false,_2,rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3097 "..\pars.fsy"
                 : Ast.SynExpr));
# 11018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3099 "..\pars.fsy"
                             SynExpr.New(false,_2,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3099 "..\pars.fsy"
                 : Ast.SynExpr));
# 11031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3101 "..\pars.fsy"
                             SynExpr.New(false,_2,arbExpr("minusExpr",(rhs parseState 4)),unionRanges (rhs parseState 1) (_2).Range) 
                   )
# 3101 "..\pars.fsy"
                 : Ast.SynExpr));
# 11043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3103 "..\pars.fsy"
                             arbExpr("minusExpr2",(rhs parseState 1)) 
                   )
# 3103 "..\pars.fsy"
                 : Ast.SynExpr));
# 11053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3105 "..\pars.fsy"
                             SynExpr.InferredUpcast(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3105 "..\pars.fsy"
                 : Ast.SynExpr));
# 11064 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3107 "..\pars.fsy"
                             SynExpr.InferredDowncast(_2,unionRanges (rhs parseState 1) _2.Range)
                   )
# 3107 "..\pars.fsy"
                 : Ast.SynExpr));
# 11075 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3109 "..\pars.fsy"
                             _1 
                   )
# 3109 "..\pars.fsy"
                 : Ast.SynExpr));
# 11086 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3113 "..\pars.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, false, _1,_2,unionRanges _1.Range _2.Range)  
                   )
# 3113 "..\pars.fsy"
                 : Ast.SynExpr));
# 11098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3115 "..\pars.fsy"
                             let arg,_ = _1 
                             arg 
                   )
# 3115 "..\pars.fsy"
                 : Ast.SynExpr));
# 11110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3120 "..\pars.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~"^(_1)) arg2 
                   )
# 3120 "..\pars.fsy"
                 : Ast.SynExpr));
# 11125 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3125 "..\pars.fsy"
                             let arg,hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             arg 
                   )
# 3125 "..\pars.fsy"
                 : Ast.SynExpr));
# 11138 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3132 "..\pars.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 3132 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11152 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3137 "..\pars.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 3137 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3142 "..\pars.fsy"
                             let arg1,_ = _1 
                             let mLessThan,mGreaterThan,_,args,commas,mTypeArgs = _3
                             let mWholeExpr = unionRanges arg1.Range mTypeArgs
                             SynExpr.TypeApp(arg1, mLessThan, args, commas, mGreaterThan, mTypeArgs, mWholeExpr), false 
                   )
# 3142 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11181 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3148 "..\pars.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2,hpa2 
                   )
# 3148 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3153 "..\pars.fsy"
                             let arg1,hpa1 = _1 
                             _3 arg1 (lhs parseState) (rhs parseState 2),hpa1 
                   )
# 3153 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11208 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3156 "..\pars.fsy"
                             let arg1 = SynExpr.Ident(ident("base",rhs parseState 1))
                             _3 arg1 (lhs parseState) (rhs parseState 2),false 
                   )
# 3156 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3159 "..\pars.fsy"
                             SynExpr.LongIdent (true,LongIdentWithDots([_2],[]),None,rhs parseState 2),false 
                   )
# 3159 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11231 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3161 "..\pars.fsy"
                             let arg1,hpa1 = _1
                             mkSynInfix (rhs parseState 2) arg1 "?" _3, hpa1 
                   )
# 3161 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3164 "..\pars.fsy"
                             SynExpr.Ident (ident(MangledGlobalName,rhs parseState 1)), false 
                   )
# 3164 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11254 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3166 "..\pars.fsy"
                             SynExpr.Ident (_1),false 
                   )
# 3166 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11265 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3168 "..\pars.fsy"
                             _2 (lhs parseState) false,false 
                   )
# 3168 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11276 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3170 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) false), false 
                   )
# 3170 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11289 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3173 "..\pars.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList(false,[ ], lhs parseState),false  
                   )
# 3173 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11300 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3176 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             // silent recovery 
                             exprFromParseError (SynExpr.ArrayOrList(false,[ ], rhs parseState 1)),false  
                   )
# 3176 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11313 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3180 "..\pars.fsy"
                             _1,false 
                   )
# 3180 "..\pars.fsy"
                 : Ast.SynExpr * bool));
# 11324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3184 "..\pars.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e _1) 
                   )
# 3184 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11336 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3187 "..\pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
# 3187 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3192 "..\pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterMissingQualificationAfterDot(e,fixedLhsm)) 
                   )
# 3192 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11364 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3198 "..\pars.fsy"
                             (fun e lhsm dotm -> 
                                 libraryOnlyError(lhs parseState);
                                 SynExpr.LibraryOnlyUnionCaseFieldGet (e,mkSynCaseName lhsm opNameCons,(fst _5),lhsm)) 
                   )
# 3198 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11378 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3202 "..\pars.fsy"
                             (fun e lhsm dotm -> 
                                 mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs parseState); 
                                 mkSynDotParenGet lhsm dotm e _2) 
                   )
# 3202 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11392 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3206 "..\pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e _2) 
                   )
# 3206 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11403 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3209 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e _2)) 
                   )
# 3209 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11416 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3213 "..\pars.fsy"
                             let mArg = rhs2 parseState 1 3
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr1",mArg))) 
                   )
# 3213 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11427 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3216 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket())
                             let mArg = (rhs parseState 1).EndRange 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr2",mArg)))) 
                   )
# 3216 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11440 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3220 "..\pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSliceGet lhsm dotm e _2) 
                   )
# 3220 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11451 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3222 "..\pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSlice2Get lhsm dotm e _2 _4) 
                   )
# 3222 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11463 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3224 "..\pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSlice3Get lhsm dotm e _2 _4 _6) 
                   )
# 3224 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11476 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3226 "..\pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSlice4Get lhsm dotm e _2 _4 _6 _8) 
                   )
# 3226 "..\pars.fsy"
                 : 'atomicExprQualification));
# 11490 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3230 "..\pars.fsy"
                             mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 3) (Some _3) 
                   )
# 3230 "..\pars.fsy"
                 : 'optRange));
# 11502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3232 "..\pars.fsy"
                             mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 2) None 
                   )
# 3232 "..\pars.fsy"
                 : 'optRange));
# 11513 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3234 "..\pars.fsy"
                             mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 2) (Some _2) 
                   )
# 3234 "..\pars.fsy"
                 : 'optRange));
# 11524 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3236 "..\pars.fsy"
                             mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 1) None 
                   )
# 3236 "..\pars.fsy"
                 : 'optRange));
# 11534 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3242 "..\pars.fsy"
                             SynExpr.Const (_1,_1.Range (lhs parseState)) 
                   )
# 3242 "..\pars.fsy"
                 : Ast.SynExpr));
# 11545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3244 "..\pars.fsy"
                             _1 
                   )
# 3244 "..\pars.fsy"
                 : Ast.SynExpr));
# 11556 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3246 "..\pars.fsy"
                             _1 
                   )
# 3246 "..\pars.fsy"
                 : Ast.SynExpr));
# 11567 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3248 "..\pars.fsy"
                             SynExpr.Null(lhs parseState) 
                   )
# 3248 "..\pars.fsy"
                 : Ast.SynExpr));
# 11577 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3250 "..\pars.fsy"
                             SynExpr.Const(SynConst.Bool false,lhs parseState) 
                   )
# 3250 "..\pars.fsy"
                 : Ast.SynExpr));
# 11587 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3252 "..\pars.fsy"
                             SynExpr.Const(SynConst.Bool true,lhs parseState) 
                   )
# 3252 "..\pars.fsy"
                 : Ast.SynExpr));
# 11597 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3254 "..\pars.fsy"
                             _1 
                   )
# 3254 "..\pars.fsy"
                 : Ast.SynExpr));
# 11608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3256 "..\pars.fsy"
                             _1 
                   )
# 3256 "..\pars.fsy"
                 : Ast.SynExpr));
# 11619 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3258 "..\pars.fsy"
                             _1 
                   )
# 3258 "..\pars.fsy"
                 : Ast.SynExpr));
# 11630 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3262 "..\pars.fsy"
                             SynExpr.Paren(_2, rhs parseState 1, Some(rhs parseState 3), rhs2 parseState 1 3) 
                   )
# 3262 "..\pars.fsy"
                 : 'beginEndExpr));
# 11641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3264 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); exprFromParseError _2 
                   )
# 3264 "..\pars.fsy"
                 : 'beginEndExpr));
# 11653 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3266 "..\pars.fsy"
                             (* silent recovery *) arbExpr("beginEndExpr",(lhs parseState))  
                   )
# 3266 "..\pars.fsy"
                 : 'beginEndExpr));
# 11663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3268 "..\pars.fsy"
                             mkSynUnit (lhs parseState) 
                   )
# 3268 "..\pars.fsy"
                 : 'beginEndExpr));
# 11673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3272 "..\pars.fsy"
                             if _1 <> _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuote(fst _1))
                             (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, lhs parseState)) 
                   )
# 3272 "..\pars.fsy"
                 : 'quoteExpr));
# 11687 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3275 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))  
                             let mExpr = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, _2, false, mExpr))  
                   )
# 3275 "..\pars.fsy"
                 : 'quoteExpr));
# 11702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3279 "..\pars.fsy"
                             (* silent recovery *) SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, arbExpr("quoteExpr",(rhs parseState 2)), false, lhs parseState)  
                   )
# 3279 "..\pars.fsy"
                 : 'quoteExpr));
# 11714 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3281 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))
                             exprFromParseError (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, arbExpr("quoteExpr2",(rhs parseState 1).EndRange), false, rhs parseState 1))  
                   )
# 3281 "..\pars.fsy"
                 : 'quoteExpr));
# 11727 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3286 "..\pars.fsy"
                              _2 (lhs parseState) true 
                   )
# 3286 "..\pars.fsy"
                 : 'arrayExpr));
# 11738 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3288 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) true) 
                   )
# 3288 "..\pars.fsy"
                 : 'arrayExpr));
# 11751 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3291 "..\pars.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList(true,[ ], lhs parseState) 
                   )
# 3291 "..\pars.fsy"
                 : 'arrayExpr));
# 11761 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3293 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar());  
                             (* silent recovery *) 
                             exprFromParseError (SynExpr.ArrayOrList(true,[ ], rhs parseState 1)) 
                   )
# 3293 "..\pars.fsy"
                 : 'arrayExpr));
# 11774 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3299 "..\pars.fsy"
                             SynExpr.Const(SynConst.Unit,(rhs2 parseState 1 2)) 
                   )
# 3299 "..\pars.fsy"
                 : 'parenExpr));
# 11785 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3301 "..\pars.fsy"
                             let m = rhs2 parseState 1 3
                             SynExpr.Paren(_2 m, rhs parseState 1, Some(rhs parseState 3), m) 
                   )
# 3301 "..\pars.fsy"
                 : 'parenExpr));
# 11798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_other_than_rparen_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3304 "..\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 3).Start
                             SynExpr.Paren(exprFromParseError (_2 lhsm), rhs parseState 1, None, lhsm) 
                   )
# 3304 "..\pars.fsy"
                 : 'parenExpr));
# 11812 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3308 "..\pars.fsy"
                             // silent recovery
                             SynExpr.Paren(arbExpr("parenExpr1",(rhs parseState 1).EndRange),(rhs parseState 1),Some(rhs parseState 3),(rhs2 parseState 1 3)) 
                   )
# 3308 "..\pars.fsy"
                 : 'parenExpr));
# 11824 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3311 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2tcs", lhsm) 
                   )
# 3311 "..\pars.fsy"
                 : 'parenExpr));
# 11836 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3315 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2mcs", lhsm) 
                   )
# 3315 "..\pars.fsy"
                 : 'parenExpr));
# 11848 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3319 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2rbcs", lhsm) 
                   )
# 3319 "..\pars.fsy"
                 : 'parenExpr));
# 11860 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3323 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2obecs", lhsm) 
                   )
# 3323 "..\pars.fsy"
                 : 'parenExpr));
# 11872 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3327 "..\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             arbExpr("parenExpr2",(lhs parseState))  
                   )
# 3327 "..\pars.fsy"
                 : 'parenExpr));
# 11884 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypars)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3339 "..\pars.fsy"
                             (fun m -> SynExpr.TraitCall(_1,_4,_6,m)) 
                   )
# 3339 "..\pars.fsy"
                 : 'parenExprBody));
# 11898 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3341 "..\pars.fsy"
                             (fun _m -> _1) 
                   )
# 3341 "..\pars.fsy"
                 : 'parenExprBody));
# 11909 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3343 "..\pars.fsy"
                             _1 
                   )
# 3343 "..\pars.fsy"
                 : 'parenExprBody));
# 11920 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3347 "..\pars.fsy"
                             [_1] 
                   )
# 3347 "..\pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 11931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3349 "..\pars.fsy"
                             List.rev _2 
                   )
# 3349 "..\pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 11943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3353 "..\pars.fsy"
                            _3 :: _1
                   )
# 3353 "..\pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 11955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3355 "..\pars.fsy"
                             [_1] 
                   )
# 3355 "..\pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 11966 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3359 "..\pars.fsy"
                             let m,r = _2 in r (rhs2 parseState 1 3) 
                   )
# 3359 "..\pars.fsy"
                 : 'braceExpr));
# 11978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3361 "..\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            let m,r = _2 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            r (unionRanges (rhs parseState 1) m) 
                   )
# 3361 "..\pars.fsy"
                 : 'braceExpr));
# 11993 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3366 "..\pars.fsy"
                            // silent recovery 
                            arbExpr("braceExpr",rhs2 parseState 1 3)  
                   )
# 3366 "..\pars.fsy"
                 : 'braceExpr));
# 12005 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3369 "..\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            SynExpr.Record(None,None,[],rhs parseState 1) 
                   )
# 3369 "..\pars.fsy"
                 : 'braceExpr));
# 12018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3373 "..\pars.fsy"
                             let m = rhs2 parseState 1 2 
                             SynExpr.Record(None,None,[],m) 
                   )
# 3373 "..\pars.fsy"
                 : 'braceExpr));
# 12030 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3378 "..\pars.fsy"
                             (lhs parseState), (fun m -> let a,b,c = _1 in SynExpr.Record(a,b,c,m)) 
                   )
# 3378 "..\pars.fsy"
                 : 'braceExprBody));
# 12041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3380 "..\pars.fsy"
                            _1 
                   )
# 3380 "..\pars.fsy"
                 : 'braceExprBody));
# 12052 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3382 "..\pars.fsy"
                            let m,r = _1 in (m, r false) 
                   )
# 3382 "..\pars.fsy"
                 : 'braceExprBody));
# 12063 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3386 "..\pars.fsy"
                            let m,r = _1 in (fun lhsm isArray -> SynExpr.ArrayOrListOfSeqExpr(isArray, r true m, lhsm)) 
                   )
# 3386 "..\pars.fsy"
                 : 'listExprElements));
# 12074 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3388 "..\pars.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrList(isArray,[ ], lhsm)) 
                   )
# 3388 "..\pars.fsy"
                 : 'listExprElements));
# 12084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3392 "..\pars.fsy"
                            _1.Range, (fun isArrayOrList lhsm -> SynExpr.CompExpr(isArrayOrList,ref(isArrayOrList),_1,lhsm)) 
                   )
# 3392 "..\pars.fsy"
                 : 'monadicExprInitial));
# 12095 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3394 "..\pars.fsy"
                            _1 
                   )
# 3394 "..\pars.fsy"
                 : 'monadicExprInitial));
# 12106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3398 "..\pars.fsy"
                            let opm = (rhs parseState 2)
                            (unionRanges _1.Range _3.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." _3) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 3398 "..\pars.fsy"
                 : 'rangeSequenceExpr));
# 12124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3406 "..\pars.fsy"
                            (unionRanges _1.Range _5.Range),(fun _isArray wholem -> mkSynTrifix wholem ".. .." _1 _3 _5) 
                   )
# 3406 "..\pars.fsy"
                 : 'rangeSequenceExpr));
# 12137 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3409 "..\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                            let opm = (rhs parseState 2)
                            let e = arbExpr("rangeSeqError1", (rhs parseState 3).StartRange)
                            (unionRanges _1.Range e.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." e) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 3409 "..\pars.fsy"
                 : 'rangeSequenceExpr));
# 12157 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3425 "..\pars.fsy"
                            SynExpr.YieldOrReturn((true,false), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3425 "..\pars.fsy"
                 : 'monadicSingleLineQualifiersThenArrowThenExprR));
# 12168 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3430 "..\pars.fsy"
                            (_1, _3, true) 
                   )
# 3430 "..\pars.fsy"
                 : 'forLoopBinder));
# 12180 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3432 "..\pars.fsy"
                            let m,r = _3 in (_1, r false m, true) 
                   )
# 3432 "..\pars.fsy"
                 : 'forLoopBinder));
# 12192 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3434 "..\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder",(rhs parseState 2)), false) 
                   )
# 3434 "..\pars.fsy"
                 : 'forLoopBinder));
# 12205 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3437 "..\pars.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2",(rhs parseState 1).EndRange), false) 
                   )
# 3437 "..\pars.fsy"
                 : 'forLoopBinder));
# 12218 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3442 "..\pars.fsy"
                             idOfPat (rhs parseState 1) _1,_3,_4,_5 
                   )
# 3442 "..\pars.fsy"
                 : 'forLoopRange));
# 12232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyTypeArg)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyReturnTypes)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HASH)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3446 "..\pars.fsy"
                             libraryOnlyWarning (lhs parseState);
                             let s,sm = _2,rhs parseState 2
                             (fun m -> SynExpr.LibraryOnlyILAssembly (ParseAssemblyCodeInstructions s sm,_3,List.rev _4,_5,m)) 
                   )
# 3446 "..\pars.fsy"
                 : 'inlineAssemblyExpr));
# 12249 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3451 "..\pars.fsy"
                                                                        _2 :: _1 
                   )
# 3451 "..\pars.fsy"
                 : 'opt_curriedArgExprs));
# 12261 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3452 "..\pars.fsy"
                            [] 
                   )
# 3452 "..\pars.fsy"
                 : 'opt_curriedArgExprs));
# 12271 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3455 "..\pars.fsy"
                            None 
                   )
# 3455 "..\pars.fsy"
                 : 'opt_atomicExprAfterType));
# 12281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3456 "..\pars.fsy"
                                                Some(_1) 
                   )
# 3456 "..\pars.fsy"
                 : 'opt_atomicExprAfterType));
# 12292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3459 "..\pars.fsy"
                            [] 
                   )
# 3459 "..\pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 12302 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3460 "..\pars.fsy"
                                                            [_3] 
                   )
# 3460 "..\pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 12315 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3464 "..\pars.fsy"
                            [] 
                   )
# 3464 "..\pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3466 "..\pars.fsy"
                            [_2] 
                   )
# 3466 "..\pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12336 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3468 "..\pars.fsy"
                             [] 
                   )
# 3468 "..\pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12347 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3472 "..\pars.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs parseState) | Some e -> e 
                            let l = List.rev _5
                            let dummyField = mkRecdField (LongIdentWithDots([], [])) // dummy identifier, it will be discarded
                            let l = rebindRanges (dummyField, None) l _6 
                            let (_, _, inheritsSep) = List.head l
                            let bindings = List.tail l
                            (Some (_2,arg,rhs2 parseState 2 4, inheritsSep, rhs parseState 1), None, bindings) 
                   )
# 3472 "..\pars.fsy"
                 : 'recdExpr));
# 12368 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3481 "..\pars.fsy"
                            match _1 with 
                            | LongOrSingleIdent(false, (LongIdentWithDots(_,_) as f),None,m) ->  
                                 let f = mkRecdField f
                                 let l = List.rev _4
                                 let l = rebindRanges (f, Some _3) l _5
                                 (None, None, l)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
# 3481 "..\pars.fsy"
                 : 'recdExpr));
# 12388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3494 "..\pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           reportParseErrorAt m (FSComp.SR.parsFieldBinding())
                           let f = mkUnderscoreRecdField m
                           (None, None, [ f, None, None  ]) 
                   )
# 3494 "..\pars.fsy"
                 : 'recdExpr));
# 12402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3501 "..\pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())      
                           let f = mkUnderscoreRecdField m
                           reportParseErrorAt (rhs2 parseState 1 2) (FSComp.SR.parsFieldBinding())
                           
                           (None, None, [f, None, None]) 
                   )
# 3501 "..\pars.fsy"
                 : 'recdExpr));
# 12417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3510 "..\pars.fsy"
                           reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnderscoreInvalidFieldName())
                           let f = mkUnderscoreRecdField (rhs parseState 1)
                           let l = List.rev _4
                           let l = rebindRanges (f, Some _3) l _5
                           (None, None, l) 
                   )
# 3510 "..\pars.fsy"
                 : 'recdExpr));
# 12434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3520 "..\pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 3520 "..\pars.fsy"
                 : 'recdExpr));
# 12450 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3525 "..\pars.fsy"
                            (None,Some (_1, (rhs parseState 2, None)), []) 
                   )
# 3525 "..\pars.fsy"
                 : 'recdExpr));
# 12462 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3528 "..\pars.fsy"
                            
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 3528 "..\pars.fsy"
                 : 'recdExpr));
# 12479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3534 "..\pars.fsy"
                                     Some _1 
                   )
# 3534 "..\pars.fsy"
                 : 'opt_seps_recd));
# 12490 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3535 "..\pars.fsy"
                           None 
                   )
# 3535 "..\pars.fsy"
                 : 'opt_seps_recd));
# 12500 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3538 "..\pars.fsy"
                                     (rhs parseState 1), None 
                   )
# 3538 "..\pars.fsy"
                 : 'seps_recd));
# 12510 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3539 "..\pars.fsy"
                                      let m = (rhs parseState 1) in (m, Some m.End) 
                   )
# 3539 "..\pars.fsy"
                 : 'seps_recd));
# 12520 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3540 "..\pars.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 1).End 
                   )
# 3540 "..\pars.fsy"
                 : 'seps_recd));
# 12530 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3541 "..\pars.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 2).End 
                   )
# 3541 "..\pars.fsy"
                 : 'seps_recd));
# 12540 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3547 "..\pars.fsy"
                                mkRecdField _1 
                   )
# 3547 "..\pars.fsy"
                 : 'pathOrUnderscore));
# 12551 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3549 "..\pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           mkUnderscoreRecdField m 
                   )
# 3549 "..\pars.fsy"
                 : 'pathOrUnderscore));
# 12563 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3555 "..\pars.fsy"
                            (_3, Some _2) :: _1 
                   )
# 3555 "..\pars.fsy"
                 : 'recdExprBindings));
# 12576 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3556 "..\pars.fsy"
                            [] 
                   )
# 3556 "..\pars.fsy"
                 : 'recdExprBindings));
# 12586 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3560 "..\pars.fsy"
                             (_1, Some _3) 
                   )
# 3560 "..\pars.fsy"
                 : 'recdBinding));
# 12598 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3562 "..\pars.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 3562 "..\pars.fsy"
                 : 'recdBinding));
# 12612 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3567 "..\pars.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 3567 "..\pars.fsy"
                 : 'recdBinding));
# 12627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3572 "..\pars.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 3572 "..\pars.fsy"
                 : 'recdBinding));
# 12641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3577 "..\pars.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 3577 "..\pars.fsy"
                 : 'recdBinding));
# 12656 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3590 "..\pars.fsy"
                            let mNewExpr = rhs parseState 1
                            let fullRange = match _4 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 4)
                            fullRange, (fun m -> let (a,b) = _1 in SynExpr.ObjExpr(a,b,_2,_4, mNewExpr, m)) 
                   )
# 3590 "..\pars.fsy"
                 : 'objExpr));
# 12672 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3594 "..\pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            let fullRange = match _3 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 3)
                            fullRange, (fun m -> let (a,b) = _1 in SynExpr.ObjExpr(a,b,[],_3, mNewExpr, m)) 
                   )
# 3594 "..\pars.fsy"
                 : 'objExpr));
# 12687 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3598 "..\pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            (rhs2 parseState 1 2), (fun m -> let (a,b) = _2,None in SynExpr.ObjExpr(a,b,[],[], mNewExpr, m)) 
                   )
# 3598 "..\pars.fsy"
                 : 'objExpr));
# 12699 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3604 "..\pars.fsy"
                            (_2, Some(_4,Some(_5))) 
                   )
# 3604 "..\pars.fsy"
                 : 'objExprBaseCall));
# 12713 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3606 "..\pars.fsy"
                            (_2, Some(_4,None)) 
                   )
# 3606 "..\pars.fsy"
                 : 'objExprBaseCall));
# 12726 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3608 "..\pars.fsy"
                            _2,None 
                   )
# 3608 "..\pars.fsy"
                 : 'objExprBaseCall));
# 12737 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3613 "..\pars.fsy"
                                           _1 
                   )
# 3613 "..\pars.fsy"
                 : 'opt_objExprBindings));
# 12748 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3614 "..\pars.fsy"
                                           [] 
                   )
# 3614 "..\pars.fsy"
                 : 'opt_objExprBindings));
# 12758 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3618 "..\pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
# 3618 "..\pars.fsy"
                 : 'objExprBindings));
# 12771 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3622 "..\pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
# 3622 "..\pars.fsy"
                 : 'objExprBindings));
# 12784 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3626 "..\pars.fsy"
                             _2 |> 
                             (List.choose (function 
                                               | SynMemberDefn.Member(b,m) -> Some b
                                               | SynMemberDefn.AutoProperty(_,_,_,_,_,_,_,_,_,_,m) -> errorR(Error(FSComp.SR.parsIllegalMemberVarInObjectImplementation(),m)); None
                                               | x -> errorR(Error(FSComp.SR.parsMemberIllegalInObjectImplementation(),x.Range)); None)) 
                   )
# 3626 "..\pars.fsy"
                 : 'objExprBindings));
# 12800 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3633 "..\pars.fsy"
                                                                  _1 :: _2 
                   )
# 3633 "..\pars.fsy"
                 : 'objExprInterfaces));
# 12812 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3637 "..\pars.fsy"
                            [] 
                   )
# 3637 "..\pars.fsy"
                 : 'opt_objExprInterfaces));
# 12822 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3639 "..\pars.fsy"
                            _1 :: _2 
                   )
# 3639 "..\pars.fsy"
                 : 'opt_objExprInterfaces));
# 12834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3641 "..\pars.fsy"
                            (* silent recovery *) _2 
                   )
# 3641 "..\pars.fsy"
                 : 'opt_objExprInterfaces));
# 12845 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3645 "..\pars.fsy"
                           InterfaceImpl(_2, _3, lhs parseState) 
                   )
# 3645 "..\pars.fsy"
                 : 'objExprInterface));
# 12860 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3648 "..\pars.fsy"
                                  true 
                   )
# 3648 "..\pars.fsy"
                 : 'forLoopDirection));
# 12870 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3649 "..\pars.fsy"
                                  false 
                   )
# 3649 "..\pars.fsy"
                 : 'forLoopDirection));
# 12880 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3653 "..\pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas (parseState.GetSynArgNameGenerator()) false mAll _2 _4 
                   )
# 3653 "..\pars.fsy"
                 : 'anonLambdaExpr));
# 12893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3656 "..\pars.fsy"
                            let mAll = rhs2 parseState 1 3
                            mkSynFunMatchLambdas (parseState.GetSynArgNameGenerator()) false mAll _2 (arbExpr("anonLambdaExpr1",(rhs parseState 4))) 
                   )
# 3656 "..\pars.fsy"
                 : 'anonLambdaExpr));
# 12905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3659 "..\pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas (parseState.GetSynArgNameGenerator()) false mAll _2 _4 
                   )
# 3659 "..\pars.fsy"
                 : 'anonLambdaExpr));
# 12918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3662 "..\pars.fsy"
                            if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody());
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            exprFromParseError (mkSynFunMatchLambdas (parseState.GetSynArgNameGenerator()) false mAll _2 _4) 
                   )
# 3662 "..\pars.fsy"
                 : 'anonLambdaExpr));
# 12933 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3666 "..\pars.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody())
                            mkSynFunMatchLambdas (parseState.GetSynArgNameGenerator()) false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr2",(rhs parseState 4))) 
                   )
# 3666 "..\pars.fsy"
                 : 'anonLambdaExpr));
# 12945 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3670 "..\pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody())
                            exprFromParseError (mkSynFunMatchLambdas (parseState.GetSynArgNameGenerator()) false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr3",(rhs parseState 4)))) 
                   )
# 3670 "..\pars.fsy"
                 : 'anonLambdaExpr));
# 12958 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3673 "..\pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas (parseState.GetSynArgNameGenerator()) false (rhs2 parseState 1 2) _2 (arbExpr("anonLambdaExpr4",(rhs parseState 3)))) 
                   )
# 3673 "..\pars.fsy"
                 : 'anonLambdaExpr));
# 12969 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3675 "..\pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas (parseState.GetSynArgNameGenerator()) false (rhs parseState 1) [] (arbExpr("anonLambdaExpr5",(rhs parseState 2)))) 
                   )
# 3675 "..\pars.fsy"
                 : 'anonLambdaExpr));
# 12979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3679 "..\pars.fsy"
                             let clauses,mLast = _2
                             let mAll = unionRanges (rhs parseState 1) mLast
                             SynExpr.MatchLambda(false,(rhs parseState 1),clauses,NoSequencePointAtInvisibleBinding,mAll) 
                   )
# 3679 "..\pars.fsy"
                 : 'anonMatchingExpr));
# 12992 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3683 "..\pars.fsy"
                             let clauses,mLast = _2
                             let mAll = unionRanges (rhs parseState 1) mLast
                             SynExpr.MatchLambda(false,(rhs parseState 1),clauses,NoSequencePointAtInvisibleBinding,mAll) 
                   )
# 3683 "..\pars.fsy"
                 : 'anonMatchingExpr));
# 13005 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3691 "..\pars.fsy"
                                                          _1 
                   )
# 3691 "..\pars.fsy"
                 : 'typeWithTypeConstraints));
# 13016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3693 "..\pars.fsy"
                            SynType.WithGlobalConstraints(_1, List.rev _3,lhs parseState) 
                   )
# 3693 "..\pars.fsy"
                 : 'typeWithTypeConstraints));
# 13028 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3697 "..\pars.fsy"
                            _1 
                   )
# 3697 "..\pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 13039 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3699 "..\pars.fsy"
                            let ty,arity = _1 
                            // nb. it doesn't matter where the constraints go in the structure of the type. 
                            SynType.WithGlobalConstraints(ty,List.rev _3,lhs parseState), arity 
                   )
# 3699 "..\pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 13053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3705 "..\pars.fsy"
                            None 
                   )
# 3705 "..\pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 13063 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3707 "..\pars.fsy"
                            let ty,arity = _2 
                            let arity = (match arity with SynValInfo([],rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty,arity),rhs parseState 2)) 
                   )
# 3707 "..\pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 13076 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3713 "..\pars.fsy"
                            let dty,dmdata= _1 
                            let rty,(SynValInfo(dmdatas,rmdata)) = _3 
                            SynType.Fun(dty,rty,lhs parseState), (SynValInfo(dmdata::dmdatas, rmdata)) 
                   )
# 3713 "..\pars.fsy"
                 : 'topType));
# 13090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3717 "..\pars.fsy"
                            let ty,rmdata = _1 in ty, (SynValInfo([],(match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
# 3717 "..\pars.fsy"
                 : 'topType));
# 13101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3721 "..\pars.fsy"
                            let ty,mdata = _1 in let tys,mdatas = List.unzip _3 in (SynType.Tuple(List.map (fun ty -> (false,ty)) (ty ::tys), lhs parseState)),(mdata :: mdatas) 
                   )
# 3721 "..\pars.fsy"
                 : 'topTupleType));
# 13113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3723 "..\pars.fsy"
                            let ty,mdata = _1 in ty,[mdata] 
                   )
# 3723 "..\pars.fsy"
                 : 'topTupleType));
# 13124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3726 "..\pars.fsy"
                                                                      _1 :: _3 
                   )
# 3726 "..\pars.fsy"
                 : 'topTupleTypeElements));
# 13136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3727 "..\pars.fsy"
                                                                      [_1] 
                   )
# 3727 "..\pars.fsy"
                 : 'topTupleTypeElements));
# 13147 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3732 "..\pars.fsy"
                            match _2 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _4,SynArgInfo(_1,false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 3732 "..\pars.fsy"
                 : 'topAppType));
# 13162 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3736 "..\pars.fsy"
                            _5,SynArgInfo(_1,true,Some _3) 
                   )
# 3736 "..\pars.fsy"
                 : 'topAppType));
# 13175 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3738 "..\pars.fsy"
                            (_2,SynArgInfo(_1,false,None)) 
                   )
# 3738 "..\pars.fsy"
                 : 'topAppType));
# 13187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3740 "..\pars.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _3,SynArgInfo([],false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 3740 "..\pars.fsy"
                 : 'topAppType));
# 13201 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3744 "..\pars.fsy"
                            _4,SynArgInfo([],true,Some _2) 
                   )
# 3744 "..\pars.fsy"
                 : 'topAppType));
# 13213 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3746 "..\pars.fsy"
                            _1,SynArgInfo([],false,None) 
                   )
# 3746 "..\pars.fsy"
                 : 'topAppType));
# 13224 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3751 "..\pars.fsy"
                                                 SynType.Fun(_1,_3,lhs parseState) 
                   )
# 3751 "..\pars.fsy"
                 : Ast.SynType));
# 13236 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3752 "..\pars.fsy"
                                                           _1 
                   )
# 3752 "..\pars.fsy"
                 : Ast.SynType));
# 13247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3756 "..\pars.fsy"
                                                                SynType.Tuple((false,_1) :: _3,lhs parseState) 
                   )
# 3756 "..\pars.fsy"
                 : 'tupleType));
# 13259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3759 "..\pars.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple((true, SynType.StaticConstant (SynConst.Int32 1, lhs parseState)):: _2, lhs parseState) 
                   )
# 3759 "..\pars.fsy"
                 : 'tupleType));
# 13272 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3763 "..\pars.fsy"
                             if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                             SynType.Tuple((true,_1) :: _3, lhs parseState) 
                   )
# 3763 "..\pars.fsy"
                 : 'tupleType));
# 13286 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3765 "..\pars.fsy"
                                                            _1 
                   )
# 3765 "..\pars.fsy"
                 : 'tupleType));
# 13297 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3768 "..\pars.fsy"
                                                                             (false,_1) :: _3 
                   )
# 3768 "..\pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13309 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3770 "..\pars.fsy"
                             if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                             (true,_1) :: _3 
                   )
# 3770 "..\pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3772 "..\pars.fsy"
                                                                [(false,_1)] 
                   )
# 3772 "..\pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13334 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3775 "..\pars.fsy"
                                                                       _1 :: _3 
                   )
# 3775 "..\pars.fsy"
                 : 'tupleTypeElements));
# 13346 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3776 "..\pars.fsy"
                                                                [_1] 
                   )
# 3776 "..\pars.fsy"
                 : 'tupleTypeElements));
# 13357 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3780 "..\pars.fsy"
                             SynType.LongIdent(_1) 
                   )
# 3780 "..\pars.fsy"
                 : 'appTypeCon));
# 13368 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3783 "..\pars.fsy"
                            SynType.Var(_1, lhs parseState) 
                   )
# 3783 "..\pars.fsy"
                 : 'appTypeCon));
# 13379 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3787 "..\pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, -(fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState)  
                   )
# 3787 "..\pars.fsy"
                 : 'appTypeConPower));
# 13394 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3791 "..\pars.fsy"
                           _1 
                   )
# 3791 "..\pars.fsy"
                 : 'appTypeConPower));
# 13405 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3795 "..\pars.fsy"
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 3795 "..\pars.fsy"
                 : 'appType));
# 13417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3797 "..\pars.fsy"
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 3797 "..\pars.fsy"
                 : 'appType));
# 13429 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3799 "..\pars.fsy"
                             SynType.App(_2, None, [_1], [], None, true, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3799 "..\pars.fsy"
                 : 'appType));
# 13441 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3801 "..\pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3801 "..\pars.fsy"
                 : 'appType));
# 13456 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3805 "..\pars.fsy"
                             _1 
                   )
# 3805 "..\pars.fsy"
                 : 'appType));
# 13467 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3807 "..\pars.fsy"
                              let tp,typ = _1,_3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp,typ,m)],m)  
                   )
# 3807 "..\pars.fsy"
                 : 'appType));
# 13481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3811 "..\pars.fsy"
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
# 3811 "..\pars.fsy"
                 : 'appType));
# 13492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3815 "..\pars.fsy"
                             1 
                   )
# 3815 "..\pars.fsy"
                 : 'arrayTypeSuffix));
# 13502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3817 "..\pars.fsy"
                             2 
                   )
# 3817 "..\pars.fsy"
                 : 'arrayTypeSuffix));
# 13512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3819 "..\pars.fsy"
                             3 
                   )
# 3819 "..\pars.fsy"
                 : 'arrayTypeSuffix));
# 13522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3821 "..\pars.fsy"
                             4 
                   )
# 3821 "..\pars.fsy"
                 : 'arrayTypeSuffix));
# 13532 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3825 "..\pars.fsy"
                             let typeArgs, commas = _4 in _1 :: _3 :: List.rev typeArgs, (rhs parseState 2)::(List.rev commas) 
                   )
# 3825 "..\pars.fsy"
                 : 'appTypePrefixArguments));
# 13545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3829 "..\pars.fsy"
                             let typeArgs, commas = _1
                             _3 :: typeArgs, (rhs parseState 2)::commas 
                   )
# 3829 "..\pars.fsy"
                 : 'typeArgListElements));
# 13558 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3832 "..\pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let typeArgs, commas = _1
                            _3 :: typeArgs, (rhs parseState 2)::commas 
                   )
# 3832 "..\pars.fsy"
                 : 'typeArgListElements));
# 13572 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3836 "..\pars.fsy"
                             [], [] 
                   )
# 3836 "..\pars.fsy"
                 : 'typeArgListElements));
# 13582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3840 "..\pars.fsy"
                           _1 
                   )
# 3840 "..\pars.fsy"
                 : 'powerType));
# 13593 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3842 "..\pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState) 
                   )
# 3842 "..\pars.fsy"
                 : 'powerType));
# 13608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3846 "..\pars.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            SynType.MeasurePower(_1, - (fst _4), lhs parseState) 
                   )
# 3846 "..\pars.fsy"
                 : 'powerType));
# 13622 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3852 "..\pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 3852 "..\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13635 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3855 "..\pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 3855 "..\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13648 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3858 "..\pars.fsy"
                             let mWhole = unionRanges (rhs parseState 1) _2.Range  // note: use "rhs parseState 1" to deal with parens in "(int) list"
                             deprecatedWithError (FSComp.SR.parsNonAtomicType()) mWhole;
                             SynType.App(_2, None, [_1], [], None, true, mWhole) 
                   )
# 3858 "..\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13662 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3862 "..\pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3862 "..\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13677 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3866 "..\pars.fsy"
                             _1 
                   )
# 3866 "..\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3868 "..\pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              let tp,typ = _1,_3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp,typ,m)],m)  
                   )
# 3868 "..\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3873 "..\pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
# 3873 "..\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3879 "..\pars.fsy"
                           _1 
                   )
# 3879 "..\pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 13726 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3881 "..\pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState) 
                   )
# 3881 "..\pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 13742 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3886 "..\pars.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            SynType.MeasurePower(_1, - (fst _4), lhs parseState) 
                   )
# 3886 "..\pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 13757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3895 "..\pars.fsy"
                            SynType.HashConstraint(_2, lhs parseState) 
                   )
# 3895 "..\pars.fsy"
                 : 'atomType));
# 13768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3897 "..\pars.fsy"
                            _1 
                   )
# 3897 "..\pars.fsy"
                 : 'atomType));
# 13779 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3899 "..\pars.fsy"
                            SynType.Anon (lhs parseState) 
                   )
# 3899 "..\pars.fsy"
                 : 'atomType));
# 13789 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3901 "..\pars.fsy"
                             _2 
                   )
# 3901 "..\pars.fsy"
                 : 'atomType));
# 13801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3903 "..\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                            _2 
                   )
# 3903 "..\pars.fsy"
                 : 'atomType));
# 13814 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3906 "..\pars.fsy"
                            SynType.StaticConstant(_1, rhs parseState 1) 
                   )
# 3906 "..\pars.fsy"
                 : 'atomType));
# 13825 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3908 "..\pars.fsy"
                            let m = rhs parseState 1
                            SynType.StaticConstant(SynConst.String (null, m), m) 
                   )
# 3908 "..\pars.fsy"
                 : 'atomType));
# 13836 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3911 "..\pars.fsy"
                             let e,_ = _2
                             SynType.StaticConstantExpr(e, e.Range)
                          
                   )
# 3911 "..\pars.fsy"
                 : 'atomType));
# 13849 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3915 "..\pars.fsy"
                             SynType.StaticConstant(SynConst.Bool false,lhs parseState) 
                   )
# 3915 "..\pars.fsy"
                 : 'atomType));
# 13859 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3917 "..\pars.fsy"
                             SynType.StaticConstant(SynConst.Bool true,lhs parseState) 
                   )
# 3917 "..\pars.fsy"
                 : 'atomType));
# 13869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3919 "..\pars.fsy"
                            (* silent recovery *) SynType.Anon (lhs parseState) 
                   )
# 3919 "..\pars.fsy"
                 : 'atomType));
# 13880 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3921 "..\pars.fsy"
                            let mLessThan,mGreaterThan,args,commas,mWhole = _2 in SynType.App(_1, Some(mLessThan), args, commas, mGreaterThan, false, unionRanges _1.Range mWhole) 
                   )
# 3921 "..\pars.fsy"
                 : 'atomType));
# 13892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3923 "..\pars.fsy"
                            SynType.LongIdentApp(_1, _3, None, [], [], None, unionRanges (rhs parseState 1) _3.Range) 
                   )
# 3923 "..\pars.fsy"
                 : 'atomType));
# 13904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3925 "..\pars.fsy"
                            let mLessThan,mGreaterThan,args,commas,mWhole = _4 
                            SynType.LongIdentApp(_1, _3, Some(mLessThan), args, commas, mGreaterThan, unionRanges _1.Range mWhole) 
                   )
# 3925 "..\pars.fsy"
                 : 'atomType));
# 13918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3928 "..\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            _1 
                   )
# 3928 "..\pars.fsy"
                 : 'atomType));
# 13931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3934 "..\pars.fsy"
                            let mLessThan, mGreaterThan, parsedOk, args, commas, mAll = _1
                            if parsedOk then // if someone has "foo<bar" without a closing greater-than, then the lexfilter does not introduce a HPA, even though it is adjacent
                                warning(Error(FSComp.SR.parsNonAdjacentTyargs(),rhs parseState 1))
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 3934 "..\pars.fsy"
                 : range * range option * Ast.SynType list * range list * range));
# 13945 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3939 "..\pars.fsy"
                            let mLessThan, mGreaterThan, _, args, commas, mAll = _2
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 3939 "..\pars.fsy"
                 : range * range option * Ast.SynType list * range list * range));
# 13957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3944 "..\pars.fsy"
                            let typeArgs, commas = _5
                            (rhs parseState 1), Some(rhs parseState 6), true, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), lhs parseState 
                   )
# 3944 "..\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 13973 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3947 "..\pars.fsy"
                            if not _6 then 
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingGreaterThan())
                            let typeArgs, commas = _5
                            let nextToken = rhs parseState 6
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 3947 "..\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 13995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3957 "..\pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 4
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [rhs parseState 3], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 3957 "..\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14011 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3963 "..\pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 3), true, [_2], [], lhs parseState 
                   )
# 3963 "..\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3965 "..\pars.fsy"
                            if not _3 then 
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsMissingGreaterThan())
                            (rhs parseState 1), None, false, [_2], [], (rhs2 parseState 1 2) 
                   )
# 3965 "..\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3972 "..\pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 2), true, [], [], lhs parseState 
                   )
# 3972 "..\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3974 "..\pars.fsy"
                            if not _2 then  
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsExpectedTypeAfterToken())
                            else
                                reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 2
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 3974 "..\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14071 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3984 "..\pars.fsy"
                            _1 
                   )
# 3984 "..\pars.fsy"
                 : 'typeArgActual));
# 14082 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3986 "..\pars.fsy"
                            SynType.StaticConstantNamed(_1, _3, unionRanges _1.Range _3.Range) 
                   )
# 3986 "..\pars.fsy"
                 : 'typeArgActual));
# 14094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3988 "..\pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let dummy = SynType.StaticConstant(SynConst.Int32(0), rhs parseState 2)
                            SynType.StaticConstantNamed(_1, dummy, (rhs2 parseState 1 2))
                          
                   )
# 3988 "..\pars.fsy"
                 : 'typeArgActual));
# 14108 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3995 "..\pars.fsy"
                            _1 
                   )
# 3995 "..\pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 14119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3997 "..\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingTypeArgs())
                            _1 
                   )
# 3997 "..\pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 14131 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4002 "..\pars.fsy"
                            
                            let m = rhs parseState 1
                            let dummyStatVal = SynType.StaticConstant(SynConst.Int32(0), m)
                            let dummyName = SynType.LongIdent(LongIdentWithDots([ident("",m)],[]))
                            let dummyTypeArg = SynType.StaticConstantNamed(dummyName, dummyStatVal, m)
                            dummyTypeArg 
                   )
# 4002 "..\pars.fsy"
                 : 'dummyTypeArg));
# 14146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4012 "..\pars.fsy"
                            _2 
                   )
# 4012 "..\pars.fsy"
                 : 'measureTypeArg));
# 14159 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4014 "..\pars.fsy"
                            SynMeasure.Anon (lhs parseState) 
                   )
# 4014 "..\pars.fsy"
                 : 'measureTypeArg));
# 14171 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4018 "..\pars.fsy"
                            SynMeasure.Named(_1.Lid, _1.Range) 
                   )
# 4018 "..\pars.fsy"
                 : 'measureTypeAtom));
# 14182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4021 "..\pars.fsy"
                            SynMeasure.Var(_1, lhs parseState) 
                   )
# 4021 "..\pars.fsy"
                 : 'measureTypeAtom));
# 14193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4024 "..\pars.fsy"
                            _2 
                   )
# 4024 "..\pars.fsy"
                 : 'measureTypeAtom));
# 14205 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4028 "..\pars.fsy"
                             _1 
                   )
# 4028 "..\pars.fsy"
                 : 'measureTypePower));
# 14216 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4031 "..\pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, - (fst _3), lhs parseState)
                            else SynMeasure.Power(_1, fst _3, lhs parseState) 
                   )
# 4031 "..\pars.fsy"
                 : 'measureTypePower));
# 14231 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4036 "..\pars.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Power(_1, - (fst _4), lhs parseState) 
                   )
# 4036 "..\pars.fsy"
                 : 'measureTypePower));
# 14245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4040 "..\pars.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
# 4040 "..\pars.fsy"
                 : 'measureTypePower));
# 14257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4045 "..\pars.fsy"
                           [_1] 
                   )
# 4045 "..\pars.fsy"
                 : 'measureTypeSeq));
# 14268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4047 "..\pars.fsy"
                           _1 :: _2 
                   )
# 4047 "..\pars.fsy"
                 : 'measureTypeSeq));
# 14280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4051 "..\pars.fsy"
                           SynMeasure.Seq(_1, lhs parseState) 
                   )
# 4051 "..\pars.fsy"
                 : 'measureTypeExpr));
# 14291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4053 "..\pars.fsy"
                           SynMeasure.Product(_1, _3, lhs parseState) 
                   )
# 4053 "..\pars.fsy"
                 : 'measureTypeExpr));
# 14303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4055 "..\pars.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs parseState)
                           else SynMeasure.Divide(_1, _3, lhs parseState) 
                   )
# 4055 "..\pars.fsy"
                 : 'measureTypeExpr));
# 14318 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4059 "..\pars.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs parseState) 
                   )
# 4059 "..\pars.fsy"
                 : 'measureTypeExpr));
# 14331 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4064 "..\pars.fsy"
                             let id = mkSynId (lhs parseState) (_2).idText
                             Typar(id ,NoStaticReq,false) 
                   )
# 4064 "..\pars.fsy"
                 : Ast.SynTypar));
# 14343 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4067 "..\pars.fsy"
                            _1 
                   )
# 4067 "..\pars.fsy"
                 : Ast.SynTypar));
# 14354 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4071 "..\pars.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            Typar(_2,HeadTypeStaticReq,false) 
                   )
# 4071 "..\pars.fsy"
                 : 'staticallyKnownHeadTypar));
# 14367 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4078 "..\pars.fsy"
                            ident(_1,rhs parseState 1) 
                   )
# 4078 "..\pars.fsy"
                 : Ast.Ident));
# 14378 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4082 "..\pars.fsy"
                             LongIdentWithDots([ident(MangledGlobalName,rhs parseState 1)],[]) 
                   )
# 4082 "..\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4084 "..\pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4084 "..\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14399 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4086 "..\pars.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid @ [_3], dotms @ [rhs parseState 2]) 
                   )
# 4086 "..\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14411 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4088 "..\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid, dotms @ [rhs parseState 2])  
                   )
# 4088 "..\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4093 "..\pars.fsy"
                             ident(CompileOpName _2,rhs parseState 2) 
                   )
# 4093 "..\pars.fsy"
                 : 'opName));
# 14436 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4095 "..\pars.fsy"
                             reportParseErrorAt (lhs parseState) (FSComp.SR.parsErrorParsingAsOperatorName()); ident(CompileOpName "****",rhs parseState 2) 
                   )
# 4095 "..\pars.fsy"
                 : 'opName));
# 14447 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4097 "..\pars.fsy"
                             ident(CompileOpName "*",rhs parseState 1) 
                   )
# 4097 "..\pars.fsy"
                 : 'opName));
# 14457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4101 "..\pars.fsy"
                            let text = ("|"^String.concat "|" (List.rev _2) ^ "|")
                            ident(text,rhs2 parseState 2 3) 
                   )
# 4101 "..\pars.fsy"
                 : 'opName));
# 14470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4105 "..\pars.fsy"
                            let text = ("|"^String.concat "|" (List.rev _2) ^ "|_|" )
                            ident(text,rhs2 parseState 2 5) 
                   )
# 4105 "..\pars.fsy"
                 : 'opName));
# 14483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4110 "..\pars.fsy"
                             if not (IsValidPrefixOperatorDefinitionName _1) then 
                                 reportParseErrorAt (lhs parseState) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                             _1 
                   )
# 4110 "..\pars.fsy"
                 : 'operatorName));
# 14496 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4113 "..\pars.fsy"
                                               _1 
                   )
# 4113 "..\pars.fsy"
                 : 'operatorName));
# 14507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4114 "..\pars.fsy"
                                            _1 
                   )
# 4114 "..\pars.fsy"
                 : 'operatorName));
# 14518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4115 "..\pars.fsy"
                                            _1 
                   )
# 4115 "..\pars.fsy"
                 : 'operatorName));
# 14529 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4116 "..\pars.fsy"
                                         _1 
                   )
# 4116 "..\pars.fsy"
                 : 'operatorName));
# 14540 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4117 "..\pars.fsy"
                                        _1 
                   )
# 4117 "..\pars.fsy"
                 : 'operatorName));
# 14551 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4118 "..\pars.fsy"
                                          _1 
                   )
# 4118 "..\pars.fsy"
                 : 'operatorName));
# 14562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4119 "..\pars.fsy"
                                                 _1 
                   )
# 4119 "..\pars.fsy"
                 : 'operatorName));
# 14573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4120 "..\pars.fsy"
                                  "$" 
                   )
# 4120 "..\pars.fsy"
                 : 'operatorName));
# 14583 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4121 "..\pars.fsy"
                                              _1 
                   )
# 4121 "..\pars.fsy"
                 : 'operatorName));
# 14594 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4122 "..\pars.fsy"
                                 "-" 
                   )
# 4122 "..\pars.fsy"
                 : 'operatorName));
# 14604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4123 "..\pars.fsy"
                                "*" 
                   )
# 4123 "..\pars.fsy"
                 : 'operatorName));
# 14614 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4124 "..\pars.fsy"
                                  "=" 
                   )
# 4124 "..\pars.fsy"
                 : 'operatorName));
# 14624 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4125 "..\pars.fsy"
                              "or" 
                   )
# 4125 "..\pars.fsy"
                 : 'operatorName));
# 14634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4126 "..\pars.fsy"
                                "<" 
                   )
# 4126 "..\pars.fsy"
                 : 'operatorName));
# 14645 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4127 "..\pars.fsy"
                                   ">" 
                   )
# 4127 "..\pars.fsy"
                 : 'operatorName));
# 14656 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4128 "..\pars.fsy"
                                 "?" 
                   )
# 4128 "..\pars.fsy"
                 : 'operatorName));
# 14666 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4129 "..\pars.fsy"
                               "&" 
                   )
# 4129 "..\pars.fsy"
                 : 'operatorName));
# 14676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4130 "..\pars.fsy"
                                   "&&" 
                   )
# 4130 "..\pars.fsy"
                 : 'operatorName));
# 14686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4131 "..\pars.fsy"
                                   "||" 
                   )
# 4131 "..\pars.fsy"
                 : 'operatorName));
# 14696 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4132 "..\pars.fsy"
                                        ":=" 
                   )
# 4132 "..\pars.fsy"
                 : 'operatorName));
# 14706 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4134 "..\pars.fsy"
                             if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                  deprecatedOperator (lhs parseState); 
                             _1 
                   )
# 4134 "..\pars.fsy"
                 : 'operatorName));
# 14719 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4137 "..\pars.fsy"
                                      _1 
                   )
# 4137 "..\pars.fsy"
                 : 'operatorName));
# 14730 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4138 "..\pars.fsy"
                                   ".." 
                   )
# 4138 "..\pars.fsy"
                 : 'operatorName));
# 14740 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4139 "..\pars.fsy"
                                           ".. .." 
                   )
# 4139 "..\pars.fsy"
                 : 'operatorName));
# 14750 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4141 "..\pars.fsy"
                             if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                             fst _1 
                   )
# 4141 "..\pars.fsy"
                 : 'operatorName));
# 14763 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4146 "..\pars.fsy"
                             if not (String.isUpper _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                             _1 
                   )
# 4146 "..\pars.fsy"
                 : 'barName));
# 14775 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4151 "..\pars.fsy"
                             [_2] 
                   )
# 4151 "..\pars.fsy"
                 : 'barNames));
# 14786 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'barName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4153 "..\pars.fsy"
                             _3 :: _1 
                   )
# 4153 "..\pars.fsy"
                 : 'barNames));
# 14798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4157 "..\pars.fsy"
                            _1 
                   )
# 4157 "..\pars.fsy"
                 : 'identOrOp));
# 14809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4159 "..\pars.fsy"
                            _1 
                   )
# 4159 "..\pars.fsy"
                 : 'identOrOp));
# 14820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4165 "..\pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4165 "..\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4167 "..\pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4167 "..\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14842 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4169 "..\pars.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _3 in LongIdentWithDots(_1 :: lid, rhs parseState 2 :: dotms) 
                   )
# 4169 "..\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14854 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4171 "..\pars.fsy"
                            (* silent recovery *) LongIdentWithDots([_1],[rhs parseState 2]) 
                   )
# 4171 "..\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14865 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4176 "..\pars.fsy"
                                      _1 
                   )
# 4176 "..\pars.fsy"
                 : 'nameop));
# 14876 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4179 "..\pars.fsy"
                                     
                   )
# 4179 "..\pars.fsy"
                 : 'topSeparator));
# 14886 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4180 "..\pars.fsy"
                                               
                   )
# 4180 "..\pars.fsy"
                 : 'topSeparator));
# 14896 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4181 "..\pars.fsy"
                                     
                   )
# 4181 "..\pars.fsy"
                 : 'topSeparator));
# 14906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4184 "..\pars.fsy"
                                                            
                   )
# 4184 "..\pars.fsy"
                 : 'topSeparators));
# 14917 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4185 "..\pars.fsy"
                                                      
                   )
# 4185 "..\pars.fsy"
                 : 'topSeparators));
# 14929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4188 "..\pars.fsy"
                                     
                   )
# 4188 "..\pars.fsy"
                 : 'interactiveSeparator));
# 14939 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4189 "..\pars.fsy"
                                     
                   )
# 4189 "..\pars.fsy"
                 : 'interactiveSeparator));
# 14949 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4192 "..\pars.fsy"
                                                                    
                   )
# 4192 "..\pars.fsy"
                 : 'interactiveSeparators));
# 14960 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4193 "..\pars.fsy"
                                                                      
                   )
# 4193 "..\pars.fsy"
                 : 'interactiveSeparators));
# 14972 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4196 "..\pars.fsy"
                                                                          
                   )
# 4196 "..\pars.fsy"
                 : 'opt_interactiveSeparators));
# 14984 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4197 "..\pars.fsy"
                                                  
                   )
# 4197 "..\pars.fsy"
                 : 'opt_interactiveSeparators));
# 14994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4200 "..\pars.fsy"
                                                          
                   )
# 4200 "..\pars.fsy"
                 : 'opt_topSeparators));
# 15006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4201 "..\pars.fsy"
                                                
                   )
# 4201 "..\pars.fsy"
                 : 'opt_topSeparators));
# 15016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4204 "..\pars.fsy"
                                     
                   )
# 4204 "..\pars.fsy"
                 : 'seps));
# 15026 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4205 "..\pars.fsy"
                                     
                   )
# 4205 "..\pars.fsy"
                 : 'seps));
# 15036 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4206 "..\pars.fsy"
                                               
                   )
# 4206 "..\pars.fsy"
                 : 'seps));
# 15046 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4207 "..\pars.fsy"
                                               
                   )
# 4207 "..\pars.fsy"
                 : 'seps));
# 15056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4212 "..\pars.fsy"
                             
                   )
# 4212 "..\pars.fsy"
                 : 'declEnd));
# 15066 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4214 "..\pars.fsy"
                               
                   )
# 4214 "..\pars.fsy"
                 : 'declEnd));
# 15076 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4216 "..\pars.fsy"
                            
                   )
# 4216 "..\pars.fsy"
                 : 'declEnd));
# 15086 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4221 "..\pars.fsy"
                            
                   )
# 4221 "..\pars.fsy"
                 : 'opt_declEnd));
# 15096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4223 "..\pars.fsy"
                             
                   )
# 4223 "..\pars.fsy"
                 : 'opt_declEnd));
# 15106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4225 "..\pars.fsy"
                            
                   )
# 4225 "..\pars.fsy"
                 : 'opt_declEnd));
# 15116 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4227 "..\pars.fsy"
                            
                   )
# 4227 "..\pars.fsy"
                 : 'opt_declEnd));
# 15126 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4230 "..\pars.fsy"
                                    
                   )
# 4230 "..\pars.fsy"
                 : 'opt_ODECLEND));
# 15136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4231 "..\pars.fsy"
                                    
                   )
# 4231 "..\pars.fsy"
                 : 'opt_ODECLEND));
# 15146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4234 "..\pars.fsy"
                                     deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs parseState); () 
                   )
# 4234 "..\pars.fsy"
                 : 'deprecated_opt_equals));
# 15156 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4235 "..\pars.fsy"
                                      
                   )
# 4235 "..\pars.fsy"
                 : 'deprecated_opt_equals));
# 15166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4238 "..\pars.fsy"
                                     
                   )
# 4238 "..\pars.fsy"
                 : 'opt_OBLOCKSEP));
# 15176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4239 "..\pars.fsy"
                                    
                   )
# 4239 "..\pars.fsy"
                 : 'opt_OBLOCKSEP));
# 15186 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4242 "..\pars.fsy"
                                
                   )
# 4242 "..\pars.fsy"
                 : 'opt_seps));
# 15197 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4243 "..\pars.fsy"
                                
                   )
# 4243 "..\pars.fsy"
                 : 'opt_seps));
# 15207 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4246 "..\pars.fsy"
                               true 
                   )
# 4246 "..\pars.fsy"
                 : 'opt_rec));
# 15217 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4247 "..\pars.fsy"
                               false 
                   )
# 4247 "..\pars.fsy"
                 : 'opt_rec));
# 15227 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4250 "..\pars.fsy"
                               
                   )
# 4250 "..\pars.fsy"
                 : 'opt_bar));
# 15237 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4251 "..\pars.fsy"
                               
                   )
# 4251 "..\pars.fsy"
                 : 'opt_bar));
# 15247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4254 "..\pars.fsy"
                                  true 
                   )
# 4254 "..\pars.fsy"
                 : 'opt_inline));
# 15257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4255 "..\pars.fsy"
                                  false 
                   )
# 4255 "..\pars.fsy"
                 : 'opt_inline));
# 15267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4258 "..\pars.fsy"
                                   true 
                   )
# 4258 "..\pars.fsy"
                 : 'opt_mutable));
# 15277 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4259 "..\pars.fsy"
                                   false 
                   )
# 4259 "..\pars.fsy"
                 : 'opt_mutable));
# 15287 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4262 "..\pars.fsy"
                               
                   )
# 4262 "..\pars.fsy"
                 : 'doToken));
# 15297 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4263 "..\pars.fsy"
                               
                   )
# 4263 "..\pars.fsy"
                 : 'doToken));
# 15307 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4266 "..\pars.fsy"
                                
                   )
# 4266 "..\pars.fsy"
                 : 'doneDeclEnd));
# 15317 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4267 "..\pars.fsy"
                                    
                   )
# 4267 "..\pars.fsy"
                 : 'doneDeclEnd));
# 15327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4270 "..\pars.fsy"
                                  mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs parseState); 
                   )
# 4270 "..\pars.fsy"
                 : 'structOrBegin));
# 15337 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4271 "..\pars.fsy"
                                 
                   )
# 4271 "..\pars.fsy"
                 : 'structOrBegin));
# 15347 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4274 "..\pars.fsy"
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 4274 "..\pars.fsy"
                 : 'sigOrBegin));
# 15357 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4275 "..\pars.fsy"
                                 
                   )
# 4275 "..\pars.fsy"
                 : 'sigOrBegin));
# 15367 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4278 "..\pars.fsy"
                                 mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 4278 "..\pars.fsy"
                 : 'colonOrEquals));
# 15377 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4279 "..\pars.fsy"
                                  
                   )
# 4279 "..\pars.fsy"
                 : 'colonOrEquals));
# 15387 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4282 "..\pars.fsy"
                               
                   )
# 4282 "..\pars.fsy"
                 : 'opt_HASH));
# 15397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4285 "..\pars.fsy"
                                                     
                   )
# 4285 "..\pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15407 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4286 "..\pars.fsy"
                                                     
                   )
# 4286 "..\pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4287 "..\pars.fsy"
                              
                   )
# 4287 "..\pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15427 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4290 "..\pars.fsy"
                                                 
                   )
# 4290 "..\pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 15437 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4291 "..\pars.fsy"
                              
                   )
# 4291 "..\pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 15447 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4294 "..\pars.fsy"
                                                         
                   )
# 4294 "..\pars.fsy"
                 : 'type_keyword));
# 15458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4295 "..\pars.fsy"
                                        
                   )
# 4295 "..\pars.fsy"
                 : 'type_keyword));
# 15468 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4296 "..\pars.fsy"
                                
                   )
# 4296 "..\pars.fsy"
                 : 'type_keyword));
# 15478 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4299 "..\pars.fsy"
                                                             
                   )
# 4299 "..\pars.fsy"
                 : 'module_keyword));
# 15489 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4300 "..\pars.fsy"
                                          
                   )
# 4300 "..\pars.fsy"
                 : 'module_keyword));
# 15499 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4301 "..\pars.fsy"
                                  
                   )
# 4301 "..\pars.fsy"
                 : 'module_keyword));
# 15509 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4304 "..\pars.fsy"
                                                     
                   )
# 4304 "..\pars.fsy"
                 : 'rbrace));
# 15520 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4305 "..\pars.fsy"
                                          
                   )
# 4305 "..\pars.fsy"
                 : 'rbrace));
# 15530 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4306 "..\pars.fsy"
                                  
                   )
# 4306 "..\pars.fsy"
                 : 'rbrace));
# 15540 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4309 "..\pars.fsy"
                                                     
                   )
# 4309 "..\pars.fsy"
                 : 'rparen));
# 15551 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4310 "..\pars.fsy"
                                          
                   )
# 4310 "..\pars.fsy"
                 : 'rparen));
# 15561 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4311 "..\pars.fsy"
                                  
                   )
# 4311 "..\pars.fsy"
                 : 'rparen));
# 15571 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4314 "..\pars.fsy"
                                                           
                   )
# 4314 "..\pars.fsy"
                 : 'oblockend));
# 15582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4315 "..\pars.fsy"
                                             
                   )
# 4315 "..\pars.fsy"
                 : 'oblockend));
# 15592 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4316 "..\pars.fsy"
                                     
                   )
# 4316 "..\pars.fsy"
                 : 'oblockend));
# 15602 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4319 "..\pars.fsy"
                                            false 
                   )
# 4319 "..\pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15612 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4320 "..\pars.fsy"
                                              false 
                   )
# 4320 "..\pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15622 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4321 "..\pars.fsy"
                                              false 
                   )
# 4321 "..\pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4322 "..\pars.fsy"
                                                 false 
                   )
# 4322 "..\pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4323 "..\pars.fsy"
                                   _1 
                   )
# 4323 "..\pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15653 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4326 "..\pars.fsy"
                                            false 
                   )
# 4326 "..\pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4327 "..\pars.fsy"
                                              false 
                   )
# 4327 "..\pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4328 "..\pars.fsy"
                                              false 
                   )
# 4328 "..\pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15683 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4329 "..\pars.fsy"
                                              false 
                   )
# 4329 "..\pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4330 "..\pars.fsy"
                                                 false 
                   )
# 4330 "..\pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4331 "..\pars.fsy"
                                   _1 
                   )
# 4331 "..\pars.fsy"
                 : 'ends_coming_soon_or_recover));
|]
# 15715 "pars.fs"
let tables () : Internal.Utilities.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Internal.Utilities.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 195;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let signatureFile lexer lexbuf : Ast.ParsedSigFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let implementationFile lexer lexbuf : Ast.ParsedImplFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
let interaction lexer lexbuf : Ast.ParsedFsiInteraction =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 4))
